{"version":3,"sources":["../../src/models/page.js"],"names":["Page","mongoose","model","Schema","website","type","Types","ObjectId","ref","content","publishedVersion","validatePageCreate","data","schema","currentPageId","Joi","objectId","websiteId","required","duplicate","validate","validatePageSave","pagesStructure","array","object","validatePagePublishRevert","publishOne"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEO,IAAMA,IAAI,GAAGC,qBAASC,KAAT,CAChB,MADgB,EAEhB,IAAID,qBAASE,MAAb,CAAoB;AAChBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAEJ,qBAASE,MAAT,CAAgBG,KAAhB,CAAsBC,QADvB;AAELC,IAAAA,GAAG,EAAE;AAFA,GADO;AAKhBC,EAAAA,OAAO,EAAE,EALO;AAMhBC,EAAAA,gBAAgB,EAAE;AANF,CAApB,CAFgB,CAAb;;;;AAYA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAc;AAC5C,MAAMC,MAAM,GAAG;AACXC,IAAAA,aAAa,EAAEC,gBAAIC,QAAJ,EADJ;AAEXC,IAAAA,SAAS,EAAEF,gBAAIC,QAAJ,GAAeE,QAAf,EAFA;AAGXC,IAAAA,SAAS,EAAEJ;AAHA,GAAf;AAKA,SAAOA,gBAAIK,QAAJ,CAAaR,IAAb,EAAmBC,MAAnB,CAAP;AACH,CAPM;;;;AASA,IAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACT,IAAD,EAAc;AAC1C,MAAMC,MAAM,GAAG;AACXS,IAAAA,cAAc,EAAEP,gBAAIQ,KAAJ,EADL;AAEXd,IAAAA,OAAO,EAAEM,gBAAIS,MAAJ;AAFE,GAAf;AAIA,SAAOT,gBAAIK,QAAJ,CAAaR,IAAb,EAAmBC,MAAnB,CAAP;AACH,CANM;;;;AAQA,IAAMY,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACb,IAAD,EAAc;AACnD,MAAMC,MAAM,GAAG;AACXC,IAAAA,aAAa,EAAEC,gBAAIC,QAAJ,GAAeE,QAAf,EADJ;AAEXD,IAAAA,SAAS,EAAEF,gBAAIC,QAAJ,GAAeE,QAAf,EAFA;AAGXI,IAAAA,cAAc,EAAEP,gBAAIQ,KAAJ,GAAYL,QAAZ,EAHL;AAIXQ,IAAAA,UAAU,EAAEX;AAJD,GAAf;AAMA,SAAOA,gBAAIK,QAAJ,CAAaR,IAAb,EAAmBC,MAAnB,CAAP;AACH,CARM,C,CAUP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import Joi from 'joi'\nimport mongoose from 'mongoose'\n\nexport const Page = mongoose.model(\n    'Page',\n    new mongoose.Schema({\n        website: {\n            type: mongoose.Schema.Types.ObjectId,\n            ref: 'Websites',\n        },\n        content: {},\n        publishedVersion: {},\n    })\n)\n\nexport const validatePageCreate = (data: {}) => {\n    const schema = {\n        currentPageId: Joi.objectId(),\n        websiteId: Joi.objectId().required(),\n        duplicate: Joi.boolean(),\n    }\n    return Joi.validate(data, schema)\n}\n\nexport const validatePageSave = (data: {}) => {\n    const schema = {\n        pagesStructure: Joi.array(),\n        content: Joi.object(),\n    }\n    return Joi.validate(data, schema)\n}\n\nexport const validatePagePublishRevert = (data: {}) => {\n    const schema = {\n        currentPageId: Joi.objectId().required(),\n        websiteId: Joi.objectId().required(),\n        pagesStructure: Joi.array().required(),\n        publishOne: Joi.boolean(),\n    }\n    return Joi.validate(data, schema)\n}\n\n// export const validatePageUpdate = page => {\n//     const schema = {\n//         website: Joi.objectId(),\n//         content: Joi.object(),\n//         publishedVersion: Joi.object(),\n//     }\n\n//     return Joi.validate(page, schema)\n// }\n"],"file":"page.js"}