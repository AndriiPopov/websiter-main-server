{"version":3,"sources":["../../src/models/user.test.js"],"names":["require","User","jwt","config","mongoose","describe","it","payload","_id","Types","ObjectId","toHexString","user","token","generateAuthToken","decoded","verify","get","expect","toMatchObject"],"mappings":";;eAAiBA,OAAO,CAAC,QAAD,C;IAAhBC,I,YAAAA,I;;AACR,IAAMC,GAAG,GAAGF,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMI,QAAQ,GAAGJ,OAAO,CAAC,UAAD,CAAxB;;AAEAK,QAAQ,CAAC,wBAAD,EAA2B,YAAM;AACrCC,EAAAA,EAAE,CAAC,2BAAD,EAA8B,YAAM;AAClC,QAAMC,OAAO,GAAG;AACZC,MAAAA,GAAG,EAAE,IAAIJ,QAAQ,CAACK,KAAT,CAAeC,QAAnB,GAA8BC,WAA9B;AADO,KAAhB;AAGA,QAAMC,IAAI,GAAG,IAAIX,IAAJ,CAASM,OAAT,CAAb;AACA,QAAMM,KAAK,GAAGD,IAAI,CAACE,iBAAL,EAAd;AACA,QAAMC,OAAO,GAAGb,GAAG,CAACc,MAAJ,CAAWH,KAAX,EAAkBV,MAAM,CAACc,GAAP,CAAW,eAAX,CAAlB,CAAhB;AACAC,IAAAA,MAAM,CAACH,OAAD,CAAN,CAAgBI,aAAhB,CAA8BZ,OAA9B;AACH,GARC,CAAF;AASH,CAVO,CAAR","sourcesContent":["const { User } = require('./user')\nconst jwt = require('jsonwebtoken')\nconst config = require('config')\nconst mongoose = require('mongoose')\n\ndescribe('user.generateAuthToken', () => {\n    it('should return a valid JWT', () => {\n        const payload = {\n            _id: new mongoose.Types.ObjectId().toHexString(),\n        }\n        const user = new User(payload)\n        const token = user.generateAuthToken()\n        const decoded = jwt.verify(token, config.get('jwtPrivateKey'))\n        expect(decoded).toMatchObject(payload)\n    })\n})\n"],"file":"user.test.js"}