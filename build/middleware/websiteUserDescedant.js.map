{"version":3,"sources":["../../src/middleware/websiteUserDescedant.js"],"names":["req","res","next","user","websites","some","website","toString","params","id","status","send"],"mappings":";;;;;;;;;;;;;;;;;;+BAMgB,iBAAOA,GAAP,EAAqBC,GAArB,EAAqCC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA,iBAERF,GAAG,CAACG,IAAJ,CAASC,QAAT,CAAkBC,IAAlB,CACI,UAAAC,OAAO;AAAA,qBAAIA,OAAO,CAACC,QAAR,OAAuBP,GAAG,CAACQ,MAAJ,CAAWC,EAAX,CAAcF,QAAd,EAA3B;AAAA,aADX,CAFQ;AAAA;AAAA;AAAA;;AAMRL,YAAAA,IAAI;AANI;AAAA;;AAAA;AAAA,6CAQDD,GAAG,CACLS,MADE,CACK,GADL,EAEFC,IAFE,CAEG,8CAFH,CARC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import type { $Request, $Response, NextFunction, Middleware } from 'express'\n\ntype reqType = {\n    user: { websites: [string] },\n} & $Request\n\nexport default (async (req: reqType, res: $Response, next: NextFunction) => {\n    if (\n        req.user.websites.some(\n            website => website.toString() === req.params.id.toString()\n        )\n    ) {\n        next()\n    } else {\n        return res\n            .status(404)\n            .send('The website with the given ID was not found.')\n    }\n}: Middleware)\n"],"file":"websiteUserDescedant.js"}