{"version":3,"sources":["../../src/middleware/action.js"],"names":["req","res","next","currentAction","header","parseInt","user","status","send","save"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;+BAKgB,iBAAOA,GAAP,EAAqBC,GAArB,EAAqCC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AACNC,YAAAA,aADM,GACUH,GAAG,CAACI,MAAJ,CAAW,eAAX,CADV;AAAA;;AAAA,kBAGJC,QAAQ,CAACF,aAAD,CAAR,KAA4BH,GAAG,CAACM,IAAJ,CAASH,aAHjC;AAAA;AAAA;AAAA;;AAIJF,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,oBAArB;AAJI;AAAA;;AAAA;AAMJR,YAAAA,GAAG,CAACM,IAAJ,CAASH,aAAT,GAAyBH,GAAG,CAACM,IAAJ,CAASH,aAAT,GAAyB,CAAlD;AANI;AAAA,mBAOEH,GAAG,CAACM,IAAJ,CAASG,IAAT,EAPF;;AAAA;AAQJP,YAAAA,IAAI;;AARA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWRD,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,oBAArB;;AAXQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import jwt from 'jsonwebtoken'\nimport config from 'config'\nimport { User } from '../models/user'\nimport type { $Request, $Response, NextFunction, Middleware } from 'express'\nimport type { userReqType } from '../custom-flow-types'\ntype reqType = userReqType & $Request\n\nexport default (async (req: reqType, res: $Response, next: NextFunction) => {\n    const currentAction = req.header('currentAction')\n    try {\n        if (parseInt(currentAction) !== req.user.currentAction) {\n            res.status(412).send('Wrong action count')\n        } else {\n            req.user.currentAction = req.user.currentAction + 1\n            await req.user.save()\n            next()\n        }\n    } catch (ex) {\n        res.status(412).send('Wrong action count')\n    }\n}: Middleware)\n"],"file":"action.js"}