{"version":3,"sources":["components/SiteBuilderLayout/SiteBuilderLayout.module.css","components/SiteBuilderNavigation/Toolbar/Toolbar.module.css","components/UI/Buttons/BigColorPicker/BigColorPicker.module.css","components/UI/Checkbox/Checkbox.module.css","components/UI/ValueInput/ValueInput.module.css","components/UI/Buttons/SmallButtonDropDown/SmallButtonDropDown.module.css","components/UI/RangeInput/RangeInput.module.css","components/UI/TextInput/TextInput.module.css","components/UI/Buttons/BigButtonWithRadio/BigButtonWithRadio.module.css","components/UI/TextUI/SmallButtonTextEditor/SmallButtonTextEditor.module.css","components/UI/TextUI/ValueInputTextEditor/ValueInputTextEditor.module.css","components/UI/TextUI/SmallColorPickerTextEditor/SmallColorPickerTextEditor.module.css","components/UI/TextUI/SelectTextEditor/SelectTextEditor.module.css","components/SiteBuilderNavigation/Toolbar/ToolsSet/DropDownMenus/MenuStyleDD/MenuStyleDD.module.css","components/SiteBuilderNavigation/Toolbar/ToolsSet/DropDownMenus/MenuStyleDD/MenuStyleDDTopTabs/MenuStyleDDTopTabs.module.css","components/UI/Buttons/SideMenuButton/SideMenuButton.module.css","components/SiteBuilderNavigation/Toolbar/ToolsSet/DropDownMenus/MenuStyleDD/MenuStyleDDSettings/MenuStyleDDBorder/MenuStyleDDBorder.module.css","components/UI/Select/Select.module.css","components/SiteBuilderNavigation/Toolbar/ToolsSet/DropDownMenus/MenuItemsDD/MenuItemsDD.module.css","components/SiteBuilderNavigation/Toolbar/ToolsSet/DropDownMenus/MenuAddItemsDD/MenuAddItemsDD.module.css","components/SiteBuilderNavigation/Toolbar/ToolsSet/DropDownMenus/MenuAddItemsDD/MenuAddItemsDDSettings/MenuAddItemsDDSettings.module.css","components/SiteBuilderNavigation/Toolbar/ToolsSet/DropDownMenus/MenuAddItemsDD/MenuAddItemsDDTopTabs/MenuAddItemsDDTopTabs.module.css","containers/SiteBuilder/SiteBuilder.css.js","containers/SiteBuilder/fontsList.js","containers/SiteBuilder/scope-provider.js","containers/SiteBuilder/frame-provider.js","components/UI/Checkbox/Checkbox.js","utils/colorUtils.js","components/UI/Buttons/BigColorPicker/BigColorPicker.js","components/UI/ValueInput/ValueInput.js","components/UI/Buttons/SmallButtonDropDown/SmallButtonDropDown.js","components/UI/RangeInput/RangeInput.js","components/UI/TextInput/TextInput.js","components/SiteBuilderNavigation/Toolbar/ToolsSet/DropDownMenus/GoogleMapMenu/GoogleMapMenu.js","components/SiteBuilderNavigation/Toolbar/ToolsSet/TopMenuSections/Sections.js","components/UI/Buttons/BigButtonWithRadio/BigButtonWithRadio.js","components/SiteBuilderNavigation/Toolbar/ToolsSet/DropDownMenus/BoxAlignMenu/BoxAlignMenu.js","components/SiteBuilderNavigation/Toolbar/ToolsSet/DropDownMenus/BoxBorderMenu/BoxBorderMenu.js","components/SiteBuilderNavigation/Toolbar/ToolsSet/TopMenuSections/Boxes.js","components/UI/TextUI/SmallButtonTextEditor/SmallButtonTextEditor.js","components/UI/TextUI/ValueInputTextEditor/ValueInputTextEditor.js","components/UI/TextUI/SmallColorPickerTextEditor/SmallColorPickerTextEditor.js","components/UI/TextUI/SelectTextEditor/SelectTextEditor.js","components/SiteBuilderNavigation/Toolbar/ToolsSet/TopMenuSections/Text.js","components/SiteBuilderNavigation/Toolbar/ToolsSet/DropDownMenus/MenuStyleDD/MenuStyleDDTopTabs/MenuStyleDDTopTabs.js","components/UI/Buttons/SideMenuButton/SideMenuButton.js","components/SiteBuilderNavigation/Toolbar/ToolsSet/DropDownMenus/MenuStyleDD/MenuStyleDDSideMenu/MenuStyleDDSideMenu.js","components/SiteBuilderNavigation/Toolbar/ToolsSet/DropDownMenus/MenuStyleDD/MenuStyleDDSettings/MenuStyleDDColor/MenuStyleDDColor.js","components/SiteBuilderNavigation/Toolbar/ToolsSet/DropDownMenus/MenuStyleDD/MenuStyleDDSettings/MenuStyleDDSize/MenuStyleDDSize.js","components/SiteBuilderNavigation/Toolbar/ToolsSet/DropDownMenus/MenuStyleDD/MenuStyleDDSettings/MenuStyleDDBorder/MenuStyleDDBorder.js","components/UI/Select/Select.js","components/SiteBuilderNavigation/Toolbar/ToolsSet/DropDownMenus/MenuStyleDD/MenuStyleDDSettings/MenuStyleDDFont/MenuStyleDDFont.js","components/SiteBuilderNavigation/Toolbar/ToolsSet/DropDownMenus/MenuStyleDD/MenuStyleDDSettings/MenuStyleDDShadow/MenuStyleDDShadow.js","components/SiteBuilderNavigation/Toolbar/ToolsSet/DropDownMenus/MenuStyleDD/MenuStyleDD.js","components/SiteBuilderNavigation/Toolbar/ToolsSet/DropDownMenus/MenuAddItemsDD/MenuAddItemsDDSettings/MenuAddItemsDDSettings.js","components/SiteBuilderNavigation/Toolbar/ToolsSet/DropDownMenus/MenuAddItemsDD/MenuAddItemsDDTopTabs/MenuAddItemsDDTopTabs.js","components/SiteBuilderNavigation/Toolbar/ToolsSet/DropDownMenus/MenuAddItemsDD/MenuAddItemsDD.js","components/SiteBuilderNavigation/Toolbar/ToolsSet/TopMenuSections/MenuItems.js","components/SiteBuilderNavigation/Toolbar/ToolsSet/DropDownMenus/MenuItemsDD/MenuItemsDDList/MenuItemsDDList.js","components/SiteBuilderNavigation/Toolbar/ToolsSet/DropDownMenus/MenuItemsDD/MenuItemsDD.js","components/SiteBuilderNavigation/Toolbar/ToolsSet/TopMenuSections/Menu.js","components/SiteBuilderNavigation/Toolbar/Toolbar.js","components/SiteBuilderLayout/SiteBuilderLayout.js","containers/SiteBuilder/SiteBuilder.js"],"names":["module","exports","Content","ContentPreview","Toolbar","ToolSetsContainer","ColorDiv","Button","Table","StyleControls","OnCheckbox","Div","Input","Inline","Cell","Svg","Active","Select","SideMenu","SettingsContainer","CheckBoxesContainer","Hidden","PageInnerContent","margin","width","minHeight","fontsList","font","weights","subsets","memoizedCreateCacheWithScope","memoize","scope","createCache","stylisPlugins","stylisPluginExtraScope","ScopeProvider","props","react","core_browser_esm","value","children","memoizedCreateCacheWithContainer","weakMemoize","container","FrameProvider","lib","_ref","document","head","Checkbox","react_default","a","createElement","className","classes","data-testid","datatestid","type","radio","checked","onChange","e","target","title","rgbaToObj","rgba","rgbaArray","substring","indexOf","split","r","parseInt","g","b","parseFloat","objToRgba","color","concat","rgb","BigColorPicker","state","isVisible","handleOpen","_this","setState","handleClose","handleChange","startControlColor","changed","_this2","this","values","startButtonColor","withOnCheckbox","onOffChecked","valueKey","Aux","onClick","style","background","DropDownMenu","close","UI_Checkbox_Checkbox","onOffChanged","colSpan","react_color_lib","onChangeComplete","saveToHistory","changedStyleValues","includes","Component","ValueInput","undefined","min","max","SmallButtonDropDown","_Component","_getPrototypeOf2","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","inherits","createClass","key","inline","icon","RangeInput","hasBeenChanged","step","onMouseDown","callbackStop","window","addEventListener","dragMouseUp","removeEventListener","TextInput","connect","builder","present","chosenBoxesValues","dispatch","actions","isSection","mapOn","UI_TextInput_TextInput","mapAddress","UI_RangeInput_RangeInput","mapZoom","UI_ValueInput_ValueInput","mapSatellite","mapOuter","chosenSection","hoveredElement","activeElement","sectionValues","addSection","duplicateSection","deleteSection","moveUpSection","moveDownSection","setStateHover","setStateActive","ToolsSection","label","ToolsBlock","blockType","BigButton","buttonClicked","SmallButton","Buttons_BigColorPicker_BigColorPicker","backgroundOn","outerBackgroundOn","Buttons_SmallButtonDropDown_SmallButtonDropDown","dropDownType","DropDownMenus_GoogleMapMenu_GoogleMapMenu","height","space","pasteBox","BigButtonWithRadio","clicked","alignMode","alignBoxes","changeAlignMode","Buttons_BigButtonWithRadio_BigButtonWithRadio","boxesValues","borderOn","borderSize","borderHOffset","newValue","borderVOffset","borderBlur","borderInset","chosenBoxes","builderPresentState","bufferState","buffer","addBox","duplicateBox","deleteBox","moveUpBox","moveDownBox","zIndexUpBox","zIndexDownBox","copyBox","cutBox","enterBox","exitBox","BigButtonDropDown","DropDownMenus_BoxBorderMenu_BoxBorderMenu","left","top","DropDownMenus_BoxAlignMenu_BoxAlignMenu","textValues","chosenTextValues","classNames","push","property","join","preventDefault","textEditor","handleClick","ValueInputTextEditor","assertThisInitialized","inputRef","current","focus","React","createRef","startValue","ref","SmallColorPickerTextEditor","_","camelCase","onOffValue","SelectTextEditor","option","customStyles","menu","provided","objectSpread","selectContainer","options","filter","react_select_esm","styles","default","isClearable","isSearchable","fontFamilyOptions","map","fontStyles","data","isDisabled","isFocused","isSelected","fontFamily","singleValue","_ref2","weightStyles","_ref3","fontWeight","_ref4","TextUI_SmallButtonTextEditor_SmallButtonTextEditor","TextUI_ValueInputTextEditor_ValueInputTextEditor","TextUI_SmallColorPickerTextEditor_SmallColorPickerTextEditor","TextUI_SelectTextEditor_SelectTextEditor","MenuStyleDDTopTabs","currentLevel","levelChanged","currentState","stateChanged","SideMenuButton","addedClasses","active","MenuStyleDDSideMenu","Buttons_SideMenuButton_SideMenuButton","currentItem","MenuStyleDDColor","prefix","MenuStyleDDSize","MenuStyleDDBorder","side","sideChanged","charAt","toUpperCase","slice","defaultProps","fontTitleAlignOptions","fontTransformOptions","MenuStyleDDFont","UI_Select_Select","MenuStyleDDShadow","MenuStyleDD","level","sideMenu","handleLevelChange","handleStateChange","handleSideMenuChange","MenuStyleDD_MenuStyleDDTopTabs_MenuStyleDDTopTabs","MenuStyleDD_MenuStyleDDSideMenu_MenuStyleDDSideMenu","MenuStyleDDSettings_MenuStyleDDColor_MenuStyleDDColor","MenuStyleDDSettings_MenuStyleDDSize_MenuStyleDDSize","MenuStyleDDSettings_MenuStyleDDBorder_MenuStyleDDBorder","MenuStyleDDSettings_MenuStyleDDFont_MenuStyleDDFont","MenuStyleDDSettings_MenuStyleDDShadow_MenuStyleDDShadow","withDragDropContext","pagesStructure","website","items","name","all","path","id","forEach","page","toConsumableArray","setCurrentPageMain","currentPage","mainAll","nameChanged","currentType","newTab","newTabChanged","Sortly_default","itemRenderer","isHomePage","isHidden","isNotPublished","position","border","cursor","padding","paddingRight","marginBottom","marginLeft","outline","right","fill","url","linkChanged","MenuAddItemsDDTopTabs","typeChanged","editMode","addMenuItem","MenuAddItemsDD","currentItemValues","pageId","handleTypeChange","newMenuItem","index","itemsList","findIndex","el","newList","newMenuId","currentMenuId","insert","chooseItem","MenuAddItemsDD_MenuAddItemsDDTopTabs_MenuAddItemsDDTopTabs","MenuAddItemsDD_MenuAddItemsDDSettings_MenuAddItemsDDSettings","link","currentItems","item","doNotRebuild","DropDownMenus_MenuAddItemsDD_MenuAddItemsDD","removeItem","BigButtonWithCheckbox","hideItem","react_sortly_lib_default","connectDragSource","connectDropTarget","isDragging","isClosestDragging","opacity","onMove","newIndex","parent","find","MenuItemsDD","setCurrentItemChosen","handleRemove","newItems","remove","handleHideItem","hidden","ToolsSet","isActive","MenuItems","MenuItemsDD_MenuItemsDDList_MenuItemsDDList","DropDownMenus_MenuStyleDD_MenuStyleDD","DropDownMenus_MenuItemsDD_MenuItemsDD","menuOrientation","previewIsOn","preview","TopMenuSections_Sections","TopMenuSections_Boxes","TopMenuSections_Text","TopMenuSections_Menu","SiteBuilder","chosenTextEditor","handleChooseTextEditor","editor","pagesObjects","loadCurrentPageToBuilder","zoom","size","scope_provider_ScopeProvider","components_SiteBuilderLayout_SiteBuilderLayout","build_default","fonts","lib_default","msZoom","MozTransform","MozTransformOrigin","OTransform","OTransformOrigin","WebkitTransform","WebkitTransformOrigin","frame_provider_FrameProvider","html","body",".frame-root",".frame-content","deselectElements","sections","section","Section","pageZoom","sectionsOnPage"],"mappings":"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","file":"static/js/4.51ed8c77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"SiteBuilderLayout_Content__2YXI9\",\"ContentPreview\":\"SiteBuilderLayout_ContentPreview__Zwpok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2WbVO\",\"ToolSetsContainer\":\"Toolbar_ToolSetsContainer__1CT9l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColorDiv\":\"BigColorPicker_ColorDiv__q0RDc\",\"Button\":\"BigColorPicker_Button__1pzt7\",\"Table\":\"BigColorPicker_Table__3PsY5\",\"StyleControls\":\"BigColorPicker_StyleControls___L7UE\",\"OnCheckbox\":\"BigColorPicker_OnCheckbox__2aGo2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Div\":\"Checkbox_Div__wiawi\",\"Input\":\"Checkbox_Input__3miMT\",\"StyleControls\":\"Checkbox_StyleControls__1ZSe5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Div\":\"ValueInput_Div__NbhNl\",\"Input\":\"ValueInput_Input__24L_f\",\"StyleControls\":\"ValueInput_StyleControls__ToRFd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"SmallButtonDropDown_Button__1wWyC\",\"Inline\":\"SmallButtonDropDown_Inline__2vAww\",\"Table\":\"SmallButtonDropDown_Table__2uDTE\",\"Cell\":\"SmallButtonDropDown_Cell__ETJLQ\",\"Svg\":\"SmallButtonDropDown_Svg__3em5o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Div\":\"RangeInput_Div__1GrWK\",\"Input\":\"RangeInput_Input__1G7nR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Div\":\"TextInput_Div__zLuEE\",\"Input\":\"TextInput_Input__1yOsX\",\"StyleControls\":\"TextInput_StyleControls__1PkJp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"BigButtonWithRadio_Button__15V8x\",\"Table\":\"BigButtonWithRadio_Table__3bH8q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"SmallButtonTextEditor_Button__2HDJK\",\"Inline\":\"SmallButtonTextEditor_Inline__unMtv\",\"Table\":\"SmallButtonTextEditor_Table__q08sn\",\"Cell\":\"SmallButtonTextEditor_Cell__T4ti_\",\"Svg\":\"SmallButtonTextEditor_Svg__2TsOo\",\"Active\":\"SmallButtonTextEditor_Active__3LNbi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Div\":\"ValueInputTextEditor_Div__gPC1v\",\"Input\":\"ValueInputTextEditor_Input__3WD5R\",\"StyleControls\":\"ValueInputTextEditor_StyleControls__1sNMW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColorDiv\":\"SmallColorPickerTextEditor_ColorDiv__3aoIp\",\"Button\":\"SmallColorPickerTextEditor_Button__2rMjq\",\"Table\":\"SmallColorPickerTextEditor_Table__2pwLp\",\"StyleControls\":\"SmallColorPickerTextEditor_StyleControls__3LOaf\",\"OnCheckbox\":\"SmallColorPickerTextEditor_OnCheckbox__qnnXx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColorDiv\":\"SelectTextEditor_ColorDiv__1N016\",\"Button\":\"SelectTextEditor_Button__TLvZS\",\"Table\":\"SelectTextEditor_Table__cvK5v\",\"StyleControls\":\"SelectTextEditor_StyleControls__dQPJM\",\"OnCheckbox\":\"SelectTextEditor_OnCheckbox__1tTHb\",\"Select\":\"SelectTextEditor_Select__1tJX1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideMenu\":\"MenuStyleDD_SideMenu__mC-MA\",\"SettingsContainer\":\"MenuStyleDD_SettingsContainer__1_FCt\",\"Table\":\"MenuStyleDD_Table__3GVv3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckBoxesContainer\":\"MenuStyleDDTopTabs_CheckBoxesContainer__2CgkN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"SideMenuButton_Button__1rAyq\",\"Active\":\"SideMenuButton_Active__3GhK8\",\"Table\":\"SideMenuButton_Table__3LJA8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckBoxesContainer\":\"MenuStyleDDBorder_CheckBoxesContainer__LHepN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Div\":\"Select_Div__228ml\",\"Input\":\"Select_Input__2OlL7\",\"StyleControls\":\"Select_StyleControls__1_hYF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"MenuItemsDD_Toolbar__3X8YM\",\"ToolSetsContainer\":\"MenuItemsDD_ToolSetsContainer__1y-x0\",\"Content\":\"MenuItemsDD_Content__PD2LJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideMenu\":\"MenuAddItemsDD_SideMenu__PhlLa\",\"SettingsContainer\":\"MenuAddItemsDD_SettingsContainer__1xZ4k\",\"Table\":\"MenuAddItemsDD_Table__1W2Aw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckBoxesContainer\":\"MenuAddItemsDDSettings_CheckBoxesContainer__GnlGl\",\"Hidden\":\"MenuAddItemsDDSettings_Hidden__1RVJH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckBoxesContainer\":\"MenuAddItemsDDTopTabs_CheckBoxesContainer__36n8L\"};","export const PageInnerContent = {\n  margin: '0px auto',\n  width: '100%',\n  minHeight: '100%',\n};\n","export const fontsList = [\n    { font: 'Abel' },\n    { font: 'Allan', weights: ['400', '700'] },\n    { font: 'Amatic SC', weights: ['400', '700'] },\n    { font: 'Anton' },\n    { font: 'Arimo', weights: ['400', '400i', '700', '700i'] },\n    { font: 'Arvo', weights: ['400', '400i', '700', '700i'] },\n    { font: 'Berkshire Swash' },\n    { font: 'Bitter', weights: ['400', '400i', '700'] },\n    {\n        font: 'Cabin',\n        weights: ['400', '400i', '500', '500i', '600', '600i', '700', '700i'],\n    },\n    {\n        font: 'Dosis',\n        weights: ['200', '300', '400', '500', '600', '700', '800'],\n    },\n    { font: 'Fjalla One' },\n    { font: 'Francois One' },\n    { font: 'Gloria Hallelujah' },\n    { font: 'Great Vibes' },\n    { font: 'Hind', weights: ['300', '400', '500', '600', '700'] },\n    { font: 'Inconsolata', weights: ['400', '700'] },\n    { font: 'Indie Flower' },\n    {\n        font: 'Lato',\n        weights: [\n            '100',\n            '100i',\n            '300',\n            '300i',\n            '400',\n            '400i',\n            '700',\n            '700i',\n            '900',\n            '900i',\n        ],\n    },\n    { font: 'Lobster' },\n    { font: 'Lobster Two', weights: ['400', '400i', '700', '700i'] },\n    { font: 'Lora', weights: ['400', '400i', '700', '700i'] },\n    {\n        font: 'Merriweather Sans',\n        weights: ['300', '300i', '400', '400i', '700', '700i', '800', '800i'],\n    },\n    {\n        font: 'Merriweather',\n        weights: ['300', '300i', '400', '400i', '700', '700i', '900', '900i'],\n    },\n    { font: 'Monoton' },\n    {\n        font: 'Montserrat',\n        weights: [\n            '100',\n            '100i',\n            '200',\n            '200i',\n            '300',\n            '300i',\n            '400',\n            '400i',\n            '500',\n            '500i',\n            '600',\n            '600i',\n            '700',\n            '700i',\n            '800',\n            '800i',\n            '900',\n            '900i',\n        ],\n    },\n    {\n        font: 'Muli',\n        weights: [\n            '200',\n            '200i',\n            '300',\n            '300i',\n            '400',\n            '400i',\n            '600',\n            '600i',\n            '700',\n            '700i',\n            '800',\n            '800i',\n            '900',\n            '900i',\n        ],\n    },\n    { font: 'Noto Sans', weights: ['400', '400i', '700', '700i'] },\n    { font: 'Noto Serif', weights: ['400', '400i', '700', '700i'] },\n    {\n        font: 'Nunito',\n        weights: [\n            '200',\n            '200i',\n            '300',\n            '300i',\n            '400',\n            '400i',\n            '600',\n            '600i',\n            '700',\n            '700i',\n            '800',\n            '800i',\n            '900',\n            '900i',\n        ],\n    },\n    { font: 'Open Sans Condensed', weights: ['300', '300i', '700'] },\n    {\n        font: 'Open Sans',\n        weights: [\n            '300',\n            '300i',\n            '400',\n            '400i',\n            '600',\n            '600i',\n            '700',\n            '700i',\n            '800',\n            '800i',\n        ],\n    },\n    { font: 'Orbitron', weights: ['400', '500', '700', '900'] },\n    { font: 'Oswald', weights: ['200', '300', '400', '500', '600', '700'] },\n    { font: 'Oxygen Mono' },\n    { font: 'Oxygen', weights: ['300', '400', '700'] },\n    { font: 'PT Sans Narrow', weights: ['400', '700'] },\n    { font: 'PT Sans', weights: ['400', '400i', '700', '700i'] },\n    { font: 'PT Serif', weights: ['400', '400i', '700', '700i'] },\n    {\n        font: 'Playfair Display',\n        weights: ['400', '400i', '700', '700i', '900', '900i'],\n    },\n    { font: 'Raleway Dots' },\n    {\n        font: 'Raleway',\n        weights: [\n            '100',\n            '100i',\n            '200',\n            '200i',\n            '300',\n            '300i',\n            '400',\n            '400i',\n            '500',\n            '500i',\n            '600',\n            '600i',\n            '700',\n            '700i',\n            '800',\n            '800i',\n            '900',\n            '900i',\n        ],\n    },\n    {\n        font: 'Roboto Condensed',\n        weights: ['300', '300i', '400', '400i', '700', '700i'],\n    },\n    {\n        font: 'Roboto Mono',\n        weights: [\n            '100',\n            '100i',\n            '300',\n            '300i',\n            '400',\n            '400i',\n            '500',\n            '500i',\n            '700',\n            '700i',\n        ],\n    },\n    { font: 'Roboto Slab', weights: ['100', '300', '400', '700'] },\n    {\n        font: 'Roboto',\n        weights: [\n            '100',\n            '100i',\n            '300',\n            '300i',\n            '400',\n            '400i',\n            '500',\n            '500i',\n            '700',\n            '700i',\n            '900',\n            '900i',\n        ],\n    },\n    { font: 'Satisfy' },\n    { font: 'Shadows Into Light' },\n    { font: 'Shrikhand' },\n    { font: 'Slabo 27px' },\n    {\n        font: 'Source Sans Pro',\n        weights: [\n            '200',\n            '200i',\n            '300',\n            '300i',\n            '400',\n            '400i',\n            '600',\n            '600i',\n            '700',\n            '700i',\n            '900',\n            '900i',\n        ],\n    },\n    {\n        font: 'Titillium Web',\n        weights: [\n            '200',\n            '200i',\n            '300',\n            '300i',\n            '400',\n            '400i',\n            '600',\n            '600i',\n            '700',\n            '700i',\n            '900',\n        ],\n    },\n    { font: 'Ubuntu Condensed' },\n    { font: 'Ubuntu Mono', weights: ['400', '400i', '700', '700i'] },\n    {\n        font: 'Ubuntu',\n        weights: ['300', '300i', '400', '400i', '500', '500i', '700', '700i'],\n    },\n    { font: 'Yanone Kaffeesatz', weights: ['200', '300', '400', '700'] },\n]\n\nexport const subsets = ['cyrillic-ext', 'greek']\n\n// export const dofonts = () => {\n// var fontsText='//fonts.googleapis.com/css?family=Abel|Allan:400,700|Amatic+SC:400,700|Anton|Arimo:400,400i,700,700i|Arvo:400,400i,700,700i|Berkshire+Swash|Bitter:400,400i,700|Cabin:400,400i,500,500i,600,600i,700,700i|Dosis:200,300,400,500,600,700,800|Fjalla+One|Francois+One|Gloria+Hallelujah|Great+Vibes|Hind:300,400,500,600,700|Inconsolata:400,700|Indie+Flower|Lato:100,100i,300,300i,400,400i,700,700i,900,900i|Lobster|Lobster+Two:400,400i,700,700i|Lora:400,400i,700,700i|Merriweather+Sans:300,300i,400,400i,700,700i,800,800i|Merriweather:300,300i,400,400i,700,700i,900,900i|Monoton|Montserrat:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i|Muli:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i|Noto+Sans:400,400i,700,700i|Noto+Serif:400,400i,700,700i|Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i|Open+Sans+Condensed:300,300i,700|Open+Sans:300,300i,400,400i,600,600i,700,700i,800,800i|Orbitron:400,500,700,900|Oswald:200,300,400,500,600,700|Oxygen+Mono|Oxygen:300,400,700|PT+Sans+Narrow:400,700|PT+Sans:400,400i,700,700i|PT+Serif:400,400i,700,700i|Playfair+Display:400,400i,700,700i,900,900i|Raleway+Dots|Raleway:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i|Roboto+Condensed:300,300i,400,400i,700,700i|Roboto+Mono:100,100i,300,300i,400,400i,500,500i,700,700i|Roboto+Slab:100,300,400,700|Roboto:100,100i,300,300i,400,400i,500,500i,700,700i,900,900i|Satisfy|Shadows+Into+Light|Shrikhand|Slabo+27px|Source+Sans+Pro:200,200i,300,300i,400,400i,600,600i,700,700i,900,900i|Titillium+Web:200,200i,300,300i,400,400i,600,600i,700,700i,900|Ubuntu+Condensed|Ubuntu+Mono:400,400i,700,700i|Ubuntu:300,300i,400,400i,500,500i,700,700i|Yanone+Kaffeesatz:200,300,400,700&amp;subset=cyrillic,cyrillic-ext,devanagari,greek,greek-ext,gujarati,hebrew,latin-ext,vietnamese';\n\n// fontsText=fontsText.replace(/\\+/g,' ');\n// fontsText=fontsText.split('=')[1];\n// fontsText=fontsText.split('&amp')[0];\n// var fontsText=fontsText.split('|');\n// var gfonts=[];\n// for(var i=0;i<fontsText.length;i++) {\n//   let font = {\n//     font: fontsText[i].split(':')[0],\n//   };\n//   if(fontsText[i].split(':').length>1)\n//     font.weights = fontsText[i].split(':')[1].split(',')\n//     gfonts.push(font);\n// }\n\n// console.log(JSON.stringify(gfonts));\n// }\n","import * as React from \"react\";\nimport createCache from \"@emotion/cache\";\nimport { CacheProvider } from \"@emotion/core\";\nimport memoize from \"@emotion/memoize\";\nimport stylisPluginExtraScope from \"stylis-plugin-extra-scope\";\n\nlet memoizedCreateCacheWithScope = memoize(scope => {\n  return createCache({\n    stylisPlugins: [stylisPluginExtraScope(scope)]\n  });\n});\n\nexport const ScopeProvider = props => {\n  return (\n    <CacheProvider value={memoizedCreateCacheWithScope(props.scope)}>\n      {props.children}\n    </CacheProvider>\n  );\n};","import * as React from \"react\";\nimport { CacheProvider } from \"@emotion/core\";\nimport createCache from \"@emotion/cache\";\nimport weakMemoize from \"@emotion/weak-memoize\";\nimport { FrameContextConsumer } from \"react-frame-component\";\n\nlet memoizedCreateCacheWithContainer = weakMemoize(container => {\n  let newCache = createCache({ container });\n  return newCache;\n});\n\nexport const FrameProvider = props => (\n  <FrameContextConsumer>\n    {({ document }) => {\n      return (\n        <CacheProvider value={memoizedCreateCacheWithContainer(document.head)}>\n          {props.children}\n        </CacheProvider>\n      );\n    }}\n  </FrameContextConsumer>\n);\n","import React from 'react'\n//import { connect } from 'react-redux';\n\n//import * as actions from '../../../store/actions/index';\nimport classes from './Checkbox.module.css'\n//import SmallButton from '../Buttons/SmallButton/SmallButton';\n\ntype Props = {\n    checked?: boolean,\n    title?: string,\n    onChange: Function,\n    datatestid?: string,\n    radio?: boolean,\n}\n\nexport const Checkbox = (props: Props) => {\n    return (\n        <div className={classes.Div}>\n            <label>\n                <input\n                    data-testid={props.datatestid}\n                    type={props.radio ? 'radio' : 'checkbox'}\n                    className={classes.Input}\n                    checked={props.checked || false}\n                    onChange={e => props.onChange(e.target.checked)}\n                />\n                {props.title}\n            </label>\n            {/* { props.changedStyleValues.includes(props.valueKey) ?\n                <div className={classes.StyleControls}>\n                    <SmallButton \n                        inline\n                        isSection={props.isSection}\n                        value={props.valueKey}\n                        icon='<svg width=\"16px\" height=\"16px\" viewBox=\"0 0 24 24\"><path xmlns=\"http://www.w3.org/2000/svg\" d=\"M15 1H9v2h6V1zm4.03 6.39l1.42-1.42c-.43-.51-.9-.99-1.41-1.41l-1.42 1.42C16.07 4.74 14.12 4 12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9 9-4.03 9-9c0-2.12-.74-4.07-1.97-5.61zM12 20c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm-.32-5H6.35c.57 1.62 1.82 2.92 3.41 3.56l-.11-.06 2.03-3.5zm5.97-4c-.57-1.6-1.78-2.89-3.34-3.54L12.26 11h5.39zm-7.04 7.83c.45.11.91.17 1.39.17 1.34 0 2.57-.45 3.57-1.19l-2.11-3.9-2.85 4.92zM7.55 8.99C6.59 10.05 6 11.46 6 13c0 .34.04.67.09 1h4.72L7.55 8.99zm8.79 8.14C17.37 16.06 18 14.6 18 13c0-.34-.04-.67-.09-1h-4.34l2.77 5.13zm-3.01-9.98C12.9 7.06 12.46 7 12 7c-1.4 0-2.69.49-3.71 1.29l2.32 3.56 2.72-4.7z\" ></path></svg>'\n                        buttonClicked=\"transition\" />\n                    <SmallButton\n                        inline\n                        isSection={props.isSection}\n                        value={props.valueKey}\n                        icon='<svg width=\"16px\" height=\"16px\" viewBox=\"0 0 24 24\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" ></path></svg>'\n                        buttonClicked=\"clearStyle\" />\n                </div> : null\n            } */}\n        </div>\n    )\n}\n\nexport default Checkbox\n","export const rgbaToObj = (rgba: string) => {\n    const rgbaArray = rgba.substring(rgba.indexOf('(') + 1, rgba.indexOf(')')).split(',');\n    return {\n        r: parseInt(rgbaArray[0]),\n        g: parseInt(rgbaArray[1]),\n        b: parseInt(rgbaArray[2]),\n        a: parseFloat(rgbaArray[3]) || 1,\n    }\n}\n\nexport const objToRgba = (color: Object) => `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.rgb.a})`;","import React, { Component } from 'react'\nimport { SketchPicker } from 'react-color'\n\nimport classes from './BigColorPicker.module.css'\nimport Aux from '../../../../hoc/Aux'\nimport DropDownMenu from '../../../../hoc/DropDownMenu/DropDownMenu'\n//import SmallButton from '../SmallButton/SmallButton';\nimport Checkbox from '../../Checkbox/Checkbox'\nimport { rgbaToObj, objToRgba } from '../../../../utils/colorUtils'\n\ntype Props = {\n    valueKey: string,\n    saveToHistory: Function,\n    title?: string,\n    changedStyleValues: Array<{}>,\n    changed: Function,\n    values: {},\n    withOnCheckbox?: boolean,\n    onOffChecked?: Function,\n    onOffChanged?: Function,\n}\n\ntype State = {\n    isVisible: boolean,\n}\n\nclass BigColorPicker extends Component<Props, State> {\n    state = {\n        isVisible: false,\n    }\n\n    startControlColor: string\n    startButtonColor: string | null\n\n    handleOpen = () => {\n        this.setState({ isVisible: !this.state.isVisible })\n    }\n\n    handleClose = () => {\n        this.setState({ isVisible: false })\n    }\n\n    handleChange = (color: { r: number, g: number, b: number, a: number }) => {\n        const rgba = objToRgba(color)\n        if (rgba !== this.startControlColor) {\n            this.props.changed(rgba)\n        }\n    }\n\n    render() {\n        const { props } = this\n        if (props.values) {\n            this.startButtonColor =\n                !props.withOnCheckbox || props.onOffChecked\n                    ? props.values[props.valueKey]\n                    : null\n\n            this.startControlColor = props.values[props.valueKey]\n        }\n        return (\n            <Aux>\n                <button\n                    data-testid=\"button\"\n                    className={classes.Button}\n                    onClick={() => this.handleOpen()}\n                >\n                    <table className={classes.Table}>\n                        <tbody>\n                            <tr>\n                                <td>\n                                    <div\n                                        className={classes.ColorDiv}\n                                        style={{\n                                            background:\n                                                this.startButtonColor ||\n                                                'rgba(200, 200, 200, 1)',\n                                        }}\n                                        data-testid=\"colorDiv\"\n                                    />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>{props.title}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </button>\n                {this.state.isVisible ? (\n                    <DropDownMenu close={this.handleClose}>\n                        <table data-testid=\"colorDropDown\">\n                            <tbody>\n                                {props.withOnCheckbox ? (\n                                    <tr>\n                                        <td>On</td>\n                                        <td className={classes.OnCheckbox}>\n                                            <Checkbox\n                                                onChange={props.onOffChanged}\n                                                checked={props.onOffChecked}\n                                            />\n                                        </td>\n                                    </tr>\n                                ) : null}\n                                <tr>\n                                    <td colSpan=\"2\">\n                                        <SketchPicker\n                                            data-testid=\"colorPicker\"\n                                            color={rgbaToObj(\n                                                this.startControlColor ||\n                                                    'rgba(200, 200, 200, 1)'\n                                            )}\n                                            onChange={this.handleChange}\n                                            onChangeComplete={\n                                                props.saveToHistory\n                                            }\n                                        />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </DropDownMenu>\n                ) : null}\n                {props.changedStyleValues.includes(props.valueKey) ? (\n                    <div className={classes.StyleControls}>\n                        {/* <SmallButton\n                            value={props.valueKey}\n                            icon='<svg width=\"16px\" height=\"16px\" viewBox=\"0 0 24 24\"><path xmlns=\"http://www.w3.org/2000/svg\" d=\"M15 1H9v2h6V1zm4.03 6.39l1.42-1.42c-.43-.51-.9-.99-1.41-1.41l-1.42 1.42C16.07 4.74 14.12 4 12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9 9-4.03 9-9c0-2.12-.74-4.07-1.97-5.61zM12 20c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm-.32-5H6.35c.57 1.62 1.82 2.92 3.41 3.56l-.11-.06 2.03-3.5zm5.97-4c-.57-1.6-1.78-2.89-3.34-3.54L12.26 11h5.39zm-7.04 7.83c.45.11.91.17 1.39.17 1.34 0 2.57-.45 3.57-1.19l-2.11-3.9-2.85 4.92zM7.55 8.99C6.59 10.05 6 11.46 6 13c0 .34.04.67.09 1h4.72L7.55 8.99zm8.79 8.14C17.37 16.06 18 14.6 18 13c0-.34-.04-.67-.09-1h-4.34l2.77 5.13zm-3.01-9.98C12.9 7.06 12.46 7 12 7c-1.4 0-2.69.49-3.71 1.29l2.32 3.56 2.72-4.7z\" ></path></svg>'\n                            clicked=\"transition\" />\n                        <SmallButton\n                            value={props.valueKey}\n                            icon='<svg width=\"16px\" height=\"16px\" viewBox=\"0 0 24 24\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" ></path></svg>'\n                            clicked=\"clearStyle\" /> */}\n                    </div>\n                ) : null}\n            </Aux>\n        )\n    }\n}\n\nexport default BigColorPicker\n","import React from 'react'\n\nimport classes from './ValueInput.module.css'\n//import SmallButton from '../Buttons/SmallButton/SmallButton';\n\ntype Props = {\n    min?: number,\n    max?: number,\n    title?: string,\n    changed: Function,\n    value?: number,\n    datatestid?: string,\n}\n\nconst ValueInput = (props: Props) => {\n    const handleChange = e => {\n        let value = parseInt(e.target.value) || 0\n        if (props.min !== undefined && value < props.min) {\n            value = props.min\n        }\n        if (props.max !== undefined && value > props.max) {\n            value = props.max\n        }\n        props.changed(value)\n    }\n\n    return (\n        <div className={classes.Div}>\n            {props.title}\n            <input\n                data-testid={props.datatestid || 'input'}\n                type=\"number\"\n                className={classes.Input}\n                value={props.value || 0}\n                onChange={handleChange}\n            />\n\n            {/* { props.changedStyleValues.includes(props.valueKey) ?\n                <div className={classes.StyleControls}>\n                    <SmallButton \n                        inline\n                        isSection={props.isSection}\n                        value={props.valueKey}\n                        icon='<svg width=\"16px\" height=\"16px\" viewBox=\"0 0 24 24\"><path xmlns=\"http://www.w3.org/2000/svg\" d=\"M15 1H9v2h6V1zm4.03 6.39l1.42-1.42c-.43-.51-.9-.99-1.41-1.41l-1.42 1.42C16.07 4.74 14.12 4 12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9 9-4.03 9-9c0-2.12-.74-4.07-1.97-5.61zM12 20c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm-.32-5H6.35c.57 1.62 1.82 2.92 3.41 3.56l-.11-.06 2.03-3.5zm5.97-4c-.57-1.6-1.78-2.89-3.34-3.54L12.26 11h5.39zm-7.04 7.83c.45.11.91.17 1.39.17 1.34 0 2.57-.45 3.57-1.19l-2.11-3.9-2.85 4.92zM7.55 8.99C6.59 10.05 6 11.46 6 13c0 .34.04.67.09 1h4.72L7.55 8.99zm8.79 8.14C17.37 16.06 18 14.6 18 13c0-.34-.04-.67-.09-1h-4.34l2.77 5.13zm-3.01-9.98C12.9 7.06 12.46 7 12 7c-1.4 0-2.69.49-3.71 1.29l2.32 3.56 2.72-4.7z\" ></path></svg>'\n                        clicked=\"transition\" />\n                    <SmallButton\n                        inline\n                        isSection={props.isSection}\n                        value={props.valueKey}\n                        icon='<svg width=\"16px\" height=\"16px\" viewBox=\"0 0 24 24\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" ></path></svg>'\n                        clicked=\"clearStyle\" />\n                </div> : null\n            } */}\n        </div>\n    )\n}\n\nexport default ValueInput\n","import React, { Component } from 'react'\nimport type { Node } from 'react'\n\nimport classes from './SmallButtonDropDown.module.css'\nimport AUX from '../../../../hoc/Aux'\nimport DropDownMenu from '../../../../hoc/DropDownMenu/DropDownMenu'\nimport Svg from '../../../Svg/Svg'\n\ntype Props = {\n    title?: string,\n    icon?: string,\n    inline?: boolean,\n    children?: Node,\n}\n\ntype State = {\n    isVisible?: boolean,\n}\n\nexport class SmallButtonDropDown extends Component<Props, State> {\n    state = {\n        isVisible: false,\n    }\n\n    handleOpen = () => {\n        this.setState({ isVisible: !this.state.isVisible })\n    }\n\n    handleClose = () => {\n        this.setState({ isVisible: false })\n    }\n\n    render() {\n        return (\n            <AUX>\n                <button\n                    data-testid=\"MyButton\"\n                    className={`${classes.Button} ${\n                        this.props.inline ? classes.Inline : ''\n                    }`}\n                    onClick={this.handleOpen}\n                >\n                    <table className={classes.Table}>\n                        <tbody>\n                            <tr>\n                                <td className={classes.Cell}>\n                                    <Svg\n                                        icon={this.props.icon}\n                                        className={classes.Svg}\n                                    />\n                                </td>\n                                <td className={classes.Cell}>\n                                    {this.props.title}\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </button>\n                {this.state.isVisible ? (\n                    <DropDownMenu close={this.handleClose}>\n                        {this.props.children}\n                    </DropDownMenu>\n                ) : null}\n            </AUX>\n        )\n    }\n}\n\nexport default SmallButtonDropDown\n","import React from 'react'\n\nimport classes from './RangeInput.module.css'\n\ntype Props = {\n    min?: number,\n    max?: number,\n    step?: number,\n    changed: Function,\n    saveToHistory?: Function,\n    title?: string,\n    value?: number,\n    datatestid?: string,\n}\n\nconst RangeInput = (props: Props) => {\n    const handleChange = e => {\n        let value = parseFloat(e.target.value) || 0\n\n        if (props.min !== undefined && value < props.min) {\n            value = props.min\n        }\n        if (props.max !== undefined && value > props.max) {\n            value = props.max\n        }\n        props.changed(value)\n        hasBeenChanged = true\n    }\n\n    let hasBeenChanged = false\n    const handleMouseDown = () => {\n        hasBeenChanged = false\n\n        const dragStart = callbackStop => {\n            const dragMouseUp = () => {\n                window.removeEventListener('mouseup', dragMouseUp)\n                callbackStop()\n            }\n            window.addEventListener('mouseup', dragMouseUp)\n        }\n\n        dragStart(() => {\n            if (hasBeenChanged) {\n                if (props.saveToHistory) {\n                    props.saveToHistory()\n                }\n            }\n        })\n    }\n\n    return (\n        <div className={classes.Div}>\n            {props.title}\n            <input\n                data-testid={props.datatestid || 'input'}\n                type=\"range\"\n                className={classes.Input}\n                value={props.value || 0}\n                onChange={handleChange}\n                step={props.step || 1}\n                min={props.min || 0}\n                max={props.max || 100}\n                onMouseDown={handleMouseDown}\n            />\n        </div>\n    )\n}\n\nexport default RangeInput\n","import React from 'react'\n\nimport classes from './TextInput.module.css'\n// import SmallButton from '../Buttons/SmallButton/SmallButton';\n\ntype Props = {\n    title?: string,\n    changed: Function,\n    value?: string | number,\n    datatestid?: string,\n}\n\nexport const TextInput = (props: Props) => {\n    return (\n        <div className={classes.Div}>\n            {props.title}\n            <input\n                data-testid={props.datatestid || 'MyInput'}\n                type=\"text\"\n                className={classes.Input}\n                value={props.value || ''}\n                onChange={e => props.changed(e.target.value)}\n            />\n\n            {/* { props.changedStyleValues.includes(props.valueKey) ?\n                <div className={classes.StyleControls}>\n                    <SmallButton \n                        inline\n                        isSection={props.isSection}\n                        value={props.valueKey}\n                        icon='<svg width=\"16px\" height=\"16px\" viewBox=\"0 0 24 24\"><path xmlns=\"http://www.w3.org/2000/svg\" d=\"M15 1H9v2h6V1zm4.03 6.39l1.42-1.42c-.43-.51-.9-.99-1.41-1.41l-1.42 1.42C16.07 4.74 14.12 4 12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9 9-4.03 9-9c0-2.12-.74-4.07-1.97-5.61zM12 20c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm-.32-5H6.35c.57 1.62 1.82 2.92 3.41 3.56l-.11-.06 2.03-3.5zm5.97-4c-.57-1.6-1.78-2.89-3.34-3.54L12.26 11h5.39zm-7.04 7.83c.45.11.91.17 1.39.17 1.34 0 2.57-.45 3.57-1.19l-2.11-3.9-2.85 4.92zM7.55 8.99C6.59 10.05 6 11.46 6 13c0 .34.04.67.09 1h4.72L7.55 8.99zm8.79 8.14C17.37 16.06 18 14.6 18 13c0-.34-.04-.67-.09-1h-4.34l2.77 5.13zm-3.01-9.98C12.9 7.06 12.46 7 12 7c-1.4 0-2.69.49-3.71 1.29l2.32 3.56 2.72-4.7z\" ></path></svg>'\n                        clicked=\"transition\" />\n                    <SmallButton\n                        inline\n                        isSection={props.isSection}\n                        value={props.valueKey}\n                        icon='<svg width=\"16px\" height=\"16px\" viewBox=\"0 0 24 24\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" ></path></svg>'\n                        clicked=\"clearStyle\" />\n                </div> : null\n            } */}\n        </div>\n    )\n}\n\nexport default TextInput\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../../../../../store/actions/index'\nimport ValueInput from '../../../../../UI/ValueInput/ValueInput'\nimport RangeInput from '../../../../../UI/RangeInput/RangeInput'\nimport Checkbox from '../../../../../UI/Checkbox/Checkbox'\nimport TextInput from '../../../../../UI/TextInput/TextInput'\n\ntype Props = {\n    isSection?: boolean,\n    values: {\n        mapOn?: boolean,\n        mapAddress?: string,\n        mapZoom?: number,\n        mapSatellite?: boolean,\n        mapOuter?: boolean,\n    },\n    changed: (\n        value: boolean | number | string,\n        property: string,\n        isSection?: boolean\n    ) => {},\n}\n\nexport const GoogleMapMenu = (props: Props) => {\n    return (\n        <table>\n            <tbody>\n                <tr>\n                    <td>On</td>\n                    <td colSpan=\"2\">\n                        <Checkbox\n                            datatestid=\"on\"\n                            checked={props.values.mapOn}\n                            onChange={value =>\n                                props.changed(value, 'mapOn', props.isSection)\n                            }\n                        />\n                    </td>\n                </tr>\n                <tr>\n                    <td>Address</td>\n                    <td colSpan=\"2\">\n                        <TextInput\n                            datatestid=\"address\"\n                            value={props.values.mapAddress}\n                            changed={value =>\n                                props.changed(\n                                    value,\n                                    'mapAddress',\n                                    props.isSection\n                                )\n                            }\n                        />\n                    </td>\n                </tr>\n                <tr>\n                    <td>Zoom</td>\n                    <td>\n                        <RangeInput\n                            datatestid=\"zoomR\"\n                            changed={value =>\n                                props.changed(value, 'mapZoom', props.isSection)\n                            }\n                            value={props.values.mapZoom}\n                            min={0}\n                            max={21}\n                        />\n                    </td>\n                    <td>\n                        <ValueInput\n                            datatestid=\"zoomI\"\n                            value={props.values.mapZoom}\n                            changed={value => {\n                                props.changed(value, 'mapZoom', props.isSection)\n                            }}\n                            min={0}\n                            max={21}\n                        />\n                    </td>\n                </tr>\n                <tr>\n                    <td>Satellite type</td>\n                    <td colSpan=\"2\">\n                        <Checkbox\n                            datatestid=\"satel\"\n                            checked={props.values.mapSatellite}\n                            onChange={value =>\n                                props.changed(\n                                    value,\n                                    'mapSatellite',\n                                    props.isSection\n                                )\n                            }\n                        />\n                    </td>\n                </tr>\n                {props.isSection ? (\n                    <tr>\n                        <td>Page wide</td>\n                        <td colSpan=\"2\">\n                            <Checkbox\n                                datatestid=\"outer\"\n                                checked={props.values.mapOuter}\n                                onChange={value =>\n                                    props.changed(\n                                        value,\n                                        'mapOuter',\n                                        props.isSection\n                                    )\n                                }\n                            />\n                        </td>\n                    </tr>\n                ) : null}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        values: props.values || state.builder.present.chosenBoxesValues,\n        changedStyleValues: state.builder.present.changedStyleValues,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        saveToHistory: () => {\n            dispatch(actions.saveToHistory())\n        },\n        changed: (color, valueKey, isSection) =>\n            dispatch(\n                actions.changeElementPropertyValue(\n                    color,\n                    valueKey,\n                    isSection,\n                    true\n                )\n            ),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GoogleMapMenu)\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../../../../store/actions/index';\nimport ToolsSection from '../ToolsSection/ToolsSection';\nimport ToolsBlock from '../ToolsSection/ToolsBlock/ToolsBlock';\nimport Aux from '../../../../../hoc/Aux';\nimport BigButton from '../../../../UI/Buttons/BigButton/BigButton';\nimport SmallButton from '../../../../UI/Buttons/SmallButton/SmallButton';\nimport BigColorPicker from '../../../../UI/Buttons/BigColorPicker/BigColorPicker';\nimport ValueInput from '../../../../UI/ValueInput/ValueInput';\nimport Checkbox from '../../../../UI/Checkbox/Checkbox';\nimport SmallButtonDropDown from '../../../../UI/Buttons/SmallButtonDropDown/SmallButtonDropDown';\nimport GoogleMapMenu from '../DropDownMenus/GoogleMapMenu/GoogleMapMenu';\n\nconst Sections = props =>  {\n    return (\n        <Aux>\n            <ToolsSection\n                label=\"Basic\" >\n                <ToolsBlock\n                    blockType=\"one\" >\n                    <BigButton isSection\n                        title=\"Add\"\n                        icon='<svg height=\"30\" viewBox=\"0 0 24 24\" width=\"30\"><path d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"></path></svg>'\n                        buttonClicked={() => props.addSection()} />\n                </ToolsBlock>\n                <ToolsBlock\n                    blockType=\"three\" >\n                    <SmallButton isSection\n                        title=\"Duplicate\"\n                        icon='<svg height=\"16\" viewBox=\"0 0 24 24\" width=\"16\"><path d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"></path></svg>'\n                        buttonClicked={() => props.duplicateSection()} />\n                    <SmallButton isSection\n                        title=\"Delete\"\n                        icon='<svg height=\"16\" viewBox=\"0 0 24 24\" width=\"16\"><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"></path><path d=\"M0 0h24v24H0z\" fill=\"none\"></path></svg>'\n                        buttonClicked={() => props.deleteSection()} />\n                </ToolsBlock>\n            </ToolsSection>\n            <ToolsSection label=\"Style\" >\n                <ToolsBlock blockType=\"one\" >\n                <BigColorPicker isSection\n                        title=\"Background\"\n                        valueKey=\"background\"\n                        color=\"rgba(30, 250, 100, 1)\"\n                        values={props.sectionValues}\n                        changedStyleValues={props.changedStyleValues}\n                        saveToHistory={() => props.saveToHistory()}\n                        changed={color => props.changed(color, 'background')}\n                        withOnCheckbox\n                        onOffChecked={props.sectionValues.backgroundOn}\n                        onOffChanged={value => props.changed(value, 'backgroundOn')} />\n                </ToolsBlock>\n                <ToolsBlock blockType=\"one\" >\n                    <BigColorPicker isSection\n                        title=\"Outer background\"\n                        valueKey=\"outerBackground\"\n                        color=\"rgba(30, 250, 100, 1)\"\n                        values={props.sectionValues}\n                        changedStyleValues={props.changedStyleValues}\n                        saveToHistory={() => props.saveToHistory()}\n                        changed={color => props.changed(color, 'outerBackground')}\n                        withOnCheckbox\n                        onOffChecked={props.sectionValues.outerBackgroundOn}\n                        onOffChanged={value => props.changed(value, 'outerBackgroundOn')} />\n                </ToolsBlock>\n                <ToolsBlock blockType=\"three\" >\n                    <SmallButtonDropDown isSection\n                        title=\"Map\"\n                        icon='<svg height=\"16\" viewBox=\"0 0 24 24\" width=\"16\"><path xmlns=\"http://www.w3.org/2000/svg\" d=\"M20.5 3l-.16.03L15 5.1 9 3 3.36 4.9c-.21.07-.36.25-.36.48V20.5c0 .28.22.5.5.5l.16-.03L9 18.9l6 2.1 5.64-1.9c.21-.07.36-.25.36-.48V3.5c0-.28-.22-.5-.5-.5zM15 19l-6-2.11V5l6 2.11V19z\" ></path></svg>'\n                        dropDownType=\"googleMap\">\n                        <GoogleMapMenu \n                            isSection\n                            values={props.sectionValues} />\n                    </SmallButtonDropDown>\n                </ToolsBlock>\n            </ToolsSection>\n            <ToolsSection label=\"Size\" >\n                <ToolsBlock blockType=\"three\" >\n                    <ValueInput isSection\n                        title=\"Height\"\n                        min={0}\n                        value={props.sectionValues.height}\n                        changed={value => props.changed(value, 'height', true)} />\n                    <ValueInput isSection\n                        title=\"Space\"\n                        min={0}\n                        value={props.sectionValues.space}\n                        changed={value => props.changed(value, 'space', true)} />\n                </ToolsBlock>\n            </ToolsSection>\n            <ToolsSection label=\"Arrange\" >\n                <ToolsBlock blockType=\"three\" >\n                    <SmallButton isSection\n                        title=\"Move up\"\n                        icon='<svg width=\"16px\" height=\"16px\" viewBox=\"-467 269 24 24\"><path d=\"M-462.4,286.7l7.4-7.4l7.4,7.4l2.3-2.3l-9.7-9.7l-9.7,9.7L-462.4,286.7z\"></path></svg>'\n                        buttonClicked={() => props.moveUpSection()} />\n                    <SmallButton isSection\n                        title=\"Move down\"\n                        icon='<svg width=\"16px\" height=\"16px\" viewBox=\"-467 269 24 24\"><path d=\"M-447.6,274.7l-7.4,7.4l-7.4-7.4l-2.3,2.3l9.7,9.7l9.7-9.7L-447.6,274.7z\"></path></svg>'\n                        buttonClicked={() => props.moveDownSection()} />\n                </ToolsBlock>\n            </ToolsSection>\n            <ToolsSection label=\"State\" >\n                <ToolsBlock blockType=\"three\" >\n                    <Checkbox isSection\n                        title=\"Hover\"\n                        checked={ props.chosenSection\n                            ? props.chosenSection === props.hoveredElement ? true : false\n                            : false }\n                        onChange={() => props.setStateHover()} />\n                    <Checkbox isSection\n                        title=\"Clicked\"\n                        checked={ props.chosenSection\n                            ? props.chosenSection === props.activeElement ? true : false\n                            : false }\n                        onChange={() => props.setStateActive()} />\n                </ToolsBlock>\n            </ToolsSection>\n            <ToolsSection label=\"Move\" >\n                <ToolsBlock blockType=\"one\" >\n                    <BigButton\n                        title=\"Paste\"\n                        icon='<svg height=\"30\" viewBox=\"0 0 24 24\" width=\"30\"><path d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"></path></svg>'\n                        buttonClicked={() => props.pasteBox()} />\n                </ToolsBlock>\n            </ToolsSection>\n        </Aux>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        chosenSection: state.builder.present.chosenSection,\n        hoveredElement: state.builder.present.hoveredElement,\n        activeElement: state.builder.present.activeElement,\n        sectionValues: state.builder.present[state.builder.present.chosenSection] || {},\n        changedStyleValues: state.builder.present.changedStyleValues\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addSection: () => dispatch(actions.addSection()),\n        duplicateSection: () => dispatch(actions.duplicateSection()),\n        deleteSection: () => dispatch(actions.deleteSection()),\n        moveUpSection: () => dispatch(actions.moveUpSection()),\n        moveDownSection: () => dispatch(actions.moveDownSection()),\n        saveToHistory: () => { dispatch(actions.saveToHistory()) },\n        setStateHover: () => { dispatch(actions.setStateHover(true)) },\n        setStateActive: () => { dispatch(actions.setStateActive(true)) },\n        changed: (value, valueKey) => dispatch(actions.changeElementPropertyValue(value, valueKey, true, true))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sections);","import React from 'react';\n\nimport classes from './BigButtonWithRadio.module.css';\nimport Svg from '../../../Svg/Svg';\n\ntype Props = {\n    title?: string,\n    checked?: boolean,\n    icon?: string,\n    clicked?: Function,\n    datatestid?: any\n}\n\nexport const BigButtonWithRadio = (props: Props) => {\n    return (\n        <button \n            data-testid=\"MyButton\"\n            className={classes.Button}\n            onClick={props.clicked}>\n            <table className={classes.Table}>\n                <tbody>\n                    <tr>\n                        <td><Svg icon={props.icon}/></td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <input \n                                data-testid={props.datatestid || \"checkbox\"}\n                                type=\"radio\" \n                                onChange={() => {}}\n                                checked={props.checked || false} /> \n                            {props.title}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </button>\n    );\n};\n\nexport default BigButtonWithRadio;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../../../../../store/actions/index';\nimport BigButtonWithRadio from '../../../../../UI/Buttons/BigButtonWithRadio/BigButtonWithRadio';\nimport BigButton from '../../../../../UI/Buttons/BigButton/BigButton';\n\ntype Props = {\n    alignMode: 'parent' | 'selection' | 'element',\n    alignBoxes: (string: 'left' | 'right' | 'top' | 'bottom' | 'hCenter' | 'vCenter' | 'hDistribute' | 'vDistribute') => {},\n    changeAlignMode: (string: string) => {}\n}\n\nexport const BoxAlignMenu = (props: Props) => {\n    const alignMode = props.alignMode || 'parent';\n    return (\n        <table>\n            <tbody>\n                <tr>\n                    <td colSpan=\"3\">Align scope</td>\n                </tr>\n                <tr>\n                    <td><BigButtonWithRadio\n                        datatestid=\"parent\"\n                        icon='<svg width=\"30px\" height=\"30px\" viewBox=\"-467 269 24 24\"><path d=\"M-464,280h2v2h-2V280z M-460,288h2v2h-2V288z M-464,276h2v2h-2V276z M-464,272h2v2h-2V272z M-456,272h2v2h-2V272z M-464,284\th2v2h-2V284z M-464,288h2v2h-2V288z M-460,272h2v2h-2V272z M-456,288h2v2h-2V288z M-448,280h2v2h-2V280z M-448,276h2v2h-2V276z\t M-448,272h2v2h-2V272z M-448,284h2v2h-2V284z M-448,288h2v2h-2V288z M-452,288h2v2h-2V288z M-452,272h2v2h-2V272z M-458.4,277.6 h6.9v6.9h-6.9V277.6z\"></path></svg>'\n                        checked={alignMode === 'parent'}\n                        clicked={() => props.changeAlignMode('parent')}\n                        value=\"parent\" /></td>\n                    <td><BigButtonWithRadio\n                        datatestid=\"selection\"\n                        icon='<svg width=\"30px\" height=\"30px\" viewBox=\"-467 269 24 24\"><path d=\"M-464,280h2v2h-2V280z M-464,276h2v2h-2V276z M-464,272h2v2h-2V272z M-456,272h2v2h-2V272z M-464,284h2v2h-2V284z M-460,272\th2v2h-2V272z M-456,288h2v2h-2V288z M-448,280h2v2h-2V280z M-448,276h2v2h-2V276z M-448,272h2v2h-2V272z M-452,272h2v2h-2V272z\t M-460,272h6v6h-6V272z M-448,284h-4v4v2h2h2h2v-2v-2v-2H-448z M-464,284v4v2h2h2h2v-2v-4H-464z\"></path></svg>'\n                        checked={alignMode === 'selection'}\n                        clicked={() => props.changeAlignMode('selection')}\n                        value=\"selection\" /></td>\n                    <td><BigButtonWithRadio\n                        datatestid=\"element\"\n                        icon='<svg width=\"30px\" height=\"30px\" viewBox=\"-467 269 24 24\"><path d=\"M-464,280h2v2h-2V280z M-464,276h2v2h-2V276z M-464,272h2v2h-2V272z M-456,272h2v2h-2V272z M-464,284h2v2h-2V284z M-460,272\th2v2h-2V272z M-456,288h2v2h-2V288z M-448,280h2v2h-2V280z M-448,276h2v2h-2V276z M-448,272h2v2h-2V272z M-452,272h2v2h-2V272z\t M-460,272h6v6h-6V272z M-448,284h-4v4v2h2h2h2v-2v-2v-2H-448z M-464,284v4v2h2h2h2v-2v-4H-464z\"></path></svg>'\n                        checked={alignMode === 'element'}\n                        clicked={() => props.changeAlignMode('element')}\n                        value=\"element\" /></td>\n                </tr>\n                <tr>\n                    <td colSpan=\"3\">Align type</td>\n                </tr>\n                <tr>\n                    <td><BigButton\n                        icon='<svg height=\"30\" viewBox=\"0 0 24 24\" width=\"30\" style=\"transform: rotate(-90deg);\"><path d=\"M8 11h3v10h2V11h3l-4-4-4 4zM4 3v2h16V3H4z\"></path></svg>'\n                        buttonClicked={() => props.alignBoxes('left')} />\n                    </td>\n                    <td><BigButton\n                        icon='<svg height=\"30\" viewBox=\"0 0 24 24\" width=\"30\" style=\"transform: rotate(-90deg);\"><path d=\"M8 19h3v4h2v-4h3l-4-4-4 4zm8-14h-3V1h-2v4H8l4 4 4-4zM4 11v2h16v-2H4z\"></path></svg>'\n                        buttonClicked={() => props.alignBoxes('hCenter')} />\n                    </td>\n                    <td><BigButton\n                        icon='<svg height=\"30\" viewBox=\"0 0 24 24\" width=\"30\" style=\"transform: rotate(-90deg);\"><path d=\"M8 11h3v10h2V11h3l-4-4-4 4zM4 3v2h16V3H4z\"></path></svg>'\n                        buttonClicked={() => props.alignBoxes('right')} />\n                    </td>\n                </tr>\n                <tr>\n                    <td><BigButton\n                        icon='<svg height=\"30\" viewBox=\"0 0 24 24\" width=\"30\" style=\"transform: rotate(-90deg);\"><path d=\"M8 11h3v10h2V11h3l-4-4-4 4zM4 3v2h16V3H4z\"></path></svg>'\n                        buttonClicked={() => props.alignBoxes('top')} />\n                    </td>\n                    <td><BigButton\n                        icon='<svg height=\"30\" viewBox=\"0 0 24 24\" width=\"30\"><path d=\"M8 19h3v4h2v-4h3l-4-4-4 4zm8-14h-3V1h-2v4H8l4 4 4-4zM4 11v2h16v-2H4z\"></path></svg>'\n                        buttonClicked={() => props.alignBoxes('vCenter')} />\n                    </td>\n                    <td><BigButton\n                        icon='<svg height=\"30\" viewBox=\"0 0 24 24\" width=\"30\"><path d=\"M16 13h-3V3h-2v10H8l4 4 4-4zM4 19v2h16v-2H4z\"></path></svg>'\n                        buttonClicked={() => props.alignBoxes('bottom')} />\n                    </td>\n                </tr>\n                <tr>\n                    <td><BigButton\n                        icon='<svg height=\"30\" viewBox=\"0 0 24 24\" width=\"30\"><path d=\"M7.77 6.76L6.23 5.48.82 12l5.41 6.52 1.54-1.28L3.42 12l4.35-5.24zM7 13h2v-2H7v2zm10-2h-2v2h2v-2zm-6 2h2v-2h-2v2zm6.77-7.52l-1.54 1.28L20.58 12l-4.35 5.24 1.54 1.28L23.18 12l-5.41-6.52z\"></path></svg>'\n                        buttonClicked={() => props.alignBoxes('hDistribute')} />\n                    </td>\n                    <td><BigButton\n                        icon='<svg height=\"30\" viewBox=\"0 0 24 24\" width=\"30\"><path d=\"M7.77 6.76L6.23 5.48.82 12l5.41 6.52 1.54-1.28L3.42 12l4.35-5.24zM7 13h2v-2H7v2zm10-2h-2v2h2v-2zm-6 2h2v-2h-2v2zm6.77-7.52l-1.54 1.28L20.58 12l-4.35 5.24 1.54 1.28L23.18 12l-5.41-6.52z\"></path></svg>'\n                        buttonClicked={() => props.alignBoxes('vDistribute')} />\n                    </td>\n                    <td></td>\n                </tr>\n            </tbody>\n        </table>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        alignMode: state.builder.present.alignMode\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        alignBoxes: type => dispatch(actions.alignBoxes(type)),\n        changeAlignMode: value => dispatch(actions.changeAlignMode(value))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BoxAlignMenu);","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../../../../../store/actions/index'\nimport ValueInput from '../../../../../UI/ValueInput/ValueInput'\nimport RangeInput from '../../../../../UI/RangeInput/RangeInput'\nimport Checkbox from '../../../../../UI/Checkbox/Checkbox'\nimport BigColorPicker from '../../../../../UI/Buttons/BigColorPicker/BigColorPicker'\n\ntype Props = {\n    boxesValues: {\n        borderOn?: boolean,\n        borderSize?: number,\n        borderHOffset?: number,\n        borderVOffset?: number,\n        borderBlur?: number,\n        borderInset?: boolean,\n    },\n    changed: (value: any, property: string) => {},\n    changedStyleValues: Array<{}>,\n    saveToHistory: () => {},\n}\n\nexport const BoxBorderMenu = (props: Props) => {\n    return (\n        <table>\n            <tbody>\n                <tr>\n                    <td>On</td>\n                    <td colSpan=\"2\">\n                        <Checkbox\n                            datatestid=\"borderOn\"\n                            checked={props.boxesValues.borderOn}\n                            onChange={value => props.changed(value, 'borderOn')}\n                        />\n                    </td>\n                </tr>\n                <tr>\n                    <td>Border color</td>\n                    <td colSpan=\"2\">\n                        <BigColorPicker\n                            valueKey=\"borderColor\"\n                            color=\"rgba(0, 0, 0, 1)\"\n                            values={props.boxesValues}\n                            changedStyleValues={props.changedStyleValues}\n                            saveToHistory={() => props.saveToHistory()}\n                            changed={color =>\n                                props.changed(color, 'borderColor')\n                            }\n                        />\n                    </td>\n                </tr>\n                <tr>\n                    <td>Size</td>\n                    <td>\n                        <RangeInput\n                            datatestid=\"borderSizeR\"\n                            changed={value =>\n                                props.changed(value, 'borderSize')\n                            }\n                            value={props.boxesValues.borderSize}\n                            step={1}\n                            min={0}\n                            max={20}\n                            saveToHistory={() => props.saveToHistory()}\n                        />\n                    </td>\n                    <td>\n                        <ValueInput\n                            datatestid=\"borderSizeI\"\n                            value={props.boxesValues.borderSize}\n                            changed={value =>\n                                props.changed(value, 'borderSize')\n                            }\n                        />\n                    </td>\n                </tr>\n                {/* <tr>\n                    <td>Radius</td>\n                    <td><RangeInput\n                        changed=\"changeElementPropertyValue\"\n                        valueKey=\"borderRadius\"\n                        max=\"20\" /></td>\n                    <td><ValueInput \n                        valueKey=\"borderRadius\"\n                        changed=\"changeElementPropertyValue\" /></td>\n                </tr> */}\n                <tr>\n                    <td>H offset</td>\n                    <td>\n                        <RangeInput\n                            datatestid=\"borderHOffsetR\"\n                            changed={value =>\n                                props.changed(value, 'borderHOffset')\n                            }\n                            value={props.boxesValues.borderHOffset}\n                            saveToHistory={() => props.saveToHistory()}\n                            min={-20}\n                            max={20}\n                        />\n                    </td>\n                    <td>\n                        <ValueInput\n                            datatestid=\"borderHOffsetI\"\n                            value={props.boxesValues.borderHOffset}\n                            changed={value =>\n                                props.changed(value, 'borderHOffset')\n                            }\n                        />\n                    </td>\n                </tr>\n                <tr>\n                    <td>V offset</td>\n                    <td>\n                        <RangeInput\n                            datatestid=\"borderVOffsetR\"\n                            changed={newValue =>\n                                props.changed(newValue, 'borderVOffset')\n                            }\n                            value={props.boxesValues.borderVOffset}\n                            saveToHistory={() => props.saveToHistory()}\n                            min={-20}\n                            max={20}\n                        />\n                    </td>\n                    <td>\n                        <ValueInput\n                            datatestid=\"borderVOffsetI\"\n                            value={props.boxesValues.borderVOffset}\n                            changed={value =>\n                                props.changed(value, 'borderVOffset')\n                            }\n                        />\n                    </td>\n                </tr>\n                <tr>\n                    <td>Blur</td>\n                    <td>\n                        <RangeInput\n                            datatestid=\"borderBlurR\"\n                            changed={newValue =>\n                                props.changed(newValue, 'borderBlur')\n                            }\n                            saveToHistory={() => props.saveToHistory()}\n                            value={props.boxesValues.borderBlur}\n                            max={20}\n                        />\n                    </td>\n                    <td>\n                        <ValueInput\n                            datatestid=\"borderBlurI\"\n                            value={props.boxesValues.borderBlur}\n                            changed={value =>\n                                props.changed(value, 'borderBlur')\n                            }\n                        />\n                    </td>\n                </tr>\n                <tr>\n                    <td>Inset</td>\n                    <td>\n                        <Checkbox\n                            datatestid=\"borderInset\"\n                            checked={props.boxesValues.borderInset}\n                            onChange={value =>\n                                props.changed(value, 'borderInset')\n                            }\n                        />\n                    </td>\n                    <td />\n                </tr>\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        boxesValues: state.builder.present.chosenBoxesValues,\n        changedStyleValues: state.builder.present.changedStyleValues,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        saveToHistory: () => {\n            dispatch(actions.saveToHistory())\n        },\n        changed: (value, valueKey) =>\n            dispatch(\n                actions.changeElementPropertyValue(value, valueKey, false, true)\n            ),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(BoxBorderMenu)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../../../../store/actions/index'\nimport ToolsSection from '../ToolsSection/ToolsSection'\nimport ToolsBlock from '../ToolsSection/ToolsBlock/ToolsBlock'\nimport Aux from '../../../../../hoc/Aux'\nimport BigButton from '../../../../UI/Buttons/BigButton/BigButton'\nimport SmallButton from '../../../../UI/Buttons/SmallButton/SmallButton'\nimport BigColorPicker from '../../../../UI/Buttons/BigColorPicker/BigColorPicker'\nimport ValueInput from '../../../../UI/ValueInput/ValueInput'\nimport Checkbox from '../../../../UI/Checkbox/Checkbox'\nimport BigButtonDropDown from '../../../../UI/Buttons/BigButtonDropDown/BigButtonDropDown'\nimport SmallButtonDropDown from '../../../../UI/Buttons/SmallButtonDropDown/SmallButtonDropDown'\nimport BoxAlignMenu from '../DropDownMenus/BoxAlignMenu/BoxAlignMenu'\nimport GoogleMapMenu from '../DropDownMenus/GoogleMapMenu/GoogleMapMenu'\nimport BoxBorderMenu from '../DropDownMenus/BoxBorderMenu/BoxBorderMenu'\n\nconst Boxes = props => {\n    return (\n        <Aux>\n            <ToolsSection label=\"Basic\">\n                <ToolsBlock blockType=\"one\">\n                    <BigButton\n                        title=\"Add\"\n                        icon='<svg height=\"30\" viewBox=\"0 0 24 24\" width=\"30\"><path d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"></path></svg>'\n                        buttonClicked={() => props.addBox()}\n                    />\n                </ToolsBlock>\n                <ToolsBlock blockType=\"three\">\n                    <SmallButton\n                        title=\"Duplicate\"\n                        icon='<svg height=\"16\" viewBox=\"0 0 24 24\" width=\"16\"><path d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"></path></svg>'\n                        buttonClicked={() => props.duplicateBox()}\n                    />\n                    <SmallButton\n                        title=\"Delete\"\n                        icon='<svg height=\"16\" viewBox=\"0 0 24 24\" width=\"16\"><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"></path><path d=\"M0 0h24v24H0z\" fill=\"none\"></path></svg>'\n                        buttonClicked={() => props.deleteBox()}\n                    />\n                </ToolsBlock>\n            </ToolsSection>\n            <ToolsSection label=\"Style\">\n                <ToolsBlock blockType=\"one\">\n                    <BigColorPicker\n                        title=\"Background\"\n                        valueKey=\"background\"\n                        color=\"rgba(30, 250, 100, 1)\"\n                        values={props.boxesValues}\n                        changedStyleValues={props.changedStyleValues}\n                        saveToHistory={() => props.saveToHistory()}\n                        changed={color => props.changed(color, 'background')}\n                        withOnCheckbox\n                        onOffChecked={props.boxesValues.backgroundOn}\n                        onOffChanged={value =>\n                            props.changed(value, 'backgroundOn')\n                        }\n                    />\n                </ToolsBlock>\n                <ToolsBlock blockType=\"one\">\n                    <BigButtonDropDown\n                        title=\"Border & Shadow\"\n                        icon='<svg height=\"30\" viewBox=\"-467 269 24 24\" width=\"30\"><path d=\"M-464,272v18h18v-18H-464z M-448,288h-14v-14h14V288z\"></path><path d=\"M0 0h24v24H0z\" fill=\"none\"></path></svg>'\n                        dropDownType=\"boxBorder\"\n                    >\n                        <BoxBorderMenu />\n                    </BigButtonDropDown>\n                </ToolsBlock>\n                <ToolsBlock blockType=\"three\">\n                    <SmallButtonDropDown\n                        title=\"Map\"\n                        icon='<svg height=\"16\" viewBox=\"0 0 24 24\" width=\"16\"><path xmlns=\"http://www.w3.org/2000/svg\" d=\"M20.5 3l-.16.03L15 5.1 9 3 3.36 4.9c-.21.07-.36.25-.36.48V20.5c0 .28.22.5.5.5l.16-.03L9 18.9l6 2.1 5.64-1.9c.21-.07.36-.25.36-.48V3.5c0-.28-.22-.5-.5-.5zM15 19l-6-2.11V5l6 2.11V19z\" ></path></svg>'\n                        dropDownType=\"googleMap\"\n                    >\n                        <GoogleMapMenu values={props.boxesValues} />\n                    </SmallButtonDropDown>\n                </ToolsBlock>\n            </ToolsSection>\n            <ToolsSection label=\"Position\">\n                <ToolsBlock blockType=\"three\">\n                    <ValueInput\n                        title=\"Left\"\n                        value={props.boxesValues.left}\n                        changed={value => props.changed(value, 'left')}\n                    />\n                    <ValueInput\n                        title=\"Top\"\n                        value={props.boxesValues.top}\n                        changed={value => props.changed(value, 'top')}\n                    />\n                </ToolsBlock>\n                <ToolsBlock blockType=\"one\">\n                    <BigButtonDropDown\n                        title=\"Align\"\n                        icon='<svg height=\"30\" viewBox=\"-467 269 24 24\" width=\"30\"><path d=\"M-462,277v3h-4v2h4v3l4-4L-462,277z M-448,285v-3h4v-2h-4v-3l-4,4L-448,285z M-454,273h-2v16h2V273z\"></path></svg>'\n                        clicked=\"boxAlign\"\n                    >\n                        <BoxAlignMenu />\n                    </BigButtonDropDown>\n                </ToolsBlock>\n            </ToolsSection>\n            <ToolsSection label=\"Size\">\n                <ToolsBlock blockType=\"three\">\n                    <ValueInput\n                        title=\"Width\"\n                        min={5}\n                        value={props.boxesValues.width}\n                        changed={value => props.changed(value, 'width')}\n                    />\n                    <ValueInput\n                        title=\"Height\"\n                        min={5}\n                        value={props.boxesValues.height}\n                        changed={value => props.changed(value, 'height')}\n                    />\n                </ToolsBlock>\n            </ToolsSection>\n            <ToolsSection label=\"Arrange\">\n                <ToolsBlock blockType=\"three\">\n                    <SmallButton\n                        title=\"Move up\"\n                        icon='<svg width=\"16px\" height=\"16px\" viewBox=\"-467 269 24 24\"><path d=\"M-462.4,286.7l7.4-7.4l7.4,7.4l2.3-2.3l-9.7-9.7l-9.7,9.7L-462.4,286.7z\"></path></svg>'\n                        buttonClicked={() => props.moveUpBox()}\n                    />\n                    <SmallButton\n                        title=\"Move down\"\n                        icon='<svg width=\"16px\" height=\"16px\" viewBox=\"-467 269 24 24\"><path d=\"M-447.6,274.7l-7.4,7.4l-7.4-7.4l-2.3,2.3l9.7,9.7l9.7-9.7L-447.6,274.7z\"></path></svg>'\n                        buttonClicked={() => props.moveDownBox()}\n                    />\n                </ToolsBlock>\n                <ToolsBlock blockType=\"three\">\n                    <SmallButton\n                        title=\"Forward\"\n                        icon='<svg width=\"16px\" height=\"16px\" viewBox=\"-467 269 24 24\"><path d=\"M-462.4,286.7l7.4-7.4l7.4,7.4l2.3-2.3l-9.7-9.7l-9.7,9.7L-462.4,286.7z\"></path></svg>'\n                        buttonClicked={() => props.zIndexUpBox()}\n                    />\n                    <SmallButton\n                        title=\"Backward\"\n                        icon='<svg width=\"16px\" height=\"16px\" viewBox=\"-467 269 24 24\"><path d=\"M-447.6,274.7l-7.4,7.4l-7.4-7.4l-2.3,2.3l9.7,9.7l9.7-9.7L-447.6,274.7z\"></path></svg>'\n                        buttonClicked={() => props.zIndexDownBox()}\n                    />\n                </ToolsBlock>\n            </ToolsSection>\n            <ToolsSection label=\"Move\">\n                <ToolsBlock blockType=\"three\">\n                    <SmallButton\n                        title=\"Copy\"\n                        icon='<svg height=\"16\" viewBox=\"0 0 24 24\" width=\"16\"><path d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"></path></svg>'\n                        buttonClicked={() =>\n                            props.copyBox(\n                                props.builderPresentState,\n                                props.bufferState\n                            )\n                        }\n                    />\n                    <SmallButton\n                        title=\"Cut\"\n                        icon='<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M6.99 11L3 15l3.99 4v-3H14v-2H6.99v-3zM21 9l-3.99-4v3H10v2h7.01v3L21 9z\"></path></svg>'\n                        buttonClicked={() =>\n                            props.cutBox(\n                                props.builderPresentState,\n                                props.bufferState\n                            )\n                        }\n                    />\n                    <SmallButton\n                        title=\"Paste\"\n                        icon='<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zM6 20V4h7v5h5v11H6z\"></path></svg>'\n                        buttonClicked={() =>\n                            props.pasteBox(\n                                props.builderPresentState,\n                                props.bufferState\n                            )\n                        }\n                    />\n                </ToolsBlock>\n            </ToolsSection>\n            <ToolsSection label=\"Navigation\">\n                <ToolsBlock blockType=\"three\">\n                    <SmallButton\n                        title=\"Enter box\"\n                        icon='<svg height=\"16\" viewBox=\"0 0 24 24\" width=\"16\"><path d=\"M5 15H3v4c0 1.1.9 2 2 2h4v-2H5v-4zM5 5h4V3H5c-1.1 0-2 .9-2 2v4h2V5zm14-2h-4v2h4v4h2V5c0-1.1-.9-2-2-2zm0 16h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4zM12 9c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"></path></svg>'\n                        buttonClicked={() => props.enterBox()}\n                    />\n                    <SmallButton\n                        title=\"Exit box\"\n                        icon='<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z\"></path></svg>'\n                        buttonClicked={() => props.exitBox()}\n                    />\n                </ToolsBlock>\n            </ToolsSection>\n            <ToolsSection label=\"State\">\n                <ToolsBlock blockType=\"three\">\n                    <Checkbox\n                        title=\"Hover\"\n                        checked={\n                            props.chosenBoxes.length > 0\n                                ? props.chosenBoxes[0] === props.hoveredElement\n                                    ? true\n                                    : false\n                                : false\n                        }\n                        onChange={() => props.setStateHover()}\n                    />\n                    <Checkbox\n                        title=\"Clicked\"\n                        checked={\n                            props.chosenBoxes.length > 0\n                                ? props.chosenBoxes[0] === props.activeElement\n                                    ? true\n                                    : false\n                                : false\n                        }\n                        onChange={() => props.setStateActive()}\n                    />\n                </ToolsBlock>\n            </ToolsSection>\n        </Aux>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        chosenBoxes: state.builder.present.chosenBoxes,\n        hoveredElement: state.builder.present.hoveredElement,\n        activeElement: state.builder.present.activeElement,\n        boxesValues: state.builder.present.chosenBoxesValues,\n        changedStyleValues: state.builder.present.changedStyleValues,\n        builderPresentState: state.builder.present,\n        bufferState: state.buffer,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addBox: () => dispatch(actions.addBox()),\n        duplicateBox: () => dispatch(actions.duplicateBox()),\n        deleteBox: () => dispatch(actions.deleteBox()),\n        moveUpBox: () => dispatch(actions.moveUpBox()),\n        moveDownBox: () => dispatch(actions.moveDownBox()),\n        zIndexUpBox: () => dispatch(actions.zIndexUpBox()),\n        zIndexDownBox: () => dispatch(actions.zIndexDownBox()),\n        copyBox: (builderPresentState, bufferState) =>\n            dispatch(actions.copyBox(builderPresentState, bufferState)),\n        cutBox: (builderPresentState, bufferState) =>\n            dispatch(actions.cutBox(builderPresentState, bufferState)),\n        pasteBox: (builderPresentState, bufferState) =>\n            dispatch(actions.pasteBox(builderPresentState, bufferState)),\n        enterBox: () => dispatch(actions.enterBox()),\n        exitBox: () => dispatch(actions.exitBox()),\n        saveToHistory: () => {\n            dispatch(actions.saveToHistory())\n        },\n        setStateHover: () => {\n            dispatch(actions.setStateHover())\n        },\n        setStateActive: () => {\n            dispatch(actions.setStateActive())\n        },\n        changed: (value, valueKey) =>\n            dispatch(\n                actions.changeElementPropertyValue(value, valueKey, false, true)\n            ),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Boxes)\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport classes from './SmallButtonTextEditor.module.css';\nimport Svg from '../../../Svg/Svg';\n\ntype Props = {\n    icon?: string,\n    title?: string,\n    clicked: string,\n    property: string,\n    textEditor?: Object,\n    value: string | number,\n    inline?: boolean,\n    textValues: Object\n}\n\nexport const SmallButtonTextEditor = (props: Props) => {\n\n    const handleClick = (e: Event) => {\n        e.preventDefault();\n        if(props.textEditor) {\n            props.textEditor[props.clicked](props.property, props.value, () => {});\n        }\n    }\n\n    const classNames = [classes.Button];\n\n    if(props.inline) \n        classNames.push(classes.Inline);\n\n    if(props.textValues[props.property])\n        if(!props.value || props.textValues[props.property] === props.value)\n            classNames.push(classes.Active);\n\n    return (\n        <button \n            className={classNames.join(' ')}\n            onClick={(e) => handleClick(e)}>\n            <table className={classes.Table}>\n                <tbody>\n                    <tr>\n                        <td className={classes.Cell}>\n                            <Svg icon={props.icon}\n                                className={classes.Svg} />\n                        </td>\n                        <td className={classes.Cell}>{props.title}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </button>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        textValues: state.builder.present.chosenTextValues\n    }\n}\n\nexport default connect(mapStateToProps)(SmallButtonTextEditor);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport classes from './ValueInputTextEditor.module.css';\nimport SmallButton from '../../Buttons/SmallButton/SmallButton';\n\ntype Props = {\n    textEditor: Object,\n    changed: string,\n    property: string,\n    valueKey: string,\n    title?: string,\n    color?: string,\n    textValues: Object,\n    changed: Function,\n    withOnCheckbox?: boolean,\n    onOffValue?: boolean,\n    changedStyleValues: Array<{}>,\n    min?: number,\n    max?: number,\n    step?: number\n}\n\ntype State = {\n    isVisible: boolean\n}\n\nexport class ValueInputTextEditor extends Component<Props, State> {\n    inputRef: { current: null | HTMLInputElement }\n\n    constructor(props: Props) {\n        super(props);\n        this.inputRef = React.createRef();\n    }\n\n    handleChange = () => {\n        //this.cursor = e.target.selectionStart;\n        const { props } = this;\n        let value: number = 0;\n        if (this.inputRef.current) {\n            value = parseFloat(this.inputRef.current.value);\n        }\n        if(props.min && value < props.min ) {\n            value = props.min;\n        }\n        if(props.max && value > props.max ) {\n            value = props.max;\n        }\n        if(props.textEditor) {\n            props.textEditor[props.changed](props.property, value, () => {\n                if (this.inputRef.current) {\n                    this.inputRef.current.focus();\n                }\n                //this.inputRef.current.selectionStart = this.cursor;\n                //this.inputRef.current.selectionEnd = this.cursor;\n            });\n        }\n    }\n\n    render () {\n        const { props, handleChange } = this;\n        const startValue = this.props.textValues[this.props.property] || 0;\n\n        return (\n            <div className={classes.Div}>\n                {props.title}\n                <input\n                    type=\"number\"\n                    className={classes.Input}\n                    value={startValue || 0}\n                    onChange={handleChange}\n                    ref={this.inputRef}\n                    step={props.step}\n                    min={props.min}\n                    max={props.max} />\n                \n                { props.changedStyleValues.includes(props.valueKey) ?\n                    <div className={classes.StyleControls}>\n                        <SmallButton\n                            inline\n                            value={props.valueKey}\n                            icon='<svg width=\"16px\" height=\"16px\" viewBox=\"0 0 24 24\"><path xmlns=\"http://www.w3.org/2000/svg\" d=\"M15 1H9v2h6V1zm4.03 6.39l1.42-1.42c-.43-.51-.9-.99-1.41-1.41l-1.42 1.42C16.07 4.74 14.12 4 12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9 9-4.03 9-9c0-2.12-.74-4.07-1.97-5.61zM12 20c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm-.32-5H6.35c.57 1.62 1.82 2.92 3.41 3.56l-.11-.06 2.03-3.5zm5.97-4c-.57-1.6-1.78-2.89-3.34-3.54L12.26 11h5.39zm-7.04 7.83c.45.11.91.17 1.39.17 1.34 0 2.57-.45 3.57-1.19l-2.11-3.9-2.85 4.92zM7.55 8.99C6.59 10.05 6 11.46 6 13c0 .34.04.67.09 1h4.72L7.55 8.99zm8.79 8.14C17.37 16.06 18 14.6 18 13c0-.34-.04-.67-.09-1h-4.34l2.77 5.13zm-3.01-9.98C12.9 7.06 12.46 7 12 7c-1.4 0-2.69.49-3.71 1.29l2.32 3.56 2.72-4.7z\" ></path></svg>'\n                            buttonClicked=\"transition\" />\n                        <SmallButton\n                            inline\n                            value={props.valueKey}\n                            icon='<svg width=\"16px\" height=\"16px\" viewBox=\"0 0 24 24\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" ></path></svg>'\n                            buttonClicked=\"clearStyle\" />\n                    </div> : null\n                }\n            </div>\n        );\n    }\n};\n\n\nconst mapStateToProps = state => {\n    return {\n        textValues: state.builder.present.chosenTextValues,\n        changedStyleValues: []\n    }\n}\n\nexport default connect(mapStateToProps)(ValueInputTextEditor);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { SketchPicker } from 'react-color';\nimport _ from 'lodash';\n\nimport classes from './SmallColorPickerTextEditor.module.css';\nimport Aux from '../../../../hoc/Aux';\nimport SmallButton from '../../Buttons/SmallButton/SmallButton';\nimport Checkbox from '../../Checkbox/Checkbox';\nimport DropDownMenu from '../../../../hoc/DropDownMenu/DropDownMenu';\nimport { rgbaToObj, objToRgba } from '../../../../utils/colorUtils';\n\ntype Props = {\n    textEditor: Object,\n    changed: string,\n    property: string,\n    valueKey: string,\n    title?: string,\n    color?: string,\n    textValues: Object,\n    changed: Function,\n    withOnCheckbox?: boolean,\n    onOffValue?: boolean,\n    changedStyleValues: Array<{}>\n}\n\ntype State = {\n    isVisible: boolean\n}\n\nexport class SmallColorPickerTextEditor extends Component<Props, State> {\n    state = {\n        isVisible: false\n    };\n\n    startControlColor: string;\n    startButtonColor: string;\n\n    handleOpen = () => {\n        this.setState({ isVisible: !this.state.isVisible })\n    };\n\n    handleClose = () => {\n        this.setState({ isVisible: false })\n    };\n\n    handleChange = (color: {r: number, g: number, b: number, a: number}) => {\n        const { props } = this;\n        const rgba = objToRgba(color);\n        if (props.textEditor && rgba !== this.startControlColor) {\n            props.textEditor[props.changed](props.property, rgba, () => {});\n        }\n    }\n\n    render() {\n        const { props } = this;\n        this.startButtonColor = this.startControlColor = props.textValues[_.camelCase(props.property)] || 'rgba(200, 200, 200, 1)';\n\n        return (\n            <Aux>\n                <button\n                    className={classes.Button}\n                    onClick={() => this.handleOpen()}>\n                    <table className={classes.Table}>\n                        <tbody>\n                            <tr>\n                                <td>{props.title}</td>\n                                <td>\n                                    <div className={classes.ColorDiv}\n                                        style={{ background: this.startButtonColor || 'rgba(200, 200, 200, 1)' }} />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </button>\n                {this.state.isVisible ?\n                    <DropDownMenu close={this.handleClose}>\n                        <table>\n                            <tbody>\n                                {props.withOnCheckbox ?\n                                    <tr>\n                                        <td>On</td>\n                                        <td className={classes.OnCheckbox}>\n                                            <Checkbox\n                                                onChange=\"changeElementPropertyValue\"\n                                                checked={props.onOffValue} />\n                                        </td>\n                                    </tr> : null\n                                }\n                                <tr>\n                                    <td colSpan=\"2\">\n                                        <SketchPicker\n                                            color={rgbaToObj(this.startControlColor || 'rgba(200, 200, 200, 1)')}\n                                            onChange={this.handleChange} />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </DropDownMenu> : null\n                }\n                {props.changedStyleValues.includes(props.valueKey) ?\n                    <div className={classes.StyleControls}>\n                        <SmallButton\n                            value={props.valueKey}\n                            icon='<svg width=\"16px\" height=\"16px\" viewBox=\"0 0 24 24\"><path xmlns=\"http://www.w3.org/2000/svg\" d=\"M15 1H9v2h6V1zm4.03 6.39l1.42-1.42c-.43-.51-.9-.99-1.41-1.41l-1.42 1.42C16.07 4.74 14.12 4 12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9 9-4.03 9-9c0-2.12-.74-4.07-1.97-5.61zM12 20c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm-.32-5H6.35c.57 1.62 1.82 2.92 3.41 3.56l-.11-.06 2.03-3.5zm5.97-4c-.57-1.6-1.78-2.89-3.34-3.54L12.26 11h5.39zm-7.04 7.83c.45.11.91.17 1.39.17 1.34 0 2.57-.45 3.57-1.19l-2.11-3.9-2.85 4.92zM7.55 8.99C6.59 10.05 6 11.46 6 13c0 .34.04.67.09 1h4.72L7.55 8.99zm8.79 8.14C17.37 16.06 18 14.6 18 13c0-.34-.04-.67-.09-1h-4.34l2.77 5.13zm-3.01-9.98C12.9 7.06 12.46 7 12 7c-1.4 0-2.69.49-3.71 1.29l2.32 3.56 2.72-4.7z\" ></path></svg>'\n                            buttonClicked={(\"transition\")} />\n                        <SmallButton\n                            value={props.valueKey}\n                            icon='<svg width=\"16px\" height=\"16px\" viewBox=\"0 0 24 24\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" ></path></svg>'\n                            buttonClicked=\"clearStyle\" />\n\n                    </div> : null\n                }\n            </Aux>\n        );\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        textValues: state.builder.present.chosenTextValues,\n        changedStyleValues: []\n    }\n}\n\nexport default connect(mapStateToProps)(SmallColorPickerTextEditor);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Select from 'react-select'\n\nimport classes from './SelectTextEditor.module.css'\nimport SmallButton from '../../Buttons/SmallButton/SmallButton'\n\ntype Props = {\n    valueKey: string,\n    title: string,\n    textValues: {},\n    changed: string,\n    textEditor?: {},\n    property: string,\n    options: [],\n    styles: {},\n    default: number,\n    isSearchable?: boolean,\n    changedStyleValues: Array<{}>,\n}\n\nclass SelectTextEditor extends Component<Props> {\n    handleChange = (option: { value: string | number }) => {\n        const { value } = option\n        const { props } = this\n        if (props.textEditor) {\n            props.textEditor[props.changed](props.property, value, () => {})\n        }\n    }\n\n    customStyles = {\n        menu: (provided: {}, state: {}) => ({\n            ...provided,\n            width: 300,\n            top: 'auto',\n        }),\n        selectContainer: (provided: {}, state: {}) => ({\n            ...provided,\n            width: 300,\n            top: 'auto',\n        }),\n    }\n\n    render() {\n        const { props } = this\n        let startValue = props.textValues[props.property]\n        if (startValue) {\n            startValue = props.options.filter(\n                option => option.value === startValue\n            )\n            startValue = startValue.length === 1 ? startValue[0] : null\n        }\n\n        return (\n            <div>\n                {props.title}\n                <Select\n                    className={classes.Select}\n                    styles={{\n                        ...this.customStyles,\n                        ...props.styles,\n                    }}\n                    value={startValue || props.options[props.default]}\n                    isClearable={false}\n                    isSearchable={props.isSearchable}\n                    onChange={this.handleChange}\n                    options={props.options}\n                />\n                {props.changedStyleValues.includes(props.valueKey) ? (\n                    <div className={classes.StyleControls}>\n                        <SmallButton\n                            value={props.valueKey}\n                            icon='<svg width=\"16px\" height=\"16px\" viewBox=\"0 0 24 24\"><path xmlns=\"http://www.w3.org/2000/svg\" d=\"M15 1H9v2h6V1zm4.03 6.39l1.42-1.42c-.43-.51-.9-.99-1.41-1.41l-1.42 1.42C16.07 4.74 14.12 4 12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9 9-4.03 9-9c0-2.12-.74-4.07-1.97-5.61zM12 20c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm-.32-5H6.35c.57 1.62 1.82 2.92 3.41 3.56l-.11-.06 2.03-3.5zm5.97-4c-.57-1.6-1.78-2.89-3.34-3.54L12.26 11h5.39zm-7.04 7.83c.45.11.91.17 1.39.17 1.34 0 2.57-.45 3.57-1.19l-2.11-3.9-2.85 4.92zM7.55 8.99C6.59 10.05 6 11.46 6 13c0 .34.04.67.09 1h4.72L7.55 8.99zm8.79 8.14C17.37 16.06 18 14.6 18 13c0-.34-.04-.67-.09-1h-4.34l2.77 5.13zm-3.01-9.98C12.9 7.06 12.46 7 12 7c-1.4 0-2.69.49-3.71 1.29l2.32 3.56 2.72-4.7z\" ></path></svg>'\n                            buttonClicked=\"transition\"\n                        />\n                        <SmallButton\n                            value={props.valueKey}\n                            icon='<svg width=\"16px\" height=\"16px\" viewBox=\"0 0 24 24\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" ></path></svg>'\n                            buttonClicked=\"clearStyle\"\n                        />\n                    </div>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        textValues: state.builder.present.chosenTextValues,\n        changedStyleValues: [],\n    }\n}\n\nexport default connect(mapStateToProps)(SelectTextEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../../../../store/actions/index'\nimport ToolsSection from '../ToolsSection/ToolsSection'\nimport ToolsBlock from '../ToolsSection/ToolsBlock/ToolsBlock'\nimport Aux from '../../../../../hoc/Aux'\nimport SmallButtonTextEditor from '../../../../UI/TextUI/SmallButtonTextEditor/SmallButtonTextEditor'\nimport ValueInputTextEditor from '../../../../UI/TextUI/ValueInputTextEditor/ValueInputTextEditor'\nimport SmallColorPickerTextEditor from '../../../../UI/TextUI/SmallColorPickerTextEditor/SmallColorPickerTextEditor'\nimport SelectTextEditor from '../../../../UI/TextUI/SelectTextEditor/SelectTextEditor'\nimport { fontsList } from '../../../../../containers/SiteBuilder/fontsList'\n\nconst Text = props => {\n    const fontWeightOptions = [\n        { value: '100', label: 'Hairline' },\n        { value: '200', label: 'Ultra Light' },\n        { value: '300', label: 'Light' },\n        { value: '400', label: 'Normal' },\n        { value: '500', label: 'Medium' },\n        { value: '600', label: 'Semi Bold' },\n        { value: '700', label: 'Bold' },\n        { value: '800', label: 'Ultra Bold' },\n        { value: '900', label: 'Heavy' },\n    ]\n\n    const fontFamilyOptions = fontsList.map(font => {\n        return { value: font.font, label: font.font }\n    })\n\n    const fontTextTransformOptions = [\n        { value: 'none', label: 'None' },\n        { value: 'uppercase', label: 'Uppercase' },\n        { value: 'lowercase', label: 'Lowercase' },\n        { value: 'capitalize', label: 'Capitalize' },\n    ]\n\n    const fontStyles = {\n        option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n            return {\n                ...styles,\n                fontFamily: data.value,\n            }\n        },\n        singleValue: (styles, { data, isDisabled, isFocused, isSelected }) => {\n            return {\n                ...styles,\n                fontFamily: data.value,\n            }\n        },\n    }\n\n    const weightStyles = {\n        option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n            return {\n                ...styles,\n                fontWeight: data.value,\n            }\n        },\n        singleValue: (styles, { data, isDisabled, isFocused, isSelected }) => {\n            return {\n                ...styles,\n                fontWeight: data.value,\n            }\n        },\n    }\n\n    return (\n        <Aux>\n            <ToolsSection label=\"Basic\">\n                <ToolsBlock blockType=\"three\">\n                    <SmallButtonTextEditor\n                        textEditor={props.textEditor}\n                        title=\"Italic\"\n                        icon='<svg height=\"16\" viewBox=\"0 0 24 24\" width=\"16\"><path d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"></path></svg>'\n                        property=\"italic\"\n                        clicked=\"doChange\"\n                    />\n                    <SmallButtonTextEditor\n                        textEditor={props.textEditor}\n                        title=\"Strikethrough\"\n                        icon='<svg height=\"16\" viewBox=\"0 0 24 24\" width=\"16\"><path d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"></path></svg>'\n                        property=\"strikethrough\"\n                        clicked=\"doChange\"\n                    />\n                    <SmallButtonTextEditor\n                        textEditor={props.textEditor}\n                        title=\"Underline\"\n                        icon='<svg height=\"16\" viewBox=\"0 0 24 24\" width=\"16\"><path d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"></path></svg>'\n                        property=\"underline\"\n                        clicked=\"doChange\"\n                    />\n                </ToolsBlock>\n                <ToolsBlock blockType=\"three\">\n                    <SmallButtonTextEditor\n                        textEditor={props.textEditor}\n                        title=\"Supperscript\"\n                        icon='<svg height=\"16\" viewBox=\"0 0 24 24\" width=\"16\"><path d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"></path></svg>'\n                        property=\"sup\"\n                        clicked=\"doChange\"\n                    />\n                    <SmallButtonTextEditor\n                        textEditor={props.textEditor}\n                        title=\"Subscript\"\n                        icon='<svg height=\"16\" viewBox=\"0 0 24 24\" width=\"16\"><path d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"></path></svg>'\n                        property=\"sub\"\n                        clicked=\"doChange\"\n                    />\n                </ToolsBlock>\n                <ToolsBlock blockType=\"three\">\n                    <ValueInputTextEditor\n                        textEditor={props.textEditor}\n                        title=\"Size\"\n                        min=\"0\"\n                        max=\"500\"\n                        property=\"fontSize\"\n                        changed=\"doChangeInlineStyle\"\n                    />\n                    <SmallColorPickerTextEditor\n                        textEditor={props.textEditor}\n                        title=\"Color\"\n                        property=\"color\"\n                        changed=\"doChangeInlineStyle\"\n                        color=\"rgba(30, 250, 100, 1)\"\n                    />\n                    <SmallColorPickerTextEditor\n                        textEditor={props.textEditor}\n                        title=\"Highlight\"\n                        property=\"backgroundColor\"\n                        changed=\"doChangeInlineStyle\"\n                        color=\"rgba(30, 250, 100, 1)\"\n                    />\n                </ToolsBlock>\n                <ToolsBlock blockType=\"three\">\n                    <SelectTextEditor\n                        textEditor={props.textEditor}\n                        title=\"Thickness\"\n                        property=\"fontWeight\"\n                        default=\"4\"\n                        changed=\"doChangeInlineStyle\"\n                        isSearchable={false}\n                        options={fontWeightOptions}\n                        styles={weightStyles}\n                    />\n                    <SelectTextEditor\n                        textEditor={props.textEditor}\n                        title=\"Font family\"\n                        property=\"fontFamily\"\n                        default=\"0\"\n                        changed=\"doChangeInlineStyle\"\n                        isSearchable={true}\n                        options={fontFamilyOptions}\n                        styles={fontStyles}\n                    />\n                </ToolsBlock>\n                <ToolsBlock>\n                    <ValueInputTextEditor\n                        textEditor={props.textEditor}\n                        title=\"Word spacing\"\n                        step=\"0.25\"\n                        property=\"wordSpacing\"\n                        changed=\"doChangeInlineStyle\"\n                    />\n                    <ValueInputTextEditor\n                        textEditor={props.textEditor}\n                        title=\"Letter spacing\"\n                        step=\"0.25\"\n                        property=\"letterSpacing\"\n                        changed=\"doChangeInlineStyle\"\n                    />\n                    <ValueInputTextEditor\n                        textEditor={props.textEditor}\n                        title=\"Line height\"\n                        step=\"1\"\n                        property=\"lineHeight\"\n                        changed=\"doChangeInlineStyle\"\n                    />\n                </ToolsBlock>\n                <ToolsBlock>\n                    <ValueInputTextEditor\n                        textEditor={props.textEditor}\n                        title=\"Top spacing\"\n                        step=\"1\"\n                        property=\"topSpacing\"\n                        changed=\"doChangeBlockStyle\"\n                    />\n                    <ValueInputTextEditor\n                        textEditor={props.textEditor}\n                        title=\"Bottom spacing\"\n                        step=\"1\"\n                        property=\"bottomSpacing\"\n                        changed=\"doChangeBlockStyle\"\n                    />\n                    <ValueInputTextEditor\n                        textEditor={props.textEditor}\n                        title=\"Text indent\"\n                        step=\"1\"\n                        property=\"textIndent\"\n                        changed=\"doChangeBlockStyle\"\n                    />\n                </ToolsBlock>\n                <ToolsBlock blockType=\"three\">\n                    <SmallButtonTextEditor\n                        textEditor={props.textEditor}\n                        title=\"Align left\"\n                        icon='<svg height=\"16\" viewBox=\"0 0 24 24\" width=\"16\"><path d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"></path></svg>'\n                        property=\"textAlign\"\n                        value=\"left\"\n                        clicked=\"doChangeBlockStyle\"\n                    />\n                    <SmallButtonTextEditor\n                        textEditor={props.textEditor}\n                        title=\"Align center\"\n                        icon='<svg height=\"16\" viewBox=\"0 0 24 24\" width=\"16\"><path d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"></path></svg>'\n                        property=\"textAlign\"\n                        value=\"center\"\n                        clicked=\"doChangeBlockStyle\"\n                    />\n                    <SmallButtonTextEditor\n                        textEditor={props.textEditor}\n                        title=\"Align right\"\n                        icon='<svg height=\"16\" viewBox=\"0 0 24 24\" width=\"16\"><path d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"></path></svg>'\n                        property=\"textAlign\"\n                        value=\"right\"\n                        clicked=\"doChangeBlockStyle\"\n                    />\n                </ToolsBlock>\n                <ToolsBlock blockType=\"three\">\n                    <SmallButtonTextEditor\n                        textEditor={props.textEditor}\n                        title=\"Justify\"\n                        icon='<svg height=\"16\" viewBox=\"0 0 24 24\" width=\"16\"><path d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"></path></svg>'\n                        property=\"textAlign\"\n                        value=\"justify\"\n                        clicked=\"doChangeBlockStyle\"\n                    />\n                </ToolsBlock>\n                <ToolsBlock blockType=\"three\">\n                    <SelectTextEditor\n                        textEditor={props.textEditor}\n                        title=\"Transform\"\n                        property=\"textTransform\"\n                        default=\"0\"\n                        changed=\"doChangeInlineStyle\"\n                        isSearchable={false}\n                        options={fontTextTransformOptions}\n                    />\n                </ToolsBlock>\n            </ToolsSection>\n        </Aux>\n    )\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        buttonClicked: () => dispatch(actions.addSection()),\n        pasteBox: () => dispatch(actions.pasteBox()),\n    }\n}\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(Text)\n","import React from 'react'\n\nimport * as classes from './MenuStyleDDTopTabs.module.css'\nimport Aux from '../../../../../../../hoc/Aux'\nimport Checkbox from '../../../../../../UI/Checkbox/Checkbox'\n\ntype Props = {\n    currentLevel: 'top' | 'dd' | 'topBlock' | 'ddBlock',\n    currentState: 'normal' | 'hover' | 'active',\n    levelChanged: ('top' | 'dd' | 'topBlock' | 'ddBlock') => {},\n    stateChanged: ('normal' | 'hover' | 'active') => {},\n}\n\nconst MenuStyleDDTopTabs = (props: Props) => (\n    <Aux>\n        <div className={classes.CheckBoxesContainer}>\n            <Checkbox\n                checked={props.currentLevel === 'topBlock'}\n                title=\"Top level block\"\n                radio={true}\n                onChange={() => props.levelChanged('topBlock')}\n            />\n            <Checkbox\n                checked={props.currentLevel === 'top'}\n                title=\"Top level items\"\n                radio={true}\n                onChange={() => props.levelChanged('top')}\n            />\n            <Checkbox\n                checked={props.currentLevel === 'ddBlock'}\n                title=\"Dropdown block\"\n                radio={true}\n                onChange={() => props.levelChanged('ddBlock')}\n            />\n            <Checkbox\n                checked={props.currentLevel === 'dd'}\n                title=\"Dropdown items\"\n                radio={true}\n                onChange={() => props.levelChanged('dd')}\n            />\n        </div>\n        {props.currentLevel === 'top' || props.currentLevel === 'dd' ? (\n            <div className={classes.CheckBoxesContainer}>\n                <Checkbox\n                    checked={props.currentState === 'normal'}\n                    title=\"Normal\"\n                    radio={true}\n                    onChange={() => props.stateChanged('normal')}\n                />\n                <Checkbox\n                    checked={props.currentState === 'hover'}\n                    title=\"Hover\"\n                    radio={true}\n                    onChange={() => props.stateChanged('hover')}\n                />\n                <Checkbox\n                    checked={props.currentState === 'active'}\n                    title=\"Active\"\n                    radio={true}\n                    onChange={() => props.stateChanged('active')}\n                />\n            </div>\n        ) : null}\n    </Aux>\n)\n\nexport default MenuStyleDDTopTabs\n","import React from 'react'\n\nimport classes from './SideMenuButton.module.css'\nimport Svg from '../../../Svg/Svg'\n\ntype Props = {\n    title?: string,\n    buttonClicked: Function,\n    icon: string,\n    datatestid?: string,\n    active?: boolean,\n}\n\nconst SideMenuButton = (props: Props) => {\n    const addedClasses = [classes.Button]\n    if (props.active) {\n        addedClasses.push(classes.Active)\n    }\n    return (\n        <button\n            data-testid={props.datatestid || 'MyButton'}\n            className={addedClasses.join(' ')}\n            onClick={props.buttonClicked}\n        >\n            <table className={classes.Table}>\n                <tbody>\n                    <tr>\n                        <td>\n                            <Svg icon={props.icon} />\n                        </td>\n                        <td>{props.title}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </button>\n    )\n}\n\nexport default SideMenuButton\n","import React from 'react'\n\nimport Aux from '../../../../../../../hoc/Aux'\nimport SideMenuButton from '../../../../../../UI/Buttons/SideMenuButton/SideMenuButton'\n\ntype Props = {\n    currentItem: 'color' | 'border' | 'size' | 'font' | 'shadow',\n    changed: ('color' | 'border' | 'size' | 'font' | 'shadow') => {},\n    currentLevel: 'top' | 'dd' | 'topBlock' | 'ddBlock',\n    currentState: 'normal' | 'hover' | 'active',\n}\n\nconst MenuStyleDDSideMenu = (props: Props) => (\n    <Aux>\n        <SideMenuButton\n            title=\"Color\"\n            icon='<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M16.56 8.94L7.62 0 6.21 1.41l2.38 2.38-5.15 5.15c-.59.59-.59 1.54 0 2.12l5.5 5.5c.29.29.68.44 1.06.44s.77-.15 1.06-.44l5.5-5.5c.59-.58.59-1.53 0-2.12zM5.21 10L10 5.21 14.79 10H5.21zM19 11.5s-2 2.17-2 3.5c0 1.1.9 2 2 2s2-.9 2-2c0-1.33-2-3.5-2-3.5z\"><path fill-opacity=\".36\" d=\"M0 20h24v4H0z\"></path></svg>'\n            buttonClicked={() => props.changed('color')}\n            active={props.currentItem === 'color'}\n        />\n        <SideMenuButton\n            title=\"Border\"\n            icon='<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M16.56 8.94L7.62 0 6.21 1.41l2.38 2.38-5.15 5.15c-.59.59-.59 1.54 0 2.12l5.5 5.5c.29.29.68.44 1.06.44s.77-.15 1.06-.44l5.5-5.5c.59-.58.59-1.53 0-2.12zM5.21 10L10 5.21 14.79 10H5.21zM19 11.5s-2 2.17-2 3.5c0 1.1.9 2 2 2s2-.9 2-2c0-1.33-2-3.5-2-3.5z\"><path fill-opacity=\".36\" d=\"M0 20h24v4H0z\"></path></svg>'\n            buttonClicked={() => props.changed('border')}\n            active={props.currentItem === 'border'}\n        />\n        {props.currentState === 'normal' ? (\n            <SideMenuButton\n                title=\"Size\"\n                icon='<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M16.56 8.94L7.62 0 6.21 1.41l2.38 2.38-5.15 5.15c-.59.59-.59 1.54 0 2.12l5.5 5.5c.29.29.68.44 1.06.44s.77-.15 1.06-.44l5.5-5.5c.59-.58.59-1.53 0-2.12zM5.21 10L10 5.21 14.79 10H5.21zM19 11.5s-2 2.17-2 3.5c0 1.1.9 2 2 2s2-.9 2-2c0-1.33-2-3.5-2-3.5z\"><path fill-opacity=\".36\" d=\"M0 20h24v4H0z\"></path></svg>'\n                buttonClicked={() => props.changed('size')}\n                active={props.currentItem === 'size'}\n            />\n        ) : null}\n        {props.currentLevel === 'top' || props.currentLevel === 'dd' ? (\n            <SideMenuButton\n                title=\"Font\"\n                icon='<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M16.56 8.94L7.62 0 6.21 1.41l2.38 2.38-5.15 5.15c-.59.59-.59 1.54 0 2.12l5.5 5.5c.29.29.68.44 1.06.44s.77-.15 1.06-.44l5.5-5.5c.59-.58.59-1.53 0-2.12zM5.21 10L10 5.21 14.79 10H5.21zM19 11.5s-2 2.17-2 3.5c0 1.1.9 2 2 2s2-.9 2-2c0-1.33-2-3.5-2-3.5z\"><path fill-opacity=\".36\" d=\"M0 20h24v4H0z\"></path></svg>'\n                buttonClicked={() => props.changed('font')}\n                active={props.currentItem === 'font'}\n            />\n        ) : null}\n        {props.currentLevel === 'topBlock' ||\n        props.currentLevel === 'ddBlock' ? (\n            <SideMenuButton\n                title=\"Shadow\"\n                icon='<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M16.56 8.94L7.62 0 6.21 1.41l2.38 2.38-5.15 5.15c-.59.59-.59 1.54 0 2.12l5.5 5.5c.29.29.68.44 1.06.44s.77-.15 1.06-.44l5.5-5.5c.59-.58.59-1.53 0-2.12zM5.21 10L10 5.21 14.79 10H5.21zM19 11.5s-2 2.17-2 3.5c0 1.1.9 2 2 2s2-.9 2-2c0-1.33-2-3.5-2-3.5z\"><path fill-opacity=\".36\" d=\"M0 20h24v4H0z\"></path></svg>'\n                buttonClicked={() => props.changed('shadow')}\n                active={props.currentItem === 'shadow'}\n            />\n        ) : null}\n    </Aux>\n)\n\nexport default MenuStyleDDSideMenu\n","import React from 'react'\n\nimport BigColorPicker from '../../../../../../../UI/Buttons/BigColorPicker/BigColorPicker'\n\ntype Props = {\n    prefix: string,\n    // | 'TopNormal'\n    // | 'TopHover'\n    // | 'TopActive'\n    // | 'DDNormal'\n    // | 'DDHover'\n    // | 'DDActive',\n    boxesValues: {},\n    changedStyleValues: Array<{}>,\n    saveToHistory: Function,\n    changed: Function,\n}\n\nconst MenuStyleDDColor = (props: Props) => (\n    <tr>\n        <td>Background</td>\n        <td colSpan=\"2\">\n            <BigColorPicker\n                valueKey={'menuColor' + props.prefix}\n                color=\"rgba(0, 0, 0, 1)\"\n                values={props.boxesValues}\n                changedStyleValues={props.changedStyleValues}\n                saveToHistory={() => props.saveToHistory()}\n                changed={color =>\n                    props.changed(color, 'menuColor' + props.prefix)\n                }\n            />\n        </td>\n    </tr>\n)\n\nexport default MenuStyleDDColor\n","import React from 'react'\n\nimport Aux from '../../../../../../../../hoc/Aux'\nimport ValueInput from '../../../../../../../UI/ValueInput/ValueInput'\nimport RangeInput from '../../../../../../../UI/RangeInput/RangeInput'\nimport Checkbox from '../../../../../../../UI/Checkbox/Checkbox'\n\ntype Props = {\n    prefix: string,\n    boxesValues: {\n        menuXOffsetTopNormal: number,\n        menuYOffsetTopNormal: number,\n    },\n    changedStyleValues: Array<{}>,\n    saveToHistory: Function,\n    changed: Function,\n    currentState: 'normal' | 'hover' | 'active',\n    currentLevel: 'top' | 'dd' | 'topBlock' | 'ddBlock',\n}\n\nconst MenuStyleDDSize = (props: Props) => {\n    return (\n        <Aux>\n            {props.currentState === 'normal' ? (\n                <Aux>\n                    {props.currentLevel !== 'topBlock' &&\n                    props.currentLevel !== 'ddBlock' ? (\n                        <tr>\n                            <td>Space between</td>\n                            <td>\n                                <RangeInput\n                                    datatestid=\"menuSpaceBetweenR\"\n                                    changed={value =>\n                                        props.changed(\n                                            value,\n                                            'menuSpaceBetween' + props.prefix\n                                        )\n                                    }\n                                    value={\n                                        props.boxesValues[\n                                            'menuSpaceBetween' + props.prefix\n                                        ]\n                                    }\n                                    step={1}\n                                    min={0}\n                                    max={50}\n                                    saveToHistory={() => props.saveToHistory()}\n                                />\n                            </td>\n                            <td>\n                                <ValueInput\n                                    datatestid=\"menuSpaceBetweenI\"\n                                    value={\n                                        props.boxesValues[\n                                            'menuSpaceBetween' + props.prefix\n                                        ]\n                                    }\n                                    changed={value =>\n                                        props.changed(\n                                            value,\n                                            'menuSpaceBetween' + props.prefix\n                                        )\n                                    }\n                                />\n                            </td>\n                        </tr>\n                    ) : null}\n                    <tr>\n                        <td>Text left offset</td>\n                        <td>\n                            <RangeInput\n                                datatestid=\"menuLeftPaddingR\"\n                                changed={value =>\n                                    props.changed(\n                                        value,\n                                        'menuLeftPadding' + props.prefix\n                                    )\n                                }\n                                value={\n                                    props.boxesValues[\n                                        'menuLeftPadding' + props.prefix\n                                    ]\n                                }\n                                step={1}\n                                min={0}\n                                max={50}\n                                saveToHistory={() => props.saveToHistory()}\n                            />\n                        </td>\n                        <td>\n                            <ValueInput\n                                datatestid=\"menuLeftPaddingI\"\n                                value={\n                                    props.boxesValues[\n                                        'menuLeftPadding' + props.prefix\n                                    ]\n                                }\n                                changed={value =>\n                                    props.changed(\n                                        value,\n                                        'menuLeftPadding' + props.prefix\n                                    )\n                                }\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Text right offset</td>\n                        <td>\n                            <RangeInput\n                                datatestid=\"menuRightPaddingR\"\n                                changed={value =>\n                                    props.changed(\n                                        value,\n                                        'menuRightPadding' + props.prefix\n                                    )\n                                }\n                                value={\n                                    props.boxesValues[\n                                        'menuRightPadding' + props.prefix\n                                    ]\n                                }\n                                step={1}\n                                min={0}\n                                max={50}\n                                saveToHistory={() => props.saveToHistory()}\n                            />\n                        </td>\n                        <td>\n                            <ValueInput\n                                datatestid=\"menuRightPaddingI\"\n                                value={\n                                    props.boxesValues[\n                                        'menuRightPadding' + props.prefix\n                                    ]\n                                }\n                                changed={value =>\n                                    props.changed(\n                                        value,\n                                        'menuRightPadding' + props.prefix\n                                    )\n                                }\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Text top offset</td>\n                        <td>\n                            <RangeInput\n                                datatestid=\"menuTopPaddingR\"\n                                changed={value =>\n                                    props.changed(\n                                        value,\n                                        'menuTopPadding' + props.prefix\n                                    )\n                                }\n                                value={\n                                    props.boxesValues[\n                                        'menuTopPadding' + props.prefix\n                                    ]\n                                }\n                                step={1}\n                                min={0}\n                                max={50}\n                                saveToHistory={() => props.saveToHistory()}\n                            />\n                        </td>\n                        <td>\n                            <ValueInput\n                                datatestid=\"menuTopPaddingI\"\n                                value={\n                                    props.boxesValues[\n                                        'menuTopPadding' + props.prefix\n                                    ]\n                                }\n                                changed={value =>\n                                    props.changed(\n                                        value,\n                                        'menuTopPadding' + props.prefix\n                                    )\n                                }\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Text bottom offset</td>\n                        <td>\n                            <RangeInput\n                                datatestid=\"menuBottomPaddingR\"\n                                changed={value =>\n                                    props.changed(\n                                        value,\n                                        'menuBottomPadding' + props.prefix\n                                    )\n                                }\n                                value={\n                                    props.boxesValues[\n                                        'menuBottomPadding' + props.prefix\n                                    ]\n                                }\n                                step={1}\n                                min={0}\n                                max={50}\n                                saveToHistory={() => props.saveToHistory()}\n                            />\n                        </td>\n                        <td>\n                            <ValueInput\n                                datatestid=\"menuBottomPaddingI\"\n                                value={\n                                    props.boxesValues[\n                                        'menuBottomPadding' + props.prefix\n                                    ]\n                                }\n                                changed={value =>\n                                    props.changed(\n                                        value,\n                                        'menuBottomPadding' + props.prefix\n                                    )\n                                }\n                            />\n                        </td>\n                    </tr>\n                    {props.currentLevel !== 'topBlock' &&\n                    props.currentLevel !== 'ddBlock' ? (\n                        <Aux>\n                            <tr>\n                                <td>Dropdown menu horizontal offset</td>\n                                <td>\n                                    <RangeInput\n                                        datatestid=\"menuXOffsetR\"\n                                        changed={value =>\n                                            props.changed(\n                                                value,\n                                                'menuXOffsetTopNormal'\n                                            )\n                                        }\n                                        value={\n                                            props.boxesValues[\n                                                'menuXOffsetTopNormal'\n                                            ]\n                                        }\n                                        step={1}\n                                        min={0}\n                                        max={50}\n                                        saveToHistory={() =>\n                                            props.saveToHistory()\n                                        }\n                                    />\n                                </td>\n                                <td>\n                                    <ValueInput\n                                        datatestid=\"menuXOffsetI\"\n                                        value={\n                                            props.boxesValues[\n                                                'menuXOffsetTopNormal'\n                                            ]\n                                        }\n                                        changed={value =>\n                                            props.changed(\n                                                value,\n                                                'menuXOffsetTopNormal'\n                                            )\n                                        }\n                                    />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Dropdown menu vertical offset</td>\n                                <td>\n                                    <RangeInput\n                                        datatestid=\"menuYOffsetR\"\n                                        changed={value =>\n                                            props.changed(\n                                                value,\n                                                'menuYOffsetTopNormal'\n                                            )\n                                        }\n                                        value={\n                                            props.boxesValues[\n                                                'menuYOffsetTopNormal'\n                                            ]\n                                        }\n                                        step={1}\n                                        min={0}\n                                        max={50}\n                                        saveToHistory={() =>\n                                            props.saveToHistory()\n                                        }\n                                    />\n                                </td>\n                                <td>\n                                    <ValueInput\n                                        datatestid=\"menuYOffsetI\"\n                                        value={\n                                            props.boxesValues[\n                                                'menuYOffsetTopNormal'\n                                            ]\n                                        }\n                                        changed={value =>\n                                            props.changed(\n                                                value,\n                                                'menuYOffsetTopNormal'\n                                            )\n                                        }\n                                    />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Flexible width</td>\n                                <td colSpan=\"2\">\n                                    <Checkbox\n                                        datatestid=\"menuWidthFlexible\"\n                                        onChange={value =>\n                                            props.changed(\n                                                value,\n                                                'menuWidthFlexible' +\n                                                    props.prefix\n                                            )\n                                        }\n                                        checked={\n                                            props.boxesValues[\n                                                'menuWidthFlexible' +\n                                                    props.prefix\n                                            ]\n                                        }\n                                    />\n                                </td>\n                            </tr>\n                            {!props.boxesValues[\n                                'menuWidthFlexible' + props.prefix\n                            ] ? (\n                                <tr>\n                                    <td>Fixed width</td>\n                                    <td>\n                                        <RangeInput\n                                            datatestid=\"menuWidthR\"\n                                            changed={value =>\n                                                props.changed(\n                                                    value,\n                                                    'menuWidth' + props.prefix\n                                                )\n                                            }\n                                            value={\n                                                props.boxesValues[\n                                                    'menuWidth' + props.prefix\n                                                ]\n                                            }\n                                            step={1}\n                                            min={0}\n                                            max={300}\n                                            saveToHistory={() =>\n                                                props.saveToHistory()\n                                            }\n                                        />\n                                    </td>\n                                    <td>\n                                        <ValueInput\n                                            datatestid=\"menuWidthI\"\n                                            value={\n                                                props.boxesValues[\n                                                    'menuWidth' + props.prefix\n                                                ]\n                                            }\n                                            changed={value =>\n                                                props.changed(\n                                                    value,\n                                                    'menuWidth' + props.prefix\n                                                )\n                                            }\n                                        />\n                                    </td>\n                                </tr>\n                            ) : null}\n                            <tr>\n                                <td>Flexible height</td>\n                                <td colSpan=\"2\">\n                                    <Checkbox\n                                        datatestid=\"menuHeightFlexible\"\n                                        onChange={value =>\n                                            props.changed(\n                                                value,\n                                                'menuHeightFlexible' +\n                                                    props.prefix\n                                            )\n                                        }\n                                        checked={\n                                            props.boxesValues[\n                                                'menuHeightFlexible' +\n                                                    props.prefix\n                                            ]\n                                        }\n                                    />\n                                </td>\n                            </tr>\n                            {!props.boxesValues[\n                                'menuHeightFlexible' + props.prefix\n                            ] ? (\n                                <tr>\n                                    <td>Fixed height</td>\n                                    <td>\n                                        <RangeInput\n                                            datatestid=\"menuHeightR\"\n                                            changed={value =>\n                                                props.changed(\n                                                    value,\n                                                    'menuHeight' + props.prefix\n                                                )\n                                            }\n                                            value={\n                                                props.boxesValues[\n                                                    'menuHeight' + props.prefix\n                                                ]\n                                            }\n                                            step={1}\n                                            min={0}\n                                            max={200}\n                                            saveToHistory={() =>\n                                                props.saveToHistory()\n                                            }\n                                        />\n                                    </td>\n                                    <td>\n                                        <ValueInput\n                                            datatestid=\"menuHeightI\"\n                                            value={\n                                                props.boxesValues[\n                                                    'menuHeight' + props.prefix\n                                                ]\n                                            }\n                                            changed={value =>\n                                                props.changed(\n                                                    value,\n                                                    'menuHeight' + props.prefix\n                                                )\n                                            }\n                                        />\n                                    </td>\n                                </tr>\n                            ) : null}\n                        </Aux>\n                    ) : null}\n                </Aux>\n            ) : null}\n        </Aux>\n    )\n}\n\nexport default MenuStyleDDSize\n","import React, { Component } from 'react'\n\nimport Aux from '../../../../../../../../hoc/Aux'\nimport ValueInput from '../../../../../../../UI/ValueInput/ValueInput'\nimport RangeInput from '../../../../../../../UI/RangeInput/RangeInput'\nimport Checkbox from '../../../../../../../UI/Checkbox/Checkbox'\nimport BigColorPicker from '../../../../../../../UI/Buttons/BigColorPicker/BigColorPicker'\nimport * as classes from './MenuStyleDDBorder.module.css'\n\ntype Props = {\n    prefix: string,\n    boxesValues: {\n        menuXOffsetTopNormal: number,\n        menuYOffsetTopNormal: number,\n    },\n    changedStyleValues: Array<{}>,\n    saveToHistory: Function,\n    currentLevel: 'top' | 'dd' | 'topBlock' | 'ddBlock',\n    changed: Function,\n}\n\ntype State = {\n    side: 'all' | 'left' | 'right' | 'top' | 'bottom',\n}\n\nclass MenuStyleDDBorder extends Component<Props, State> {\n    state = {\n        side: 'all',\n    }\n\n    sideChanged = (side: 'all' | 'left' | 'right' | 'top' | 'bottom') => {\n        this.setState({ side: side })\n    }\n\n    render() {\n        const { props } = this\n        const prefix =\n            props.prefix +\n            this.state.side.charAt(0).toUpperCase() +\n            this.state.side.slice(1)\n        return (\n            <Aux>\n                <tr>\n                    <td>Side</td>\n                    <td colSpan=\"2\">\n                        <div className={classes.CheckBoxesContainer}>\n                            <Checkbox\n                                checked={this.state.side === 'all'}\n                                title=\"All\"\n                                radio={true}\n                                onChange={() => this.sideChanged('all')}\n                            />\n                            <Checkbox\n                                checked={this.state.side === 'left'}\n                                title=\"Left\"\n                                radio={true}\n                                onChange={() => this.sideChanged('left')}\n                            />\n                            <Checkbox\n                                checked={this.state.side === 'right'}\n                                title=\"Right\"\n                                radio={true}\n                                onChange={() => this.sideChanged('right')}\n                            />\n                            <Checkbox\n                                checked={this.state.side === 'top'}\n                                title=\"Top\"\n                                radio={true}\n                                onChange={() => this.sideChanged('top')}\n                            />\n                            <Checkbox\n                                checked={this.state.side === 'bottom'}\n                                title=\"Bottom\"\n                                radio={true}\n                                onChange={() => this.sideChanged('bottom')}\n                            />\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td>On</td>\n                    <td colSpan=\"2\">\n                        <Checkbox\n                            datatestid={'menuBorderOn' + prefix}\n                            checked={props.boxesValues['menuBorderOn' + prefix]}\n                            onChange={value =>\n                                props.changed(value, 'menuBorderOn' + prefix)\n                            }\n                        />\n                    </td>\n                </tr>\n                <tr>\n                    <td>No border</td>\n                    <td colSpan=\"2\">\n                        <Checkbox\n                            datatestid={'menuBorderNone' + prefix}\n                            checked={\n                                props.boxesValues['menuBorderNone' + prefix]\n                            }\n                            onChange={value =>\n                                props.changed(value, 'menuBorderNone' + prefix)\n                            }\n                        />\n                    </td>\n                </tr>\n                <tr>\n                    <td>Border color</td>\n                    <td colSpan=\"2\">\n                        <BigColorPicker\n                            valueKey={'menuBorderColor' + prefix}\n                            color=\"rgba(0, 0, 0, 1)\"\n                            values={props.boxesValues}\n                            changedStyleValues={props.changedStyleValues}\n                            saveToHistory={() => props.saveToHistory()}\n                            changed={color =>\n                                props.changed(color, 'menuBorderColor' + prefix)\n                            }\n                        />\n                    </td>\n                </tr>\n                <tr>\n                    <td>Size</td>\n                    <td>\n                        <RangeInput\n                            datatestid={'menuBorderSizeR' + prefix}\n                            changed={value =>\n                                props.changed(value, 'menuBorderSize' + prefix)\n                            }\n                            value={props.boxesValues['menuBorderSize' + prefix]}\n                            step={1}\n                            min={0}\n                            max={20}\n                            saveToHistory={() => props.saveToHistory()}\n                        />\n                    </td>\n                    <td>\n                        <ValueInput\n                            datatestid={'menuBorderSizeI' + prefix}\n                            value={props.boxesValues['menuBorderSize' + prefix]}\n                            min={0}\n                            changed={value =>\n                                props.changed(value, 'menuBorderSize' + prefix)\n                            }\n                        />\n                    </td>\n                </tr>\n                {props.currentLevel === 'topBlock' ||\n                props.currentLevel === 'ddBlock' ? (\n                    <tr>\n                        <td>Border radius</td>\n                        <td>\n                            <RangeInput\n                                datatestid={'menuBorderRadiusR' + prefix}\n                                changed={value =>\n                                    props.changed(\n                                        value,\n                                        'menuBorderRadius' + prefix\n                                    )\n                                }\n                                value={\n                                    props.boxesValues[\n                                        'menuBorderRadius' + prefix\n                                    ]\n                                }\n                                step={1}\n                                min={0}\n                                max={20}\n                                saveToHistory={() => props.saveToHistory()}\n                            />\n                        </td>\n                        <td>\n                            <ValueInput\n                                datatestid={'menuBorderRadiusI' + prefix}\n                                value={\n                                    props.boxesValues[\n                                        'menuBorderRadius' + prefix\n                                    ]\n                                }\n                                min={0}\n                                changed={value =>\n                                    props.changed(\n                                        value,\n                                        'menuBorderRadius' + prefix\n                                    )\n                                }\n                            />\n                        </td>\n                    </tr>\n                ) : null}\n                {/* <tr>\n                    <td>Radius</td>\n                    <td><RangeInput\n                        changed=\"changeElementPropertyValue\"\n                        valueKey=\"borderRadius\"\n                        max=\"20\" /></td>\n                    <td><ValueInput \n                        valueKey=\"borderRadius\"\n                        changed=\"changeElementPropertyValue\" /></td>\n                </tr> */}\n                {props.currentLevel === 'top' || props.currentLevel === 'dd' ? (\n                    <tr>\n                        <td>Outer border</td>\n                        <td>\n                            <Checkbox\n                                datatestid={'menuBorderOutset' + prefix}\n                                checked={\n                                    props.boxesValues[\n                                        'menuBorderOutset' + prefix\n                                    ]\n                                }\n                                onChange={value =>\n                                    props.changed(\n                                        value,\n                                        'menuBorderOutset' + prefix\n                                    )\n                                }\n                            />\n                        </td>\n                        <td />\n                    </tr>\n                ) : null}\n            </Aux>\n        )\n    }\n}\n\nexport default MenuStyleDDBorder\n","import React from 'react'\nimport SelectComponent from 'react-select'\n\nimport classes from './Select.module.css'\n\ntype Props = {\n    startValue?: any,\n    title?: string,\n    onChange: Function,\n    datatestid?: string,\n    styles?: {},\n    options: Array<{\n        value: string,\n        label: string,\n    }>,\n    default: number,\n    isSearchable?: boolean,\n}\n\nconst Select = (props: Props) => {\n    const customStyles = {\n        menu: (provided: {}, state: {}) => ({\n            ...provided,\n            width: '200px',\n            top: 'auto',\n        }),\n        selectContainer: (provided: {}, state: {}) => ({\n            ...provided,\n            width: '200px',\n            top: 'auto',\n        }),\n    }\n\n    let startValue\n    if (props.startValue) {\n        startValue = props.options.filter(\n            option => option.value === props.startValue\n        )\n        startValue = startValue.length === 1 ? startValue[0] : null\n    }\n\n    return (\n        <div className={classes.Div}>\n            {props.title}\n            <SelectComponent\n                className={classes.Select}\n                styles={{\n                    ...customStyles,\n                    ...props.styles,\n                }}\n                value={startValue || props.options[props.default]}\n                isClearable={false}\n                isSearchable={props.isSearchable}\n                onChange={props.onChange}\n                options={props.options}\n            />\n        </div>\n    )\n}\n\nSelect.defaultProps = {\n    default: 0,\n}\n\nexport default Select\n","import React from 'react'\n\nimport Aux from '../../../../../../../../hoc/Aux'\nimport ValueInput from '../../../../../../../UI/ValueInput/ValueInput'\nimport RangeInput from '../../../../../../../UI/RangeInput/RangeInput'\nimport Select from '../../../../../../../UI/Select/Select'\nimport Checkbox from '../../../../../../../UI/Checkbox/Checkbox'\nimport BigColorPicker from '../../../../../../../UI/Buttons/BigColorPicker/BigColorPicker'\nimport { fontsList } from '../../../../../../../../containers/SiteBuilder/fontsList'\n\ntype Props = {\n    prefix: string,\n    boxesValues: {\n        menuXOffsetTopNormal: number,\n        menuYOffsetTopNormal: number,\n    },\n    changedStyleValues: Array<{}>,\n    saveToHistory: Function,\n    changed: Function,\n    currentState: 'normal' | 'hover' | 'active',\n}\n\nconst fontTitleAlignOptions = [\n    { value: 'flex-start', label: 'Left' },\n    { value: 'center', label: 'Center' },\n    { value: 'flex-end', label: 'Right' },\n]\n\nconst fontTransformOptions = [\n    { value: 'none', label: 'None' },\n    { value: 'uppercase', label: 'Uppercase' },\n    { value: 'lowercase', label: 'Lowercase' },\n    { value: 'capitalize', label: 'Capitalize' },\n]\n\nconst fontFamilyOptions = fontsList.map(font => {\n    return { value: font.font, label: font.font }\n})\n\nconst fontStyles = {\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n        return {\n            ...styles,\n            fontFamily: data.value,\n        }\n    },\n    singleValue: (styles, { data, isDisabled, isFocused, isSelected }) => {\n        return {\n            ...styles,\n            fontFamily: data.value,\n        }\n    },\n}\n\nconst MenuStyleDDFont = (props: Props) => {\n    const { prefix } = props\n    return (\n        <Aux>\n            <tr>\n                <td>Text color</td>\n                <td colSpan=\"2\">\n                    <BigColorPicker\n                        valueKey={'menuFontColor' + prefix}\n                        color=\"rgba(0, 0, 0, 1)\"\n                        values={props.boxesValues}\n                        changedStyleValues={props.changedStyleValues}\n                        saveToHistory={() => props.saveToHistory()}\n                        changed={color =>\n                            props.changed(color, 'menuFontColor' + prefix)\n                        }\n                    />\n                </td>\n            </tr>\n            <tr>\n                <td>Highlight color</td>\n                <td colSpan=\"2\">\n                    <BigColorPicker\n                        valueKey={'menuFontHighlight' + prefix}\n                        color=\"rgba(0, 0, 0, 1)\"\n                        values={props.boxesValues}\n                        changedStyleValues={props.changedStyleValues}\n                        saveToHistory={() => props.saveToHistory()}\n                        changed={color =>\n                            props.changed(color, 'menuFontHighlight' + prefix)\n                        }\n                    />\n                </td>\n            </tr>\n            {props.currentState === 'normal' ? (\n                <Aux>\n                    <tr>\n                        <td>Size</td>\n                        <td>\n                            <RangeInput\n                                datatestid=\"menuFontSizeR\"\n                                changed={value =>\n                                    props.changed(\n                                        value,\n                                        'menuFontSize' + props.prefix\n                                    )\n                                }\n                                value={\n                                    props.boxesValues[\n                                        'menuFontSize' + props.prefix\n                                    ]\n                                }\n                                step={1}\n                                min={10}\n                                max={30}\n                                saveToHistory={() => props.saveToHistory()}\n                            />\n                        </td>\n                        <td>\n                            <ValueInput\n                                datatestid=\"menuFontSizeI\"\n                                value={\n                                    props.boxesValues[\n                                        'menuFontSize' + props.prefix\n                                    ]\n                                }\n                                min={0}\n                                changed={value =>\n                                    props.changed(\n                                        value,\n                                        'menuFontSize' + props.prefix\n                                    )\n                                }\n                            />\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td>Font</td>\n                        <td>\n                            <Select\n                                onChange={value =>\n                                    props.changed(\n                                        value.value,\n                                        'menuFontFamily' + props.prefix\n                                    )\n                                }\n                                isSearchable={true}\n                                options={fontFamilyOptions}\n                                startValue={\n                                    props.boxesValues[\n                                        'menuFontFamily' + props.prefix\n                                    ]\n                                }\n                                default={0}\n                                styles={fontStyles}\n                            />\n                        </td>\n                    </tr>\n                </Aux>\n            ) : null}\n            <tr>\n                <td>Title horizontal align</td>\n                <td>\n                    <Select\n                        onChange={value =>\n                            props.changed(\n                                value.value,\n                                'menuFontHorizontalAlign' + props.prefix\n                            )\n                        }\n                        isSearchable={false}\n                        options={fontTitleAlignOptions}\n                        startValue={\n                            props.boxesValues[\n                                'menuFontHorizontalAlign' + props.prefix\n                            ]\n                        }\n                    />\n                </td>\n            </tr>\n            <tr>\n                <td>Title vertical align</td>\n                <td>\n                    <Select\n                        onChange={value =>\n                            props.changed(\n                                value.value,\n                                'menuFontVerticalAlign' + props.prefix\n                            )\n                        }\n                        isSearchable={false}\n                        options={fontTitleAlignOptions}\n                        startValue={\n                            props.boxesValues[\n                                'menuFontVerticalAlign' + props.prefix\n                            ]\n                        }\n                    />\n                </td>\n            </tr>\n            {props.currentState === 'normal' ? (\n                <tr>\n                    <td>Italic</td>\n                    <td colSpan=\"2\">\n                        <Checkbox\n                            datatestid=\"menuFontItalic\"\n                            onChange={value =>\n                                props.changed(\n                                    value,\n                                    'menuFontItalic' + props.prefix\n                                )\n                            }\n                            checked={\n                                props.boxesValues[\n                                    'menuFontItalic' + props.prefix\n                                ]\n                            }\n                        />\n                    </td>\n                </tr>\n            ) : null}\n            <tr>\n                <td>Underline</td>\n                <td colSpan=\"2\">\n                    <Checkbox\n                        datatestid=\"menuFontUnderline\"\n                        onChange={value =>\n                            props.changed(\n                                value,\n                                'menuFontUnderline' + props.prefix\n                            )\n                        }\n                        checked={\n                            props.boxesValues[\n                                'menuFontUnderline' + props.prefix\n                            ]\n                        }\n                    />\n                </td>\n            </tr>\n            <tr>\n                <td>Strikethrough</td>\n                <td colSpan=\"2\">\n                    <Checkbox\n                        datatestid=\"menuFontStrikethrough\"\n                        onChange={value =>\n                            props.changed(\n                                value,\n                                'menuFontStrikethrough' + props.prefix\n                            )\n                        }\n                        checked={\n                            props.boxesValues[\n                                'menuFontStrikethrough' + props.prefix\n                            ]\n                        }\n                    />\n                </td>\n            </tr>\n            <tr>\n                <td>Overline</td>\n                <td colSpan=\"2\">\n                    <Checkbox\n                        datatestid=\"menuFontOverline\"\n                        onChange={value =>\n                            props.changed(\n                                value,\n                                'menuFontOverline' + props.prefix\n                            )\n                        }\n                        checked={\n                            props.boxesValues['menuFontOverline' + props.prefix]\n                        }\n                    />\n                </td>\n            </tr>\n            {props.currentState === 'normal' ? (\n                <Aux>\n                    <tr>\n                        <td>Transform</td>\n                        <td>\n                            <Select\n                                onChange={value =>\n                                    props.changed(\n                                        value.value,\n                                        'menuFontTransform' + props.prefix\n                                    )\n                                }\n                                isSearchable={false}\n                                options={fontTransformOptions}\n                                startValue={\n                                    props.boxesValues[\n                                        'menuFontTransform' + props.prefix\n                                    ]\n                                }\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Word spacing</td>\n                        <td>\n                            <RangeInput\n                                datatestid=\"menuWordSpacingR\"\n                                changed={value =>\n                                    props.changed(\n                                        value,\n                                        'menuWordSpacing' + props.prefix\n                                    )\n                                }\n                                value={\n                                    props.boxesValues[\n                                        'menuWordSpacing' + props.prefix\n                                    ]\n                                }\n                                step={0.1}\n                                min={-10}\n                                max={10}\n                                saveToHistory={() => props.saveToHistory()}\n                            />\n                        </td>\n                        <td>\n                            <ValueInput\n                                datatestid=\"menuWordSpacingI\"\n                                value={\n                                    props.boxesValues[\n                                        'menuWordSpacing' + props.prefix\n                                    ]\n                                }\n                                changed={value =>\n                                    props.changed(\n                                        value,\n                                        'menuWordSpacing' + props.prefix\n                                    )\n                                }\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Letter spacing</td>\n                        <td>\n                            <RangeInput\n                                datatestid=\"menuLetterSpacing\"\n                                changed={value =>\n                                    props.changed(\n                                        value,\n                                        'menuLetterSpacing' + props.prefix\n                                    )\n                                }\n                                value={\n                                    props.boxesValues[\n                                        'menuLetterSpacing' + props.prefix\n                                    ]\n                                }\n                                step={0.1}\n                                min={-10}\n                                max={10}\n                                saveToHistory={() => props.saveToHistory()}\n                            />\n                        </td>\n                        <td>\n                            <ValueInput\n                                datatestid=\"menuLetterSpacingI\"\n                                value={\n                                    props.boxesValues[\n                                        'menuLetterSpacing' + props.prefix\n                                    ]\n                                }\n                                changed={value =>\n                                    props.changed(\n                                        value,\n                                        'menuLetterSpacing' + props.prefix\n                                    )\n                                }\n                            />\n                        </td>\n                    </tr>\n                </Aux>\n            ) : null}\n        </Aux>\n    )\n}\n\nexport default MenuStyleDDFont\n","import React from 'react'\n\nimport Aux from '../../../../../../../../hoc/Aux'\nimport ValueInput from '../../../../../../../UI/ValueInput/ValueInput'\nimport RangeInput from '../../../../../../../UI/RangeInput/RangeInput'\nimport Checkbox from '../../../../../../../UI/Checkbox/Checkbox'\nimport BigColorPicker from '../../../../../../../UI/Buttons/BigColorPicker/BigColorPicker'\n\ntype Props = {\n    prefix: string,\n    boxesValues: {\n        menuXOffsetTopNormal: number,\n        menuYOffsetTopNormal: number,\n    },\n    changedStyleValues: Array<{}>,\n    saveToHistory: Function,\n    changed: Function,\n}\n\nconst MenuStyleDDShadow = (props: Props) => {\n    const { prefix } = props\n    return (\n        <Aux>\n            <tr>\n                <td>On</td>\n                <td colSpan=\"2\">\n                    <Checkbox\n                        datatestid={'menuShadowrOn' + prefix}\n                        checked={props.boxesValues['menuShadowOn' + prefix]}\n                        onChange={value =>\n                            props.changed(value, 'menuShadowOn' + prefix)\n                        }\n                    />\n                </td>\n            </tr>\n            <tr>\n                <td>Color</td>\n                <td colSpan=\"2\">\n                    <BigColorPicker\n                        valueKey={'menuShadowColor' + prefix}\n                        color=\"rgba(0, 0, 0, 1)\"\n                        values={props.boxesValues}\n                        changedStyleValues={props.changedStyleValues}\n                        saveToHistory={() => props.saveToHistory()}\n                        changed={color =>\n                            props.changed(color, 'menuShadowColor' + prefix)\n                        }\n                    />\n                </td>\n            </tr>\n            <tr>\n                <td>Size</td>\n                <td>\n                    <RangeInput\n                        datatestid={'menuShadowSizeR' + prefix}\n                        changed={value =>\n                            props.changed(value, 'menuShadowSize' + prefix)\n                        }\n                        value={props.boxesValues['menuShadowSize' + prefix]}\n                        step={1}\n                        min={-20}\n                        max={20}\n                        saveToHistory={() => props.saveToHistory()}\n                    />\n                </td>\n                <td>\n                    <ValueInput\n                        datatestid={'menuShadowSizeI' + prefix}\n                        value={props.boxesValues['menuShadowSize' + prefix]}\n                        changed={value =>\n                            props.changed(value, 'menuShadowSize' + prefix)\n                        }\n                    />\n                </td>\n            </tr>\n            <tr>\n                <td>Blur</td>\n                <td>\n                    <RangeInput\n                        datatestid={'menuShadowBlurR' + prefix}\n                        changed={value =>\n                            props.changed(value, 'menuShadowBlur' + prefix)\n                        }\n                        value={props.boxesValues['menuShadowBlur' + prefix]}\n                        step={1}\n                        min={0}\n                        max={20}\n                        saveToHistory={() => props.saveToHistory()}\n                    />\n                </td>\n                <td>\n                    <ValueInput\n                        datatestid={'menuShadowBlurI' + prefix}\n                        value={props.boxesValues['menuShadowBlur' + prefix]}\n                        min={0}\n                        changed={value =>\n                            props.changed(value, 'menuShadowBlur' + prefix)\n                        }\n                    />\n                </td>\n            </tr>\n            <tr>\n                <td>Horizontal shift</td>\n                <td>\n                    <RangeInput\n                        datatestid={'menuShadowHorizontalShiftR' + prefix}\n                        changed={value =>\n                            props.changed(\n                                value,\n                                'menuShadowHorizontalShift' + prefix\n                            )\n                        }\n                        value={\n                            props.boxesValues[\n                                'menuShadowHorizontalShift' + prefix\n                            ]\n                        }\n                        step={1}\n                        min={-20}\n                        max={20}\n                        saveToHistory={() => props.saveToHistory()}\n                    />\n                </td>\n                <td>\n                    <ValueInput\n                        datatestid={'menuShadowHorizontalShiftI' + prefix}\n                        value={\n                            props.boxesValues[\n                                'menuShadowHorizontalShift' + prefix\n                            ]\n                        }\n                        changed={value =>\n                            props.changed(\n                                value,\n                                'menuShadowHorizontalShift' + prefix\n                            )\n                        }\n                    />\n                </td>\n            </tr>\n            <tr>\n                <td>Vertical shift</td>\n                <td>\n                    <RangeInput\n                        datatestid={'menuShadowVerticalShiftR' + prefix}\n                        changed={value =>\n                            props.changed(\n                                value,\n                                'menuShadowVerticalShift' + prefix\n                            )\n                        }\n                        value={\n                            props.boxesValues[\n                                'menuShadowVerticalShift' + prefix\n                            ]\n                        }\n                        step={1}\n                        min={-20}\n                        max={20}\n                        saveToHistory={() => props.saveToHistory()}\n                    />\n                </td>\n                <td>\n                    <ValueInput\n                        datatestid={'menuShadowVerticalShiftI' + prefix}\n                        value={\n                            props.boxesValues[\n                                'menuShadowVerticalShift' + prefix\n                            ]\n                        }\n                        changed={value =>\n                            props.changed(\n                                value,\n                                'menuShadowVerticalShift' + prefix\n                            )\n                        }\n                    />\n                </td>\n            </tr>\n        </Aux>\n    )\n}\n\nexport default MenuStyleDDShadow\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../../../../../store/actions/index'\nimport * as classes from './MenuStyleDD.module.css'\nimport Aux from '../../../../../../hoc/Aux'\nimport MenuStyleDDTopTabs from './MenuStyleDDTopTabs/MenuStyleDDTopTabs'\nimport MenuStyleDDSideMenu from './MenuStyleDDSideMenu/MenuStyleDDSideMenu'\nimport MenuStyleDDColor from './MenuStyleDDSettings/MenuStyleDDColor/MenuStyleDDColor'\nimport MenuStyleDDSize from './MenuStyleDDSettings/MenuStyleDDSize/MenuStyleDDSize'\nimport MenuStyleDDBorder from './MenuStyleDDSettings/MenuStyleDDBorder/MenuStyleDDBorder'\nimport MenuStyleDDFont from './MenuStyleDDSettings/MenuStyleDDFont/MenuStyleDDFont'\nimport MenuStyleDDShadow from './MenuStyleDDSettings/MenuStyleDDShadow/MenuStyleDDShadow'\n\ntype Props = {\n    boxesValues: {\n        menuXOffsetTopNormal: number,\n        menuYOffsetTopNormal: number,\n    },\n    changedStyleValues: Array<{}>,\n    saveToHistory: Function,\n    changed: Function,\n}\ntype State = {\n    level: 'top' | 'dd' | 'topBlock' | 'ddBlock',\n    state: 'normal' | 'hover' | 'active',\n    sideMenu: 'color' | 'border' | 'size' | 'font' | 'shadow',\n}\n\nclass MenuStyleDD extends Component<Props, State> {\n    state = {\n        level: 'topBlock',\n        state: 'normal',\n        sideMenu: 'color',\n    }\n\n    handleLevelChange = (type: 'top' | 'dd' | 'topBlock' | 'ddBlock'): any => {\n        if (type === 'top' || type === 'dd') {\n            if (this.state.sideMenu !== 'shadow') {\n                this.setState({ level: type })\n            } else {\n                this.setState({ level: type, sideMenu: 'color' })\n            }\n        } else {\n            if (this.state.sideMenu !== 'font') {\n                this.setState({ level: type, state: 'normal' })\n            } else {\n                this.setState({\n                    level: type,\n                    state: 'normal',\n                    sideMenu: 'color',\n                })\n            }\n        }\n    }\n\n    handleStateChange = (type: 'normal' | 'hover' | 'active'): any => {\n        this.setState({ state: type })\n    }\n\n    handleSideMenuChange = (\n        type: 'color' | 'border' | 'font' | 'size' | 'shadow'\n    ): any => {\n        this.setState({ sideMenu: type })\n    }\n\n    render() {\n        if (this.state.sideMenu === 'size') {\n            if (this.state.state !== 'normal') {\n                this.setState({ sideMenu: 'color' })\n            }\n        }\n\n        if (this.state.sideMenu === 'font') {\n            if (this.state.state !== 'normal') {\n                this.setState({ sideMenu: 'color' })\n            }\n        }\n\n        let prefix = ''\n        if (this.state.level === 'top') {\n            prefix += 'Top'\n        } else if (this.state.level === 'dd') {\n            prefix += 'DD'\n        } else if (this.state.level === 'topBlock') {\n            prefix += 'TopBlock'\n        } else {\n            prefix += 'DDBlock'\n        }\n        if (this.state.state === 'normal') {\n            prefix += 'Normal'\n        } else if (this.state.state === 'hover') {\n            prefix += 'Hover'\n        } else {\n            prefix += 'Active'\n        }\n\n        return (\n            <Aux>\n                <div>\n                    <MenuStyleDDTopTabs\n                        currentLevel={this.state.level}\n                        currentState={this.state.state}\n                        levelChanged={this.handleLevelChange}\n                        stateChanged={this.handleStateChange}\n                    />\n                </div>\n                <div>\n                    <div className={classes.SideMenu}>\n                        <MenuStyleDDSideMenu\n                            currentItem={this.state.sideMenu}\n                            currentLevel={this.state.level}\n                            currentState={this.state.state}\n                            changed={this.handleSideMenuChange}\n                        />\n                    </div>\n                    <div className={classes.SettingsContainer}>\n                        <table className={classes.Table}>\n                            <tbody>\n                                {this.state.sideMenu === 'color' ? (\n                                    <MenuStyleDDColor\n                                        prefix={prefix}\n                                        boxesValues={this.props.boxesValues}\n                                        changedStyleValues={\n                                            this.props.changedStyleValues\n                                        }\n                                        changed={this.props.changed}\n                                        saveToHistory={this.props.saveToHistory}\n                                    />\n                                ) : null}\n                                {this.state.sideMenu === 'size' ? (\n                                    <MenuStyleDDSize\n                                        currentLevel={this.state.level}\n                                        currentState={this.state.state}\n                                        prefix={prefix}\n                                        boxesValues={this.props.boxesValues}\n                                        changedStyleValues={\n                                            this.props.changedStyleValues\n                                        }\n                                        changed={this.props.changed}\n                                        saveToHistory={this.props.saveToHistory}\n                                    />\n                                ) : null}\n                                {this.state.sideMenu === 'border' ? (\n                                    <MenuStyleDDBorder\n                                        prefix={prefix}\n                                        boxesValues={this.props.boxesValues}\n                                        changedStyleValues={\n                                            this.props.changedStyleValues\n                                        }\n                                        changed={this.props.changed}\n                                        saveToHistory={this.props.saveToHistory}\n                                        currentLevel={this.state.level}\n                                    />\n                                ) : null}\n                                {this.state.sideMenu === 'font' ? (\n                                    <MenuStyleDDFont\n                                        currentState={this.state.state}\n                                        prefix={prefix}\n                                        boxesValues={this.props.boxesValues}\n                                        changedStyleValues={\n                                            this.props.changedStyleValues\n                                        }\n                                        changed={this.props.changed}\n                                        saveToHistory={this.props.saveToHistory}\n                                    />\n                                ) : null}\n                                {this.state.sideMenu === 'shadow' ? (\n                                    <MenuStyleDDShadow\n                                        prefix={prefix}\n                                        boxesValues={this.props.boxesValues}\n                                        changedStyleValues={\n                                            this.props.changedStyleValues\n                                        }\n                                        changed={this.props.changed}\n                                        saveToHistory={this.props.saveToHistory}\n                                    />\n                                ) : null}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        boxesValues: state.builder.present.chosenBoxesValues,\n        changedStyleValues: state.builder.present.changedStyleValues,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        saveToHistory: () => {\n            dispatch(actions.saveToHistory())\n        },\n        changed: (value, valueKey) =>\n            dispatch(\n                actions.changeElementPropertyValue(value, valueKey, false, true)\n            ),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MenuStyleDD)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Aux from '../../../../../../../hoc/Aux'\nimport Checkbox from '../../../../../../UI/Checkbox/Checkbox'\nimport * as classes from './MenuAddItemsDDSettings.module.css'\nimport TextInput from '../../../../../../UI/TextInput/TextInput'\nimport Sortly from 'react-sortly/lib/Sortly'\nimport Svg from '../../../../../../Svg/Svg'\nimport withDragDropContext from '../../../../../../../hoc/withDragDropContext'\n\ntype Props = {\n    currentType: string,\n    currentPage: string,\n    pagesStructure: Array<{\n        url: string,\n        name: string,\n        title: string,\n        description: string,\n        id: string,\n        path: Array<string>,\n        isHidden: boolean,\n        isHomePage: boolean,\n        isNotPublished: boolean,\n    }>,\n    name: string,\n    newTab: boolean,\n    currentPage: string,\n    all: boolean,\n    url: string,\n    nameChanged: (name: string) => {},\n    newTabChanged: (newTab: boolean) => {},\n    setCurrentPageMain: (page: string, all: boolean, name: string) => {},\n    linkChanged: (link: string) => {},\n}\n\nconst MenuAddItemsDDSettings = (props: Props) => {\n    const items = [\n        { name: 'All pages', all: true, path: [], key: 'add_all', id: '' },\n    ]\n    props.pagesStructure.forEach(page => {\n        items.push({ ...page, key: 'add_' + page.id })\n        items.push({\n            ...page,\n            all: true,\n            name: 'All pages in ' + page.name,\n            path: [...page.path, page.id],\n            key: 'add_all_' + page.id,\n        })\n    })\n    const setCurrentPageMain = props.setCurrentPageMain\n    const currentPage = props.currentPage\n    const mainAll = props.all\n\n    const ItemRenderer = props => {\n        const {\n            name,\n            path,\n            id,\n            isHomePage,\n            isHidden,\n            isNotPublished,\n            all,\n        } = props\n        const style = {\n            position: 'relative',\n            border: '1px solid #ccc',\n            cursor: 'move',\n            padding: 10,\n            paddingRight: 30,\n            marginBottom: 4,\n            margin: 10,\n            marginLeft: 10 + path.length * 50,\n            width: 300,\n            outline:\n                currentPage === id && mainAll === all ? '1px solid blue' : null,\n        }\n\n        const iconsContainerStyle = {\n            position: 'absolute',\n            top: 6,\n            right: 6,\n            fill: '#555',\n        }\n\n        const el = (\n            <div\n                data-testid={id}\n                style={style}\n                onMouseDown={() => setCurrentPageMain(id, all, name)}\n            >\n                {name}\n                <div style={iconsContainerStyle}>\n                    {isHomePage ? (\n                        <Svg\n                            datatestid={`home_${id}`}\n                            icon='<svg height=\"20\" viewBox=\"0 0 24 24\" width=\"20\"><path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\"></path></svg>'\n                        />\n                    ) : null}\n                    {isHidden ? (\n                        <Svg\n                            datatestid={`hid_${id}`}\n                            icon='<svg height=\"20\" viewBox=\"0 0 24 24\" width=\"20\"><path d=\"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"></path></svg>'\n                        />\n                    ) : null}\n                    {isNotPublished ? (\n                        <Svg\n                            datatestid={`pub_${id}`}\n                            icon='<svg height=\"20\" viewBox=\"0 0 24 24\" width=\"20\"><path xmlns=\"http://www.w3.org/2000/svg\" d=\"M5 4v2h14V4H5zm0 10h4v6h6v-6h4l-7-7-7 7z\"></path></svg>'\n                        />\n                    ) : null}\n                </div>\n            </div>\n        )\n        return el\n    }\n\n    return (\n        <Aux>\n            <tr>\n                <td>Name</td>\n                <td colSpan=\"2\">\n                    <TextInput\n                        value={props.name}\n                        changed={name => props.nameChanged(name)}\n                    />\n                </td>\n            </tr>\n            <tr\n                className={\n                    ['page', 'link'].indexOf(props.currentType) >= 0\n                        ? ''\n                        : classes.Hidden\n                }\n            >\n                <td>New tab</td>\n                <td colSpan=\"2\">\n                    <Checkbox\n                        checked={props.newTab}\n                        onChange={value => props.newTabChanged(value)}\n                    />\n                </td>\n            </tr>\n            <tr\n                className={\n                    ['page'].indexOf(props.currentType) >= 0\n                        ? ''\n                        : classes.Hidden\n                }\n            >\n                <td>Page</td>\n                <td />\n            </tr>\n            <tr\n                className={\n                    ['page'].indexOf(props.currentType) >= 0\n                        ? ''\n                        : classes.Hidden\n                }\n            >\n                <td />\n                <td>\n                    <div>\n                        <Sortly\n                            items={items}\n                            itemRenderer={ItemRenderer}\n                            onChange={value => {}}\n                        />\n                    </div>\n                </td>\n            </tr>\n            <tr\n                className={\n                    ['link'].indexOf(props.currentType) >= 0\n                        ? ''\n                        : classes.Hidden\n                }\n            >\n                <td>Link URL</td>\n                <td colSpan=\"2\">\n                    <TextInput\n                        value={props.url}\n                        changed={url => props.linkChanged(url)}\n                    />\n                </td>\n            </tr>\n        </Aux>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        pagesStructure: state.website.pagesStructure,\n    }\n}\n\nexport default withDragDropContext(\n    connect(mapStateToProps)(MenuAddItemsDDSettings)\n)\n","import React from 'react'\n\nimport * as classes from './MenuAddItemsDDTopTabs.module.css'\nimport Aux from '../../../../../../../hoc/Aux'\nimport Checkbox from '../../../../../../UI/Checkbox/Checkbox'\nimport SmallButton from '../../../../../../UI/Buttons/SmallButton/SmallButton'\n\ntype Props = {\n    currentType: 'page' | 'link' | 'anchor' | 'placeholder' | 'email',\n    typeChanged: ('page' | 'link' | 'anchor' | 'placeholder' | 'email') => {},\n    addMenuItem: Function,\n    editMode: boolean,\n}\n\nconst MenuAddItemsDDTopTabs = (props: Props) => (\n    <Aux>\n        <div className={classes.CheckBoxesContainer}>\n            <Checkbox\n                checked={props.currentType === 'page'}\n                title=\"Page\"\n                radio={true}\n                onChange={() => props.typeChanged('page')}\n            />\n            <Checkbox\n                checked={props.currentType === 'link'}\n                title=\"Link\"\n                radio={true}\n                onChange={() => props.typeChanged('link')}\n            />\n            <Checkbox\n                checked={props.currentType === 'placeholder'}\n                title=\"Text\"\n                radio={true}\n                onChange={() => props.typeChanged('placeholder')}\n            />\n            <SmallButton\n                title={!props.editMode ? 'Add' : 'Save'}\n                icon='<svg height=\"20\" width=\"20\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"></path></svg>'\n                buttonClicked={() => props.addMenuItem()}\n            />\n        </div>\n    </Aux>\n)\n\nexport default MenuAddItemsDDTopTabs\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../../../../../store/actions/index'\nimport * as classes from './MenuAddItemsDD.module.css'\nimport Aux from '../../../../../../hoc/Aux'\nimport MenuAddItemsDDSettings from './MenuAddItemsDDSettings/MenuAddItemsDDSettings'\nimport MenuAddItemsDDTopTabs from './MenuAddItemsDDTopTabs/MenuAddItemsDDTopTabs'\nimport { insert } from 'react-sortly'\n\ntype Props = {\n    boxesValues: {},\n    saveToHistory: Function,\n    changed: Function,\n    addMenuItem: Function,\n    currentItem: string,\n    editMode?: boolean,\n    currentItemValues?: {\n        type: 'page' | 'link' | 'anchor' | 'placeholder' | 'email',\n        name: string,\n        newTab: boolean,\n        currentPage: string,\n        all: boolean,\n        url: string,\n    },\n}\ntype State = {\n    type: 'page' | 'link' | 'anchor' | 'placeholder' | 'email',\n    name: string,\n    newTab: boolean,\n    currentPage: string,\n    all: boolean,\n    url: string,\n}\n\nclass MenuAddItemsDD extends Component<Props, State> {\n    state = !this.props.editMode\n        ? {\n              type: 'page',\n              name: 'All pages',\n              newTab: false,\n              currentPage: '',\n              all: true,\n              url: '',\n          }\n        : {\n              type: this.props.currentItemValues.type,\n              name: this.props.currentItemValues.name,\n              newTab: this.props.currentItemValues.newTab,\n              currentPage: this.props.currentItemValues.pageId,\n              all: this.props.currentItemValues.all,\n              url: this.props.currentItemValues.url,\n          }\n\n    handleTypeChange = (\n        type: 'page' | 'link' | 'anchor' | 'placeholder' | 'email'\n    ): any => {\n        this.setState({ type: type })\n    }\n\n    nameChanged = (name: string) => {\n        this.setState({ name: name })\n    }\n\n    newTabChanged = (value: boolean) => {\n        this.setState({ newTab: value })\n    }\n\n    setCurrentPageMain = (id: string, all: boolean, name: string) => {\n        this.setState({ currentPage: id, all: all, name: name })\n    }\n\n    linkChanged = (url: string) => {\n        this.setState({ url: url })\n    }\n\n    addMenuItem = () => {\n        if (!this.props.editMode) {\n            const newMenuId = parseInt(this.props.boxesValues.currentMenuId) + 1\n            const newMenuItem = {\n                name: this.state.name,\n                path: [],\n                all: this.state.all,\n                newTab: this.state.newTab,\n                url: this.state.url,\n                type: this.state.type,\n                pageId: this.state.currentPage,\n                id: newMenuId,\n            }\n\n            this.props.changed(newMenuId, 'currentMenuId')\n\n            if (this.props.currentItem !== '') {\n                this.props.changed(\n                    insert(\n                        this.props.boxesValues.itemsList,\n                        this.props.boxesValues.itemsList.findIndex(\n                            el =>\n                                parseInt(el.id) ===\n                                parseInt(this.props.currentItem)\n                        ),\n                        newMenuItem\n                    ),\n                    'itemsList'\n                )\n            } else {\n                this.props.changed(\n                    [...this.props.boxesValues.itemsList, newMenuItem],\n                    'itemsList'\n                )\n            }\n\n            this.props.chooseItem(newMenuItem.id)\n        } else {\n            const newMenuItem = {\n                ...this.props.currentItemValues,\n                name: this.state.name,\n                all: this.state.all,\n                newTab: this.state.newTab,\n                url: this.state.url,\n                type: this.state.type,\n                pageId: this.state.currentPage,\n            }\n            const index = this.props.boxesValues.itemsList.findIndex(\n                el =>\n                    parseInt(el.id) ===\n                    parseInt(this.props.currentItemValues.id)\n            )\n            const newList = [...this.props.boxesValues.itemsList]\n            newList[index] = newMenuItem\n            this.props.changed(newList, 'itemsList')\n        }\n        this.props.close()\n    }\n\n    render() {\n        return (\n            <Aux>\n                <div>\n                    <MenuAddItemsDDTopTabs\n                        currentType={this.state.type}\n                        typeChanged={this.handleTypeChange}\n                        addMenuItem={this.addMenuItem}\n                        editMode={this.props.editMode}\n                    />\n                </div>\n                <div>\n                    <div className={classes.SettingsContainer}>\n                        <table className={classes.Table}>\n                            <tbody>\n                                <MenuAddItemsDDSettings\n                                    currentType={this.state.type}\n                                    name={this.state.name}\n                                    newTab={this.state.newTab}\n                                    currentPage={this.state.currentPage}\n                                    all={this.state.all}\n                                    url={this.state.url}\n                                    nameChanged={name => this.nameChanged(name)}\n                                    newTabChanged={newTab =>\n                                        this.newTabChanged(newTab)\n                                    }\n                                    setCurrentPageMain={this.setCurrentPageMain}\n                                    linkChanged={link => this.linkChanged(link)}\n                                />\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        boxesValues: state.builder.present.chosenBoxesValues,\n        changedStyleValues: state.builder.present.changedStyleValues,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        saveToHistory: () => {\n            dispatch(actions.saveToHistory())\n        },\n        changed: (value, valueKey) =>\n            dispatch(\n                actions.changeElementPropertyValue(value, valueKey, false, true)\n            ),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MenuAddItemsDD)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { omit } from 'lodash'\n\nimport * as actions from '../../../../../store/actions/index'\nimport ToolsSection from '../ToolsSection/ToolsSection'\nimport ToolsBlock from '../ToolsSection/ToolsBlock/ToolsBlock'\nimport Aux from '../../../../../hoc/Aux'\nimport SmallButton from '../../../../UI/Buttons/SmallButton/SmallButton'\nimport BigButtonDropDown from '../../../../UI/Buttons/BigButtonDropDown/BigButtonDropDown'\nimport BigButtonWithCheckbox from '../../../../UI/Buttons/BigButtonWithCheckbox/BigButtonWithCheckbox'\nimport MenuAddItemsDD from '../DropDownMenus/MenuAddItemsDD/MenuAddItemsDD'\n\nconst Sections = props => {\n    const currentItems = props.boxesValues.itemsList.filter(\n        item => item.id === props.currentItem\n    )\n    const currentItemValues = currentItems.length > 0 ? currentItems[0] : {}\n    return (\n        <Aux>\n            <ToolsSection label=\"Basic\">\n                <ToolsBlock blockType=\"one\">\n                    <BigButtonDropDown\n                        title=\"Add\"\n                        icon='<svg height=\"30\" viewBox=\"0 0 24 24\" width=\"30\"><path d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"></path></svg>'\n                        doNotRebuild={true}\n                    >\n                        <MenuAddItemsDD\n                            currentItem={props.currentItem}\n                            chooseItem={props.chooseItem}\n                        />\n                    </BigButtonDropDown>\n                </ToolsBlock>\n                <ToolsBlock blockType=\"three\">\n                    <SmallButton\n                        title=\"Delete\"\n                        icon='<svg height=\"16\" viewBox=\"0 0 24 24\" width=\"16\"><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"></path><path d=\"M0 0h24v24H0z\" fill=\"none\"></path></svg>'\n                        buttonClicked={props.removeItem}\n                    />\n                </ToolsBlock>\n            </ToolsSection>\n\n            <ToolsSection label=\"Settings\">\n                <ToolsBlock blockType=\"one\">\n                    <BigButtonDropDown\n                        title=\"Settings\"\n                        icon='<svg height=\"30\" viewBox=\"0 0 24 24\" width=\"30\"><path d=\"M15.95 10.78c.03-.25.05-.51.05-.78s-.02-.53-.06-.78l1.69-1.32c.15-.12.19-.34.1-.51l-1.6-2.77c-.1-.18-.31-.24-.49-.18l-1.99.8c-.42-.32-.86-.58-1.35-.78L12 2.34c-.03-.2-.2-.34-.4-.34H8.4c-.2 0-.36.14-.39.34l-.3 2.12c-.49.2-.94.47-1.35.78l-1.99-.8c-.18-.07-.39 0-.49.18l-1.6 2.77c-.1.18-.06.39.1.51l1.69 1.32c-.04.25-.07.52-.07.78s.02.53.06.78L2.37 12.1c-.15.12-.19.34-.1.51l1.6 2.77c.1.18.31.24.49.18l1.99-.8c.42.32.86.58 1.35.78l.3 2.12c.04.2.2.34.4.34h3.2c.2 0 .37-.14.39-.34l.3-2.12c.49-.2.94-.47 1.35-.78l1.99.8c.18.07.39 0 .49-.18l1.6-2.77c.1-.18.06-.39-.1-.51l-1.67-1.32zM10 13c-1.65 0-3-1.35-3-3s1.35-3 3-3 3 1.35 3 3-1.35 3-3 3z\"></path></svg>'\n                    >\n                        <MenuAddItemsDD\n                            currentItem={props.currentItem}\n                            currentItemValues={currentItemValues}\n                            editMode\n                        />\n                    </BigButtonDropDown>\n                </ToolsBlock>\n                <ToolsBlock blockType=\"one\">\n                    <BigButtonWithCheckbox\n                        title=\"Hidden\"\n                        icon='<svg height=\"30\" viewBox=\"0 0 24 24\" width=\"30\"><path d=\"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"></path></svg>'\n                        clicked={props.hideItem}\n                        checked={props.isHidden}\n                    />\n                </ToolsBlock>\n            </ToolsSection>\n        </Aux>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        pagesStructure: state.website.pagesStructure,\n        boxesValues: state.builder.present.chosenBoxesValues,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changed: (value, valueKey) =>\n            dispatch(\n                actions.changeElementPropertyValue(value, valueKey, false, true)\n            ),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Sections)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { DragDropContext } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport Sortly from 'react-sortly'\n\nimport * as actions from '../../../../../../../store/actions/index'\nimport Svg from '../../../../../../Svg/Svg'\nimport withDragDropContext from '../../../../../../../hoc/withDragDropContext'\n\ntype Props = {\n    items: Array<{}>,\n    changed: (value: [], valueKey: string) => {},\n}\n\nconst MenuItemsDDList = (props: Props) => {\n    const currentItem = props.currentItem\n    const chooseItem = props.chooseItem\n\n    const ItemRenderer = props => {\n        const {\n            name,\n            path,\n            connectDragSource,\n            connectDropTarget,\n            isDragging,\n            isClosestDragging,\n            id,\n            isHomePage,\n            isHidden,\n            isNotPublished,\n            all,\n        } = props\n        const style = {\n            position: 'relative',\n            border: '1px solid #ccc',\n            cursor: 'move',\n            padding: 10,\n            paddingRight: 30,\n            marginBottom: 4,\n            ...(isDragging || isClosestDragging ? { opacity: 0.3 } : null),\n            margin: 10,\n            marginLeft: 10 + path.length * 50,\n            width: 300,\n            outline: currentItem === id ? '1px solid blue' : null,\n        }\n\n        const iconsContainerStyle = {\n            position: 'absolute',\n            top: 6,\n            right: 6,\n            fill: '#555',\n        }\n\n        const el = (\n            <div\n                data-testid={id}\n                style={style}\n                onMouseDown={() => chooseItem(id)}\n            >\n                {name}\n                <div style={iconsContainerStyle}>\n                    {isHomePage ? (\n                        <Svg\n                            datatestid={`home_${id}`}\n                            icon='<svg height=\"20\" viewBox=\"0 0 24 24\" width=\"20\"><path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\"></path></svg>'\n                        />\n                    ) : null}\n                    {isHidden ? (\n                        <Svg\n                            datatestid={`hid_${id}`}\n                            icon='<svg height=\"20\" viewBox=\"0 0 24 24\" width=\"20\"><path d=\"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"></path></svg>'\n                        />\n                    ) : null}\n                    {isNotPublished ? (\n                        <Svg\n                            datatestid={`pub_${id}`}\n                            icon='<svg height=\"20\" viewBox=\"0 0 24 24\" width=\"20\"><path xmlns=\"http://www.w3.org/2000/svg\" d=\"M5 4v2h14V4H5zm0 10h4v6h6v-6h4l-7-7-7 7z\"></path></svg>'\n                        />\n                    ) : null}\n                </div>\n            </div>\n        )\n        return connectDragSource(connectDropTarget(el))\n    }\n\n    const handleMove = (items, index, newIndex) => {\n        const { path } = items[newIndex]\n\n        const parent = items.find(item => item.id === path[path.length - 1])\n\n        // parent should not be all\n        if (parent && parent.all && parent.type === 'page') {\n            return false\n        }\n        return true\n    }\n\n    return (\n        <Sortly\n            items={props.items}\n            itemRenderer={ItemRenderer}\n            onChange={items => props.changed(items, 'itemsList')}\n            onMove={handleMove}\n        />\n    )\n}\n\nconst mapStateToProps = state => {\n    return {}\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changed: (value, valueKey) =>\n            dispatch(\n                actions.changeElementPropertyValue(value, valueKey, false, true)\n            ),\n    }\n}\n\nexport default withDragDropContext(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(MenuItemsDDList)\n)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as classes from './MenuItemsDD.module.css'\nimport * as actions from '../../../../../../store/actions/index'\nimport ToolSet from '../../ToolsSet'\nimport MenuItems from '../../TopMenuSections/MenuItems'\nimport Aux from '../../../../../../hoc/Aux'\nimport MenuItemsDDList from './MenuItemsDDList/MenuItemsDDList'\nimport { remove } from 'react-sortly'\n\ntype Props = {\n    boxesValues: { itemsList: Array<{}> },\n}\n\ntype State = {\n    currentItem: string,\n}\n\nclass MenuItemsDD extends Component<Props, State> {\n    state = {\n        currentItem: '',\n    }\n\n    setCurrentItemChosen = id => this.setState({ currentItem: id })\n\n    handleRemove = () => {\n        const newItems = remove(\n            this.props.boxesValues.itemsList,\n            this.props.boxesValues.itemsList.findIndex(\n                el => parseInt(el.id) === parseInt(this.props.currentItem)\n            )\n        )\n        this.props.changed(newItems, 'itemsList')\n    }\n\n    handleHideItem = (items, currentItemValues) => {\n        currentItemValues.hidden = !currentItemValues.hidden\n        this.props.changed(items, 'itemsList')\n    }\n\n    render() {\n        const items = this.props.boxesValues.itemsList.map(item => {\n            return {\n                ...item,\n                key: 'list_' + item.id,\n            }\n        })\n\n        const currentItems = items.filter(\n            item => item.id === this.state.currentItem\n        )\n        const currentItemValues = currentItems.length > 0 ? currentItems[0] : {}\n        return (\n            <Aux>\n                <header className={classes.Toolbar}>\n                    <div className={classes.ToolSetsContainer}>\n                        <ToolSet isActive>\n                            <MenuItems\n                                currentItem={this.state.currentItem}\n                                chooseItem={this.setCurrentItemChosen}\n                                removeItem={this.handleRemove}\n                                hideItem={() =>\n                                    this.handleHideItem(\n                                        items,\n                                        currentItemValues\n                                    )\n                                }\n                                isHidden={currentItemValues.hidden}\n                            />\n                        </ToolSet>\n                    </div>\n                </header>\n                <div className={classes.Content}>\n                    <MenuItemsDDList\n                        items={items}\n                        chooseItem={this.setCurrentItemChosen}\n                        currentItem={this.state.currentItem}\n                    />\n                </div>\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        boxesValues: state.builder.present.chosenBoxesValues,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changed: (value, valueKey) =>\n            dispatch(\n                actions.changeElementPropertyValue(value, valueKey, false, true)\n            ),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MenuItemsDD)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../../../../store/actions/index'\nimport ToolsSection from '../ToolsSection/ToolsSection'\nimport ToolsBlock from '../ToolsSection/ToolsBlock/ToolsBlock'\nimport Aux from '../../../../../hoc/Aux'\nimport BigButtonDropDown from '../../../../UI/Buttons/BigButtonDropDown/BigButtonDropDown'\nimport MenuStyleDD from '../DropDownMenus/MenuStyleDD/MenuStyleDD'\nimport Checkbox from '../../../../UI/Checkbox/Checkbox'\nimport MenuItemsDD from '../DropDownMenus/MenuItemsDD/MenuItemsDD'\n\ntype Props = {\n    boxesValues: {\n        menuOrientation: 'horizontal' | 'vertical',\n    },\n    changed: (value: string, valueKey: string) => {},\n}\n\nconst Menu = (props: Props) => (\n    <Aux>\n        <ToolsSection label=\"Basic\">\n            <ToolsBlock blockType=\"one\">\n                <BigButtonDropDown\n                    doNotRebuild={true}\n                    title=\"Edit style\"\n                    icon='<svg width=\"30\" height=\"30\" viewBox=\"0 0 24 24\"><path d=\"M18 4V3c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V6h1v4H9v11c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-9h8V4h-3z\"></path></svg>'\n                >\n                    <MenuStyleDD />\n                </BigButtonDropDown>\n            </ToolsBlock>\n            <ToolsBlock blockType=\"one\">\n                <BigButtonDropDown\n                    title=\"Edit items\"\n                    icon='<svg width=\"30\" height=\"30\" viewBox=\"0 0 24 24\"><path d=\"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z\"></path></svg>'\n                >\n                    <MenuItemsDD />\n                </BigButtonDropDown>\n            </ToolsBlock>\n        </ToolsSection>\n        <ToolsSection label=\"Basic\">\n            <ToolsBlock blockType=\"three\">\n                <Checkbox\n                    checked={props.boxesValues.menuOrientation === 'horizontal'}\n                    title=\"Horizontal\"\n                    radio={true}\n                    onChange={() =>\n                        props.changed('horizontal', 'menuOrientation')\n                    }\n                />\n                <Checkbox\n                    checked={props.boxesValues.menuOrientation === 'vertical'}\n                    title=\"Vertical\"\n                    radio={true}\n                    onChange={() =>\n                        props.changed('vertical', 'menuOrientation')\n                    }\n                />\n            </ToolsBlock>\n        </ToolsSection>\n    </Aux>\n)\n\nconst mapStateToProps = state => {\n    return {\n        boxesValues: state.builder.present.chosenBoxesValues,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changed: (value, valueKey) =>\n            dispatch(\n                actions.changeElementPropertyValue(value, valueKey, false, true)\n            ),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Menu)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport classes from './Toolbar.module.css'\nimport ToolSet from './ToolsSet/ToolsSet'\nimport Sections from './ToolsSet/TopMenuSections/Sections'\nimport Boxes from './ToolsSet/TopMenuSections/Boxes'\nimport Text from './ToolsSet/TopMenuSections/Text'\nimport Menu from './ToolsSet/TopMenuSections/Menu'\n\ntype Props = {\n    previewIsOn?: boolean,\n    textEditor?: Object,\n}\n\nexport const toolbar = (props: Props) => (\n    <header className={classes.Toolbar} data-testid=\"outer\">\n        {!props.previewIsOn ? (\n            <div className={classes.ToolSetsContainer} data-testid=\"inner\">\n                <ToolSet title=\"sections\">\n                    <Sections />\n                </ToolSet>\n                <ToolSet title=\"boxes\">\n                    <Boxes />\n                </ToolSet>\n                <ToolSet title=\"text\">\n                    <Text textEditor={props.textEditor} />\n                </ToolSet>\n                <ToolSet title=\"menu\">\n                    <Menu />\n                </ToolSet>\n            </div>\n        ) : null}\n    </header>\n)\n\nconst mapStateToProps = (state, props) => {\n    return {\n        previewIsOn: state.builder.present.preview,\n    }\n}\n\nexport default connect(mapStateToProps)(toolbar)\n","import React from 'react'\nimport type { Node } from 'react'\nimport { connect } from 'react-redux'\n\nimport Aux from '../../hoc/Aux'\nimport classes from './SiteBuilderLayout.module.css'\nimport Toolbar from '../SiteBuilderNavigation/Toolbar/Toolbar'\n\ntype Props = {\n    textEditor?: Object,\n    previewIsOn?: boolean,\n    children: Node,\n}\n\nconst SiteBuilderLayout = (props: Props) => {\n    return (\n        <Aux>\n            <Toolbar textEditor={props.textEditor} />\n            <main\n                data-testid=\"siteBuilderLayoutMain\"\n                className={\n                    !props.previewIsOn\n                        ? classes.Content\n                        : classes.ContentPreview\n                }\n            >\n                {props.children}\n            </main>\n        </Aux>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        previewIsOn: state.builder.present.preview,\n    }\n}\n\nexport default connect(mapStateToProps)(SiteBuilderLayout)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Global } from '@emotion/core'\n\nimport Section from './Section/Section'\nimport * as classes from './SiteBuilder.css.js'\nimport * as actions from '../../store/actions/index'\nimport GoogleFontLoader from 'react-google-font-loader'\nimport { fontsList, subsets } from './fontsList'\nimport Frame, { FrameContextConsumer } from 'react-frame-component'\n// $FlowFixMe\nimport { ScopeProvider } from './scope-provider'\n// $FlowFixMe\nimport { FrameProvider } from './frame-provider'\nimport SiteBuilderLayout from '../../components/SiteBuilderLayout/SiteBuilderLayout'\n\ntype Props = {\n    zoom: number,\n    sections?: Array<string>,\n    currentPage?: string,\n    pagesObjects: {},\n    loadCurrentPageToBuilder: (currentPage: string, pagesObjects: {}) => {},\n    sections: Array<string>,\n    deselectElements: () => {},\n}\n\ntype State = {\n    chosenTextEditor: ?Object,\n}\n\nclass SiteBuilder extends Component<Props, State> {\n    state = {\n        chosenTextEditor: null,\n    }\n\n    handleChooseTextEditor = editor => {\n        this.setState({\n            chosenTextEditor: editor,\n        })\n    }\n\n    componentDidMount() {\n        if (this.props.currentPage && this.props.pagesObjects) {\n            this.props.loadCurrentPageToBuilder(\n                this.props.currentPage,\n                this.props.pagesObjects\n            )\n        }\n    }\n\n    render() {\n        const { props } = this\n        const zoom = props.zoom / 100\n        const size = 100 / zoom + '%'\n        return (\n            <ScopeProvider scope={'#root .App'}>\n                <SiteBuilderLayout textEditor={this.state.chosenTextEditor}>\n                    <GoogleFontLoader\n                        fonts={fontsList}\n                        subsets={subsets}\n                        document={document}\n                    />\n\n                    <Frame\n                        id=\"builderFrame\"\n                        style={{\n                            width: size,\n                            height: size,\n                            msZoom: zoom,\n                            MozTransform: `scale(${zoom})`,\n                            MozTransformOrigin: '0 0',\n                            OTransform: `scale(${zoom})`,\n                            OTransformOrigin: '0 0',\n                            WebkitTransform: `scale(${zoom})`,\n                            WebkitTransformOrigin: '0 0',\n                            border: 'none',\n                            margin: '0',\n                            padding: '0',\n                        }}\n                    >\n                        <FrameContextConsumer>\n                            {({ document, window }) => {\n                                return (\n                                    <FrameProvider>\n                                        <Global\n                                            styles={{\n                                                html: { height: '100%' },\n                                                body: {\n                                                    margin: 0,\n                                                    height: '100%',\n                                                },\n                                                '.frame-root': {\n                                                    height: '100%',\n                                                },\n                                                '.frame-content': {\n                                                    height: '100%',\n                                                },\n                                            }}\n                                        />\n                                        <GoogleFontLoader\n                                            fonts={fontsList}\n                                            subsets={subsets}\n                                            document={document}\n                                        />\n                                        <div\n                                            data-testid=\"siteBuilder\"\n                                            style={classes.PageInnerContent}\n                                            onMouseDown={() =>\n                                                props.deselectElements()\n                                            }\n                                        >\n                                            {props.sections.map(section => (\n                                                <Section\n                                                    key={section}\n                                                    id={section}\n                                                    handleChooseTextEditor={\n                                                        this\n                                                            .handleChooseTextEditor\n                                                    }\n                                                    document={document}\n                                                />\n                                            ))}\n                                        </div>\n                                    </FrameProvider>\n                                )\n                            }}\n                        </FrameContextConsumer>\n                    </Frame>\n                </SiteBuilderLayout>\n            </ScopeProvider>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        zoom: state.builder.present.pageZoom,\n        sections: state.builder.present.sectionsOnPage,\n        currentPage: state.website.currentPage,\n        pagesObjects: state.website.pagesObjects,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        deselectElements: () => dispatch(actions.deselectElements()),\n        loadCurrentPageToBuilder: (currentPage, pagesObjects) =>\n            dispatch(\n                actions.loadCurrentPageToBuilder(currentPage, pagesObjects)\n            ),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SiteBuilder)\n"],"sourceRoot":""}