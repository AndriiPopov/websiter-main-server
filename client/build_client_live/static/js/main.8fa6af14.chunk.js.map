{"version":3,"sources":["utils/basic.js","Menu/Menu.js","Menu/methods/buildItemsForMenu.js","BuilderElement/methods/useEffect.js","BuilderElement/BuilderElement.js","BuilderElement/methods/refineProperties.js","awsConfig.js","App.js","serviceWorker.js","index.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_objectWithoutProperties","source","excluded","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","buildTree","items","buildItem","item","arguments","ownKeys","concat","filter","sym","getOwnPropertyDescriptor","forEach","_objectSpread","children","child","path","id","map","getInheritedPropertyName","charAt","substr","activeKeys","SubMenu1","props","other","title","name","mD","index","url","baseUrl","pageInStructure","homepage","push","style","height","width","onClick","window","location","SubMenu2","MenuElement","useEffect","document","getElementById","container","createElement","setAttribute","body","appendChild","builtItems","hiddenPages","pagesStructure","page","hidden","includes","menuItems","console","log","structureAfterVariables","structure","generatedFrom","parentPluginProps","properties","l","all","slice","buildMenuItems","elementValues","buildItemsForMenu","innerItems","className","itemClass","mode","topMenuBlockClasses","topMenuItemClasses","topMenuItemActiveClasses","popupMenuBlockClasses","popupMenuItemClasses","popupMenuItemActiveClasses","trigger","setBoxProperties","box","refinedProperties","attributes","removeAttribute","replace","match","inheritedPropertyName","attribute","attr","toLowerCase","entities","Entities","BuilderElement","elementRef","useRef","current","Tag","newScript","textContent","parentNode","removeChild","resourcesObjects","currentResource","values","element","result","JSON","parse","stringify","split","shift","sizes","indexW","indexH","isNaN","parseInt","pop","imageRequest","bucket","join","edits","resize","fit","background","r","g","b","alpha","toFormat","btoa","refineProperties","currentPath","tag","childrenTo","isChildren","childrenMainElement","childrenForPlugin","find","itemInn","forPlugin","sourcePlugin","newStructure","pluginsPathArray","routePlugin","fromResource","isHead","isElementFromCMSVariable","parseText","sanitize","allowedTags","allowedAttributes","char","toUpperCase","checkIfCapital","plugin","pluginsStructure","pluginResource","isEqual","ref","Menu","text","innerResult","isHeadOrBody","documentElement","head","innerHTML","domainNoIndex","decode","renderToString","omit","axios","defaults","baseURL","headers","post","common","Accept","App","template","globalSettingsPageId","globalSettingsTemplateId","state","loaded","href","then","response","data","setState","catch","err","this","currentPageItemInStructure","bodyElement","bodyProps","bodyStyle","htmlElement","htmlProps","htmlStyle","refine","currentPageDraft","pageTemplateDraft","resourceVariable","itemValues","CMSVariableSystemName","CMSVariableType","defaultMenuItems","CMSVariableDefaultValue","refinedPropertiesPage","globalSettingsPageDraft","globalSettingsTemplateDraft","refinePropertiesFromCMS","pageResult","resourceDraft","position","color","bottom","Component","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8fa6af14.chunk.js","sourcesContent":["export const checkIfCapital = (char: string) => {\n    if (char === char.toUpperCase() && char !== char.toLowerCase()) {\n        return true\n    }\n}\nfunction _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i] != null ? arguments[i] : {}\n        var ownKeys = Object.keys(source)\n        if (typeof Object.getOwnPropertySymbols === 'function') {\n            ownKeys = ownKeys.concat(\n                Object.getOwnPropertySymbols(source).filter(function(sym) {\n                    return Object.getOwnPropertyDescriptor(\n                        source,\n                        sym\n                    ).enumerable\n                })\n            )\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key])\n        })\n    }\n    return target\n}\n\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true,\n        })\n    } else {\n        obj[key] = value\n    }\n    return obj\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {}\n    var target = _objectWithoutPropertiesLoose(source, excluded)\n    var key, i\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source)\n        for (i = 0; i < sourceSymbolKeys.length; i++) {\n            key = sourceSymbolKeys[i]\n            if (excluded.indexOf(key) >= 0) continue\n            if (!Object.prototype.propertyIsEnumerable.call(source, key))\n                continue\n            target[key] = source[key]\n        }\n    }\n    return target\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {}\n    var target = {}\n    var sourceKeys = Object.keys(source)\n    var key, i\n    for (i = 0; i < sourceKeys.length; i++) {\n        key = sourceKeys[i]\n        if (excluded.indexOf(key) >= 0) continue\n        target[key] = source[key]\n    }\n    return target\n}\n\nexport function buildTree(items) {\n    var buildItem = function buildItem(item) {\n        var data = _objectWithoutProperties(item, ['path'])\n\n        return _objectSpread({}, data, {\n            children: items\n                .filter(function(child) {\n                    return child.path[child.path.length - 1] === item.id\n                })\n                .map(function(child) {\n                    return buildItem(child)\n                }),\n        })\n    }\n\n    var tree = items\n        .filter(function(item) {\n            return item.path.length === 0\n        })\n        .map(function(item) {\n            return buildItem(item)\n        })\n    return tree\n}\n\nexport const getInheritedPropertyName = (value: string) => {\n    const length = value.length\n    if (length > 2) {\n        if (value.charAt(0) === '$' && value.charAt(length - 1) === '$') {\n            return value.substr(1, length - 2)\n        }\n    }\n    return false\n}\n","import React, { useEffect } from 'react'\n// import Menu, { SubMenu, MenuItem } from './MenuModule/index'\nimport Menu, { SubMenu, MenuItem } from 'rc-menu'\nimport buildItemsForMenu from './methods/buildItemsForMenu'\n\nconst activeKeys = []\n\nconst MenuElement = props => {\n    useEffect(() => {\n        if (!document.getElementById('__rc__menu__popup__container__')) {\n            const container = document.createElement('div')\n            container.setAttribute('id', '__rc__menu__popup__container__')\n            container.setAttribute('style', 'z-index:100000;')\n            document.body.appendChild(container)\n        }\n    })\n    const builtItems = buildItemsForMenu(props)\n\n    activeKeys.length = 0\n\n    const innerItems = builtItems.map((item, index) => {\n        if (item.children.length === 0) {\n            const key = item.id + '_' + index\n            if (\n                item.url === props.mD.baseUrl + props.pageInStructure.url ||\n                (item.url === '' && props.pageInStructure.homepage)\n            )\n                activeKeys.push(key)\n            return (\n                <MenuItem\n                    key={item.id + '_' + index}\n                    className={item.properties ? item.properties.itemClass : ''}\n                    mD={props.mD}\n                >\n                    <div\n                        style={{ height: '100%', width: '100%' }}\n                        onClick={() => (window.location = item.url)}\n                    >\n                        {item.name}\n                    </div>\n                </MenuItem>\n            )\n        } else {\n            return (\n                <SubMenu1\n                    item={item}\n                    key={item.id + '_' + index}\n                    pageInStructure={props.pageInStructure}\n                    mD={props.mD}\n                />\n            )\n        }\n    })\n    return (\n        <Menu\n            // prefixCls={'systemclass_menu'}\n            // getPopupContainer={() =>\n            //     document.getElementById('__rc__menu__popup__container__')\n            // }\n            mode=\"horizontal\"\n            topMenuBlockClasses={\n                props.elementValues.properties.topMenuBlockClasses\n            }\n            topMenuItemClasses={\n                props.elementValues.properties.topMenuItemClasses\n            }\n            topMenuItemActiveClasses={\n                props.elementValues.properties.topMenuItemActiveClasses\n            }\n            popupMenuBlockClasses={\n                props.elementValues.properties.popupMenuBlockClasses\n            }\n            popupMenuItemClasses={\n                props.elementValues.properties.popupMenuItemClasses\n            }\n            popupMenuItemActiveClasses={\n                props.elementValues.properties.popupMenuItemActiveClasses\n            }\n            mode={props.elementValues.properties.mode}\n            selectable={false}\n            triggerSubMenuAction={props.elementValues.properties.trigger}\n            activeKeys={activeKeys}\n        >\n            {innerItems}\n        </Menu>\n    )\n}\n\nconst SubMenu1 = props => {\n    const { ...other } = props\n    return (\n        <SubMenu {...other} title={props.item.name} mD={props.mD}>\n            {props.item.children.map((item, index) => {\n                if (item.children.length === 0) {\n                    const key = item.id + '_' + index\n                    if (\n                        item.url ===\n                            props.mD.baseUrl + props.pageInStructure.url ||\n                        (item.url === '' && props.pageInStructure.homepage)\n                    )\n                        activeKeys.push(key)\n                    return (\n                        <MenuItem key={key}>\n                            <div\n                                style={{ height: '100%', width: '100%' }}\n                                onClick={() => (window.location = item.url)}\n                            >\n                                {item.name}\n                            </div>\n                        </MenuItem>\n                    )\n                } else {\n                    return (\n                        <SubMenu2\n                            item={item}\n                            {...other}\n                            key={item.id + '_' + index}\n                            pageInStructure={props.pageInStructure}\n                            mD={props.mD}\n                        />\n                    )\n                }\n            })}\n        </SubMenu>\n    )\n}\n\nconst SubMenu2 = SubMenu1\n\nexport default MenuElement\n","import { buildTree } from '../../utils/basic'\n\nexport default props => {\n    const buildMenuItems = menuItems => {\n        console.log('menuItems')\n        console.log(menuItems)\n        let structureAfterVariables = []\n        const structure = []\n        if (menuItems) {\n            menuItems.forEach(item => {\n                if (item.generatedFrom === 'variable') {\n                    if (props.parentPluginProps[item.name]) {\n                        structureAfterVariables = [\n                            ...structureAfterVariables,\n                            ...props.parentPluginProps[item.name],\n                        ]\n                    }\n                } else {\n                    structureAfterVariables.push(item)\n                }\n            })\n            console.log(structureAfterVariables)\n            console.log(props.mD.baseUrl)\n\n            structureAfterVariables.forEach(item => {\n                if (item.generatedFrom === 'all') {\n                    props.mD.pagesStructure.forEach(page => {\n                        if (!hiddenPages.includes(page.id)) {\n                            console.log(page.url)\n                            console.log(props.mD.baseUrl + page.url)\n                            structure.push({\n                                name: page.name,\n                                properties: item.properties,\n                                id: item.id + page.id,\n                                path: [\n                                    ...item.path,\n                                    ...page.path.map(l => item.id + l),\n                                ],\n                                url: props.mD.baseUrl + page.url,\n                            })\n                        }\n                    })\n                } else if (item.all) {\n                    props.mD.pagesStructure.forEach(page => {\n                        if (\n                            page.path.includes(item.generatedFrom) &&\n                            !hiddenPages.includes(page.id)\n                        ) {\n                            structure.push({\n                                id: item.id + page.id,\n                                name: page.name,\n                                properties: item.properties,\n                                path: [\n                                    ...item.path,\n                                    ...page.path\n                                        .slice(\n                                            page.path.indexOf(\n                                                item.generatedFrom\n                                            ) - 1\n                                        )\n                                        .map(l => item.id + l),\n                                ],\n                                url: props.mD.baseUrl + page.url,\n                            })\n                        }\n                    })\n                } else if (item.generatedFrom !== 'link') {\n                    props.mD.pagesStructure.forEach(page => {\n                        if (\n                            page.id === item.generatedFrom &&\n                            !hiddenPages.includes(page.id)\n                        ) {\n                            structure.push({\n                                id: item.id,\n                                name: item.name,\n                                properties: item.properties,\n                                path: item.path,\n                                url: props.mD.baseUrl + page.url,\n                            })\n                        }\n                    })\n                } else if (item.generatedFrom === 'link') {\n                    structure.push({\n                        id: item.id,\n                        name: item.name,\n                        path: item.path,\n                        url: item.properties ? item.properties.url || '' : '',\n                        properties: item.properties,\n                    })\n                }\n            })\n        }\n        return structure\n    }\n    const hiddenPages = []\n    props.mD.pagesStructure.forEach(page => {\n        if (page.hidden) hiddenPages.push(page.id)\n    })\n    props.mD.pagesStructure.forEach(page => {\n        page.path.forEach(id => {\n            if (hiddenPages.includes(id)) {\n                hiddenPages.push(page.id)\n            }\n        })\n    })\n\n    return buildTree(buildMenuItems(props.elementValues.menuItems))\n}\n","import { getInheritedPropertyName } from '../../utils/basic'\n\nimport type Props from '../BuilderElement'\n\nexport const setBoxProperties = (\n    box: HTMLElement,\n    refinedProperties: {},\n    props: Props,\n    elementValues\n) => {\n    while (box.attributes.length > 0)\n        box.removeAttribute(box.attributes[0].name)\n\n    if (elementValues.style) {\n        const style = elementValues.style.replace(/\\$[^:;\\$\\s]*\\$/g, match => {\n            const inheritedPropertyName = getInheritedPropertyName(match)\n            return inheritedPropertyName\n                ? props.parentPluginProps[inheritedPropertyName] || ''\n                : ''\n        })\n        box.setAttribute('style', style)\n    }\n\n    for (let attribute in refinedProperties) {\n        const attr = attribute.toLowerCase()\n        switch (attr) {\n            case 'style':\n                break\n            case '':\n                break\n            case 'href':\n                if (\n                    refinedProperties[attr].indexOf('http://') > -1 ||\n                    refinedProperties[attr].indexOf('https://') > -1\n                ) {\n                    box.setAttribute('href', refinedProperties[attr])\n                } else {\n                    box.setAttribute(\n                        'href',\n                        props.mD.baseUrl + refinedProperties[attr]\n                    )\n                }\n                break\n            default:\n                box.setAttribute(attr, refinedProperties[attr])\n                break\n        }\n    }\n}\n","import React, { useRef, useEffect } from 'react'\nimport { isEqual, omit } from 'lodash'\nimport parse from 'html-react-parser'\nimport sanitize from 'sanitize-html'\nimport Menu from '../Menu/Menu'\nimport { renderToString } from 'react-dom/server'\n\nimport { checkIfCapital, getInheritedPropertyName } from '../utils/basic'\nimport { setBoxProperties } from './methods/useEffect'\nimport refineProperties from './methods/refineProperties'\nimport { AllHtmlEntities as Entities } from 'html-entities'\n\nconst entities = new Entities()\n\ntype Props = {\n    element: pageStructureElementType,\n    structure: pageStructureType,\n    pagesStructure: filesStructureType,\n    pluginsStructure: filesStructureType,\n    resourcesObjects: resourcesObjectsType,\n    pluginsPathArray: Array<{}>,\n}\n\nconst _BuilderElement = (props: Props) => {\n    const elementRef = useRef(null)\n\n    useEffect(() => {\n        const box = elementRef.current\n        if (box && elementValues) {\n            if (Tag === 'script') {\n                const newScript = document.createElement('script')\n                newScript.textContent = box.textContent\n                setBoxProperties(\n                    newScript,\n                    refinedProperties,\n                    props,\n                    elementValues\n                )\n\n                box.parentNode.appendChild(newScript)\n                box.parentNode.removeChild(box)\n            } else {\n                setBoxProperties(box, refinedProperties, props, elementValues)\n            }\n        }\n    })\n\n    const elementValues =\n        props.mD.resourcesObjects[props.currentResource].values[\n            props.element.id\n        ] || {}\n\n    if (!elementValues) {\n        return null\n    }\n    const refinedProperties = refineProperties({ ...props }, elementValues)\n\n    const currentPath = [...props.element.path, props.element.id]\n\n    let Tag = props.element.tag || 'div'\n\n    /* Tag = Tag.replace(/[^a-zA-Z]/g, '') */\n\n    Tag = Tag.length > 0 ? Tag : 'div'\n\n    let result = null\n    if (props.element.childrenTo) {\n        result = null\n    } else if (props.element.isChildren) {\n        const childrenMainElement = props.childrenForPlugin.find(\n            itemInn =>\n                itemInn.childrenTo === props.element.id &&\n                itemInn.forPlugin === props.sourcePlugin\n        )\n\n        if (childrenMainElement) {\n            const newStructure = props.childrenForPlugin.filter(itemInn =>\n                itemInn.path.includes(childrenMainElement.id)\n            )\n\n            result = newStructure\n                .filter(itemInn => {\n                    if (itemInn.path.length > 0) {\n                        if (\n                            itemInn.path[itemInn.path.length - 1] ===\n                            childrenMainElement.id\n                        )\n                            return true\n                    }\n                    return false\n                })\n                .map(item => (\n                    <BuilderElement\n                        key={item.id}\n                        structure={newStructure}\n                        element={item}\n                        pluginsPathArray={props.pluginsPathArray}\n                        sourcePlugin={childrenMainElement.sourcePlugin}\n                        routePlugin={props.routePlugin}\n                        currentResource={item.fromResource}\n                        parentPluginProps={props.parentPluginProps}\n                        childrenForPlugin={props.childrenForPlugin}\n                        pageInStructure={props.pageInStructure}\n                        isHead={props.isHead}\n                        mD={props.mD}\n                    />\n                ))\n        }\n    } else if (props.element.isElementFromCMSVariable) {\n        const inheritedPropertyName = props.element.tag\n\n        let parseText = ''\n\n        if (inheritedPropertyName) {\n            if (props.parentPluginProps[inheritedPropertyName]) {\n                parseText = props.parentPluginProps[inheritedPropertyName]\n            }\n        }\n\n        return parse(\n            sanitize(parseText, {\n                allowedTags: false,\n                allowedAttributes: false,\n            })\n        )\n    } else if (checkIfCapital(Tag.charAt(0))) {\n        const plugin = props.mD.pluginsStructure.find(item => item.name === Tag)\n        if (plugin) {\n            if (!plugin.hidden) {\n                const pluginResource = props.mD.resourcesObjects[plugin.id]\n\n                //Pass children to plugin\n                const childrenForPlugin = [\n                    ...props.structure\n                        .filter(itemInn =>\n                            itemInn.path.includes(props.element.id)\n                        )\n                        .map(itemInn => ({\n                            ...itemInn,\n                            fromResource: props.currentResource,\n                        })),\n                    ...(props.childrenForPlugin ? props.childrenForPlugin : []),\n                ]\n\n                if (!pluginResource.structure) return\n\n                result = pluginResource.structure\n                    .filter(itemInn =>\n                        isEqual(itemInn.path, [\n                            pluginResource.structure.filter(\n                                item => item.path.length === 0\n                            )[0].id,\n                        ])\n                    )\n                    .map(itemInn => {\n                        if (\n                            props.pluginsPathArray.find(\n                                item => item.plugin === plugin.id\n                            )\n                        ) {\n                            return null\n                        }\n                        return (\n                            <BuilderElement\n                                key={itemInn.id}\n                                structure={pluginResource.structure}\n                                element={itemInn}\n                                sourcePlugin={plugin.id}\n                                routePlugin={\n                                    props.routePlugin || props.element.id\n                                }\n                                pluginsPathArray={[\n                                    ...props.pluginsPathArray,\n                                    {\n                                        id: props.element.id,\n                                        plugin: plugin.id,\n                                    },\n                                ]}\n                                currentResource={plugin.id}\n                                parentPluginProps={refinedProperties}\n                                childrenForPlugin={childrenForPlugin}\n                                pageInStructure={props.pageInStructure}\n                                isHead={props.isHead}\n                                mD={props.mD}\n                            />\n                        )\n                    })\n            }\n        }\n    } else {\n        if (Tag === 'websiterMenu') {\n            result = (\n                <div ref={elementRef}>\n                    <Menu\n                        element={props.element}\n                        elementValues={elementValues}\n                        parentPluginProps={props.parentPluginProps}\n                        childrenForPlugin={props.childrenForPlugin}\n                        pageInStructure={props.pageInStructure}\n                        mD={props.mD}\n                    />\n                </div>\n            )\n        } else if (Tag === 'richEditor') {\n            return parse(\n                sanitize(elementValues.textContent, {\n                    allowedTags: false,\n                    allowedAttributes: false,\n                })\n            )\n        } else if (props.element.text) {\n            if (elementValues.textContent) {\n                result = elementValues.textContent.replace(\n                    /\\$[^:;\\$\\s]*\\$/g,\n                    match => {\n                        const inheritedPropertyName = getInheritedPropertyName(\n                            match\n                        )\n                        return inheritedPropertyName\n                            ? props.parentPluginProps[inheritedPropertyName] ||\n                                  ''\n                            : ''\n                    }\n                )\n            }\n        } else {\n            const innerResult = props.structure\n                .filter(item => isEqual(item.path, currentPath))\n                .map(item => (\n                    <BuilderElement\n                        key={item.id}\n                        structure={props.structure}\n                        element={item}\n                        pluginsPathArray={props.pluginsPathArray}\n                        sourcePlugin={props.sourcePlugin}\n                        routePlugin={props.routePlugin}\n                        currentResource={props.currentResource}\n                        parentPluginProps={props.parentPluginProps}\n                        childrenForPlugin={props.childrenForPlugin}\n                        pageInStructure={props.pageInStructure}\n                        isHead={\n                            !props.isHead\n                                ? item.id === 'element_0' && props.isHeadOrBody\n                                    ? true\n                                    : false\n                                : true\n                        }\n                        isHeadOrBody={\n                            props.isHeadOrBody\n                                ? props.element.id === 'element_01'\n                                    ? true\n                                    : false\n                                : false\n                        }\n                        mD={props.mD}\n                    />\n                ))\n\n            if (props.isHeadOrBody) {\n                result = innerResult\n                if (props.element.id === 'element_01') {\n                    setBoxProperties(\n                        document.documentElement,\n                        refinedProperties,\n                        props,\n                        elementValues\n                    )\n                } else if (props.element.id === 'element_0') {\n                    setBoxProperties(\n                        document.head,\n                        refinedProperties,\n                        props,\n                        elementValues\n                    )\n                    document.head.innerHTML =\n                        document.head.innerHTML +\n                        (props.mD.domainNoIndex && props.mD.baseUrl\n                            ? '<meta name=\"robots\" content=\"noindex\">'\n                            : ' ') +\n                        entities.decode(renderToString(result))\n\n                    return null\n                } else if (props.element.id === 'element_1') {\n                    setBoxProperties(\n                        document.body,\n                        refinedProperties,\n                        props,\n                        elementValues\n                    )\n                }\n            } else {\n                if (\n                    [\n                        'area',\n                        'base',\n                        'br',\n                        'col',\n                        'embed',\n                        'hr',\n                        'img',\n                        'input',\n                        'keygen',\n                        'link',\n                        'meta',\n                        'param',\n                        'source',\n                        'track',\n                        'wbr',\n                    ].includes(Tag)\n                ) {\n                    if (props.isHead) {\n                        result = (\n                            <Tag\n                                {...omit(refinedProperties, ['class', 'for'])}\n                            />\n                        )\n                    } else {\n                        result = <Tag ref={elementRef} />\n                    }\n                } else {\n                    if (props.isHead) {\n                        result = (\n                            <Tag {...omit(refinedProperties, ['class', 'for'])}>\n                                {innerResult}\n                            </Tag>\n                        )\n                    } else {\n                        result = <Tag ref={elementRef}>{innerResult}</Tag>\n                    }\n                }\n            }\n        }\n    }\n    return result\n}\n\nconst BuilderElement = _BuilderElement\n\nexport default BuilderElement\n","import { getInheritedPropertyName } from '../../utils/basic'\nimport { CloudFrontUrl, bucket } from '../../awsConfig'\n\nimport type Props from '../BuilderElement'\n\nexport default (props: Props, elementValues) => {\n    const result = {}\n    for (let attribute in elementValues.properties) {\n        const inheritedPropertyName = getInheritedPropertyName(\n            elementValues.properties[attribute]\n        )\n        result[attribute] = inheritedPropertyName\n            ? props.parentPluginProps[inheritedPropertyName]\n            : elementValues.properties[attribute]\n        if (result[attribute])\n            result[attribute] = JSON.parse(\n                JSON.stringify(result[attribute]).replace(\n                    // /\\$[^:;\\$\\s]*\\$/g,\n                    /\\$[A-Za-z0-9]*\\$/g,\n                    match => {\n                        const inheritedPropertyName = getInheritedPropertyName(\n                            match\n                        )\n                        return inheritedPropertyName\n                            ? props.parentPluginProps[inheritedPropertyName] ||\n                                  ''\n                            : ''\n                    }\n                )\n            )\n        if (attribute === 'src') {\n            let url = result[attribute] || ''\n            const path = url.split('/')\n            if (path.length > 1) {\n                if (path[0] === 'websiter') {\n                    path.shift()\n                    let width, height\n                    if (path.length > 1) {\n                        const sizes = path[path.length - 1]\n                        const indexW = sizes.indexOf('w')\n                        const indexH = sizes.indexOf('h')\n                        if (indexW > -1 && indexH > -1) {\n                            if (indexW < indexH) {\n                                width = sizes.substr(indexW + 1, indexH - 1)\n                                height = sizes.substr(indexH + 1)\n                            } else {\n                                height = sizes.substr(indexH + 1, indexW - 1)\n                                width = sizes.substr(indexW + 1)\n                            }\n                        } else {\n                            if (indexW > -1) width = sizes.substr(indexW + 1)\n                            if (indexH > -1) height = sizes.substr(indexH + 1)\n                        }\n                    }\n\n                    if (isNaN(width)) width = null\n                    else width = parseInt(width)\n                    if (isNaN(height)) height = null\n                    else height = parseInt(height)\n\n                    if (width || height) {\n                        path.pop()\n                    }\n\n                    const imageRequest = JSON.stringify({\n                        bucket: bucket,\n                        key: path.join('/'),\n                        edits: {\n                            resize: {\n                                width: width || '',\n                                height: height || null,\n                                fit: 'cover',\n                                background: { r: 0, g: 0, b: 0, alpha: 0 },\n                            },\n                            toFormat: 'png',\n                        },\n                    })\n\n                    url = `${CloudFrontUrl}/${btoa(imageRequest)}`\n                    result[attribute] = url\n                }\n            }\n        }\n    }\n\n    return { ...props.parentPluginProps, ...result }\n}\n\nexport const refinePropertiesFromCMS = mD => {\n    const refine = (currentPageDraft, pageTemplateDraft) => {\n        const result = {}\n        if (pageTemplateDraft && currentPageDraft)\n            pageTemplateDraft.structure.forEach(item => {\n                if (item.path.length > 0) {\n                    if (item.path[0] === 'element_02') {\n                        const resourceVariable =\n                            currentPageDraft.values[item.id]\n\n                        const itemValues = pageTemplateDraft.values[item.id]\n                        if (itemValues.CMSVariableSystemName)\n                            if (itemValues.CMSVariableType === 'menuItems') {\n                                result[\n                                    itemValues.CMSVariableSystemName\n                                ] = resourceVariable\n                                    ? resourceVariable.menuItems\n                                        ? resourceVariable.menuItems.length > 0\n                                            ? resourceVariable.menuItems\n                                            : itemValues.defaultMenuItems\n                                        : itemValues.defaultMenuItems\n                                    : itemValues.defaultMenuItems\n                            } else {\n                                result[\n                                    itemValues.CMSVariableSystemName\n                                ] = resourceVariable\n                                    ? resourceVariable.value ||\n                                      itemValues.CMSVariableDefaultValue\n                                    : itemValues.CMSVariableDefaultValue\n                            }\n                    }\n                }\n            })\n        return result\n    }\n    const refinedPropertiesPage = refine(\n        mD.currentPageDraft,\n        mD.pageTemplateDraft\n    )\n    const refinedPropertiesGlobal = refine(\n        mD.globalSettingsPageDraft,\n        mD.globalSettingsTemplateDraft\n    )\n    return { ...refinedPropertiesGlobal, ...refinedPropertiesPage }\n}\n","export const bucket = 'websiter'\nexport const CloudFrontUrl = 'https://d397lp77nj14b9.cloudfront.net/'\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport BuilderElement from './BuilderElement/BuilderElement'\nimport { refinePropertiesFromCMS } from './BuilderElement/methods/refineProperties'\n\nif (process.env.NODE_ENV === 'development') {\n    axios.defaults.baseURL = 'http://api.websiter.dev:5000'\n} else {\n    axios.defaults.baseURL = 'https://api.websiter.dev'\n}\n\naxios.defaults.headers.post['Content-Type'] = 'application/json'\naxios.defaults.headers.common.Accept = 'application/json'\naxios.defaults.headers.common.Accept = 'application/json'\n\nclass App extends Component {\n    mD = {\n        resourcesObjects: {},\n        page: '',\n        template: '',\n        structure: [],\n        pagesStructure: [],\n        pluginsStructure: [],\n        baseUrl: '',\n        domainNoIndex: false,\n        globalSettingsPageId: '',\n        globalSettingsTemplateId: '',\n    }\n\n    state = {\n        loaded: false,\n    }\n\n    componentDidMount() {\n        return axios\n            .post(\n                '/api/resources/live',\n                JSON.stringify({\n                    url: window.location.href,\n                })\n            )\n            .then(response => {\n                this.mD = {\n                    ...response.data,\n                    structure:\n                        response.data.resourcesObjects[response.data.template]\n                            .structure,\n                }\n                this.setState({ loaded: true })\n            })\n            .catch(err => {})\n    }\n\n    render() {\n        const { mD } = this\n\n        const currentPageItemInStructure = mD.pagesStructure.find(\n            item => item.id === mD.page\n        )\n        if (mD.structure.length > 0) {\n            const bodyElement = mD.structure.filter(\n                item => item.path.length === 1\n            )[1]\n            const bodyProps = bodyElement.properties\n            const bodyStyle = bodyElement.style\n            if (bodyStyle) bodyProps.style = bodyStyle\n            for (let attr in bodyProps) {\n                document.body.setAttribute(attr, bodyProps[attr])\n            }\n\n            const htmlElement = mD.structure.filter(\n                item => item.path.length === 0\n            )[0]\n            const htmlProps = htmlElement.properties\n            const htmlStyle = htmlElement.style\n            if (htmlStyle) htmlProps.style = htmlStyle\n            for (let attr in htmlProps) {\n                document.documentElement.setAttribute(attr, htmlProps[attr])\n            }\n\n            const refinedProperties = refinePropertiesFromCMS({\n                pageTemplateDraft: mD.resourcesObjects[mD.template],\n                currentPageDraft: mD.resourcesObjects[mD.page],\n                globalSettingsPageDraft:\n                    mD.resourcesObjects[mD.globalSettingsPageId],\n                globalSettingsTemplateDraft:\n                    mD.resourcesObjects[mD.globalSettingsTemplateId],\n            })\n            const pageResult = mD.structure\n                .filter(itemInn => itemInn.id === 'element_01')\n                .map((itemInn, index) => {\n                    const result = (\n                        <BuilderElement\n                            key={itemInn.id}\n                            structure={mD.structure}\n                            element={itemInn}\n                            resourceDraft={\n                                mD.template\n                                    ? mD.resourcesObjects[mD.template]\n                                    : {}\n                            }\n                            currentResource={mD.template}\n                            isHeadOrBody={true}\n                            pluginsPathArray={[]}\n                            pageInStructure={currentPageItemInStructure}\n                            parentPluginProps={refinedProperties}\n                            mD={mD}\n                        />\n                    )\n                    return result\n                })\n            return (\n                <>\n                    {pageResult}{' '}\n                    <div\n                        style={{\n                            position: 'fixed',\n                            width: '100%',\n                            height: '50px',\n                            background: 'black',\n                            color: 'white',\n                            bottom: '0px',\n                        }}\n                    >\n                        This website has been built with and is hosted on\n                        <a href=\"https://websiter.dev/\">Websiter.dev</a>.{' '}\n                        <a href=\"https://websiter.dev/\">\n                            Build your website with the power of Websiter.\n                        </a>\n                    </div>\n                </>\n            )\n        } else {\n            return null\n        }\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.body);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}